{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Config",
  "description": "Configuration struct to define settings for self-hosted Grafbase gateway.",
  "type": "object",
  "properties": {
    "authentication": {
      "description": "Authentication configuration",
      "default": null,
      "anyOf": [
        {
          "$ref": "#/definitions/AuthenticationConfig"
        },
        {
          "type": "null"
        }
      ]
    },
    "cors": {
      "description": "Cross-origin resource sharing settings",
      "default": null,
      "anyOf": [
        {
          "$ref": "#/definitions/CorsConfig"
        },
        {
          "type": "null"
        }
      ]
    },
    "csrf": {
      "description": "Cross-site request forgery settings",
      "allOf": [
        {
          "$ref": "#/definitions/CsrfConfig"
        }
      ]
    },
    "entity_caching": {
      "description": "Global configuration for entity caching",
      "default": {
        "enabled": null,
        "storage": "memory",
        "redis": {
          "url": "redis://localhost:6379",
          "key_prefix": "grafbase-cache",
          "tls": null
        },
        "ttl": null
      },
      "allOf": [
        {
          "$ref": "#/definitions/EntityCachingConfig"
        }
      ]
    },
    "gateway": {
      "description": "General settings for the gateway server",
      "allOf": [
        {
          "$ref": "#/definitions/GatewayConfig"
        }
      ]
    },
    "graph": {
      "description": "Graph location and features, such as introspection",
      "allOf": [
        {
          "$ref": "#/definitions/GraphConfig"
        }
      ]
    },
    "headers": {
      "description": "Header bypass configuration",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/HeaderRule"
      }
    },
    "health": {
      "description": "Health check endpoint configuration",
      "default": {
        "enabled": true,
        "listen": null,
        "path": "/health"
      },
      "allOf": [
        {
          "$ref": "#/definitions/HealthConfig"
        }
      ]
    },
    "hooks": {
      "description": "Hooks configuration",
      "default": null,
      "anyOf": [
        {
          "$ref": "#/definitions/HooksWasiConfig"
        },
        {
          "type": "null"
        }
      ]
    },
    "network": {
      "description": "Server bind settings",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkConfig"
        }
      ]
    },
    "operation_limits": {
      "description": "Graph operation limit settings",
      "anyOf": [
        {
          "$ref": "#/definitions/OperationLimitsConfig"
        },
        {
          "type": "null"
        }
      ]
    },
    "request_body_limit": {
      "description": "Maximum size of the request body in bytes",
      "default": 2,
      "type": "integer",
      "format": "int64"
    },
    "subgraphs": {
      "description": "Subgraph configuration",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/SubgraphConfig"
      }
    },
    "telemetry": {
      "description": "Telemetry settings",
      "allOf": [
        {
          "$ref": "#/definitions/TelemetryConfig"
        }
      ]
    },
    "tls": {
      "description": "Server TLS settings",
      "anyOf": [
        {
          "$ref": "#/definitions/TlsConfig"
        },
        {
          "type": "null"
        }
      ]
    },
    "trusted_documents": {
      "description": "Configuration for Trusted Documents.",
      "allOf": [
        {
          "$ref": "#/definitions/TrustedDocumentsConfig"
        }
      ]
    }
  },
  "additionalProperties": false,
  "definitions": {
    "AccessLogsConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enable writing access logs",
          "default": false,
          "type": "boolean"
        },
        "mode": {
          "description": "What happens if the log channel is full",
          "allOf": [
            {
              "$ref": "#/definitions/LogMode"
            }
          ]
        },
        "path": {
          "description": "The path to the access log files",
          "default": "",
          "type": "string"
        },
        "rotate": {
          "description": "How often logs are rotated.",
          "allOf": [
            {
              "$ref": "#/definitions/RotateMode"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "AnyOrAsciiStringArray": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "any"
          ]
        },
        {
          "type": "object",
          "required": [
            "explicit"
          ],
          "properties": {
            "explicit": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "AnyOrHttpMethodArray": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "any"
          ]
        },
        {
          "type": "object",
          "required": [
            "explicit"
          ],
          "properties": {
            "explicit": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HttpMethod"
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "AnyOrUrlArray": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "any"
          ]
        },
        {
          "type": "object",
          "required": [
            "explicit"
          ],
          "properties": {
            "explicit": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "AuthenticationConfig": {
      "description": "Configures the GraphQL server JWT authentication",
      "type": "object",
      "required": [
        "providers"
      ],
      "properties": {
        "providers": {
          "description": "Enabled authentication providers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthenticationProvider"
          }
        }
      }
    },
    "AuthenticationHeader": {
      "type": "object",
      "required": [
        "name",
        "value_prefix"
      ],
      "properties": {
        "name": {
          "description": "The name of the header the token is sent from",
          "type": "string"
        },
        "value_prefix": {
          "description": "The prefix of the header value, typically `Bearer `",
          "type": "string"
        }
      }
    },
    "AuthenticationProvider": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "jwt"
          ],
          "properties": {
            "jwt": {
              "$ref": "#/definitions/JwtProvider"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "BatchExportConfig": {
      "description": "Configuration for batched exports",
      "type": "object",
      "properties": {
        "max_concurrent_exports": {
          "description": "Maximum number of concurrent exports\n\nLimits the number of spawned tasks for exports and thus resources consumed by an exporter. A value of 1 will cause exports to be performed synchronously on the [`BatchSpanProcessor`] task. The default is 1.",
          "default": 1,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "max_export_batch_size": {
          "description": "The maximum number of spans to process in a single batch. If there are more than one batch worth of spans then it processes multiple batches of spans one batch after the other without any delay. The default value is 512.",
          "default": 512,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "max_queue_size": {
          "description": "The maximum queue size to buffer spans for delayed processing. If the queue gets full it drops the spans. The default value of is 2048.",
          "default": 2048,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "scheduled_delay": {
          "description": "The delay, in seconds, between two consecutive processing of batches. The default value is 5 seconds.",
          "default": "PT5S",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BatchingConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "If batching should be enabled.",
          "default": false,
          "type": "boolean"
        },
        "limit": {
          "description": "How many queries can a batch have.",
          "default": null,
          "type": [
            "integer",
            "null"
          ],
          "format": "uint8",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "CorsConfig": {
      "type": "object",
      "properties": {
        "allow_credentials": {
          "description": "If false (or not defined), credentials are not allowed in requests",
          "default": false,
          "type": "boolean"
        },
        "allow_headers": {
          "description": "Headers allowed in incoming requests",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/AnyOrAsciiStringArray"
            },
            {
              "type": "null"
            }
          ]
        },
        "allow_methods": {
          "description": "HTTP methods allowed to the endpoint.",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/AnyOrHttpMethodArray"
            },
            {
              "type": "null"
            }
          ]
        },
        "allow_origins": {
          "description": "Origins from which we allow requests",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/AnyOrUrlArray"
            },
            {
              "type": "null"
            }
          ]
        },
        "allow_private_network": {
          "description": "If set, allows browsers from private network to connect",
          "default": false,
          "type": "boolean"
        },
        "expose_headers": {
          "description": "Headers exposed from the OPTIONS request",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/AnyOrAsciiStringArray"
            },
            {
              "type": "null"
            }
          ]
        },
        "max_age": {
          "description": "Maximum time between OPTIONS and the next request",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/Duration"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "CsrfConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "DerivedComponent": {
      "description": "Which of the derived components to include in the signature:\n\nhttps://www.rfc-editor.org/rfc/rfc9421.html#name-derived-components",
      "type": "string",
      "enum": [
        "method",
        "target_uri",
        "authority",
        "scheme",
        "request_target",
        "path"
      ]
    },
    "Duration": {
      "type": "object",
      "required": [
        "nanos",
        "secs"
      ],
      "properties": {
        "nanos": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "secs": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "EntityCachingConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": null,
          "type": [
            "boolean",
            "null"
          ]
        },
        "redis": {
          "default": {
            "url": "redis://localhost:6379",
            "key_prefix": "grafbase-cache",
            "tls": null
          },
          "allOf": [
            {
              "$ref": "#/definitions/EntityCachingRedisConfig"
            }
          ]
        },
        "storage": {
          "default": "memory",
          "allOf": [
            {
              "$ref": "#/definitions/EntityCachingStorage"
            }
          ]
        },
        "ttl": {
          "description": "The ttl to store cache entries with.  Defaults to 60s",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/Duration"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "EntityCachingRedisConfig": {
      "type": "object",
      "properties": {
        "key_prefix": {
          "default": "grafbase-cache",
          "type": "string"
        },
        "tls": {
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/EntityCachingRedisTlsConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "url": {
          "default": "redis://localhost:6379",
          "type": "string",
          "format": "uri"
        }
      },
      "additionalProperties": false
    },
    "EntityCachingRedisTlsConfig": {
      "type": "object",
      "properties": {
        "ca": {
          "type": [
            "string",
            "null"
          ]
        },
        "cert": {
          "type": [
            "string",
            "null"
          ]
        },
        "key": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "EntityCachingStorage": {
      "type": "string",
      "enum": [
        "memory",
        "redis"
      ]
    },
    "ExportersConfig": {
      "type": "object",
      "properties": {
        "otlp": {
          "anyOf": [
            {
              "$ref": "#/definitions/OtlpExporterConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "stdout": {
          "anyOf": [
            {
              "$ref": "#/definitions/StdoutExporterConfig"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "GatewayConfig": {
      "type": "object",
      "properties": {
        "access_logs": {
          "description": "Access logs configuration",
          "allOf": [
            {
              "$ref": "#/definitions/AccessLogsConfig"
            }
          ]
        },
        "batching": {
          "description": "Query batching configuration",
          "allOf": [
            {
              "$ref": "#/definitions/BatchingConfig"
            }
          ]
        },
        "message_signatures": {
          "description": "Global message signatures config",
          "default": {
            "enabled": null,
            "algorithm": null,
            "key": null,
            "expiry": null,
            "headers": {
              "include": [],
              "exclude": []
            },
            "derived_components": [],
            "signature_parameters": []
          },
          "allOf": [
            {
              "$ref": "#/definitions/MessageSignaturesConfig"
            }
          ]
        },
        "rate_limit": {
          "description": "Global rate limiting configuration",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/RateLimitConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "retry": {
          "description": "Global retry configuration",
          "allOf": [
            {
              "$ref": "#/definitions/RetryConfig"
            }
          ]
        },
        "subgraph_timeout": {
          "description": "Default timeout for subgraph requests.",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/Duration"
            },
            {
              "type": "null"
            }
          ]
        },
        "timeout": {
          "description": "Timeout for gateway requests.",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/Duration"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "GraphConfig": {
      "type": "object",
      "properties": {
        "introspection": {
          "default": false,
          "type": "boolean"
        },
        "path": {
          "default": null,
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "GraphRateLimit": {
      "type": "object",
      "required": [
        "duration",
        "limit"
      ],
      "properties": {
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "limit": {
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "HeaderRule": {
      "description": "Defines a header rule, executed in order before anything else in the engine.",
      "oneOf": [
        {
          "description": "Forward the header to the subgraphs.",
          "type": "object",
          "oneOf": [
            {
              "description": "A regex pattern matching multiple headers.",
              "type": "object",
              "required": [
                "Pattern"
              ],
              "properties": {
                "Pattern": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            {
              "description": "A static single name.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ],
          "required": [
            "rule"
          ],
          "properties": {
            "default": {
              "description": "If header is not present, insert this value.",
              "type": [
                "string",
                "null"
              ]
            },
            "rename": {
              "description": "Use this name instead of the original when forwarding.",
              "type": [
                "string",
                "null"
              ]
            },
            "rule": {
              "type": "string",
              "enum": [
                "forward"
              ]
            }
          }
        },
        {
          "description": "Insert a new static header.",
          "type": "object",
          "required": [
            "name",
            "rule",
            "value"
          ],
          "properties": {
            "name": {
              "description": "The name of the header.",
              "type": "string"
            },
            "rule": {
              "type": "string",
              "enum": [
                "insert"
              ]
            },
            "value": {
              "description": "The value of the header.",
              "type": "string"
            }
          }
        },
        {
          "description": "Remove the header.",
          "type": "object",
          "oneOf": [
            {
              "description": "A regex pattern matching multiple headers.",
              "type": "object",
              "required": [
                "Pattern"
              ],
              "properties": {
                "Pattern": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            {
              "description": "A static single name.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ],
          "required": [
            "rule"
          ],
          "properties": {
            "rule": {
              "type": "string",
              "enum": [
                "remove"
              ]
            }
          }
        },
        {
          "description": "Forward the header to the subgraphs together with a renamed copy.",
          "type": "object",
          "required": [
            "name",
            "rename",
            "rule"
          ],
          "properties": {
            "default": {
              "description": "If header is not present, insert this value.",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "Name or pattern of the header to be forwarded.",
              "type": "string"
            },
            "rename": {
              "description": "Use this name instead of the original when forwarding.",
              "type": "string"
            },
            "rule": {
              "type": "string",
              "enum": [
                "rename_duplicate"
              ]
            }
          }
        }
      ]
    },
    "Headers": {
      "description": "List of headers to be sent on export requests",
      "type": "array",
      "items": {
        "type": "array",
        "items": [
          {
            "type": "string"
          },
          {
            "type": "string"
          }
        ],
        "maxItems": 2,
        "minItems": 2
      }
    },
    "HealthConfig": {
      "description": "Health endpoint configuration.",
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "listen": {
          "default": null,
          "type": [
            "string",
            "null"
          ]
        },
        "path": {
          "default": "/health",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "HooksWasiConfig": {
      "description": "Configuration for the GraphQL WASI component hooks.",
      "type": "object",
      "properties": {
        "environment_variables": {
          "description": "Indicates if environment variables should be available to the WASI component.",
          "default": false,
          "type": "boolean"
        },
        "location": {
          "description": "The location of the WASI component.",
          "default": "",
          "type": "string"
        },
        "max_pool_size": {
          "description": "The maximum number of concurrent instances of the WASI component. Defaults to four times the number of CPUs.",
          "default": null,
          "type": [
            "integer",
            "null"
          ],
          "format": "uint",
          "minimum": 0.0
        },
        "networking": {
          "description": "Indicates if networking is enabled for the WASI component.",
          "default": false,
          "type": "boolean"
        },
        "preopened_directories": {
          "description": "A list of directories that are preopened for the WASI component.",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/PreopenedDirectory"
          }
        },
        "stderr": {
          "description": "Indicates if standard error should be available to the WASI component.",
          "default": false,
          "type": "boolean"
        },
        "stdout": {
          "description": "Indicates if standard output should be available to the WASI component.",
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "HttpMethod": {
      "type": "string",
      "enum": [
        "GET",
        "POST",
        "PUT",
        "DELETE",
        "HEAD",
        "OPTIONS",
        "CONNECT",
        "PATCH",
        "TRACE"
      ]
    },
    "JwksConfig": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "audience": {
          "description": "The name of the audience, e.g. the project",
          "type": [
            "string",
            "null"
          ]
        },
        "issuer": {
          "description": "The issuer URL",
          "type": [
            "string",
            "null"
          ]
        },
        "poll_interval": {
          "description": "How often to poll changes to the configuration",
          "default": {
            "secs": 60,
            "nanos": 0
          },
          "allOf": [
            {
              "$ref": "#/definitions/Duration"
            }
          ]
        },
        "url": {
          "description": "The well-known URL of the JWKS",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "JwtProvider": {
      "type": "object",
      "required": [
        "jwks"
      ],
      "properties": {
        "header": {
          "description": "The header from which to look for the token",
          "default": {
            "name": "Authorization",
            "value_prefix": "Bearer "
          },
          "allOf": [
            {
              "$ref": "#/definitions/AuthenticationHeader"
            }
          ]
        },
        "jwks": {
          "description": "The JWKS provider configuration",
          "allOf": [
            {
              "$ref": "#/definitions/JwksConfig"
            }
          ]
        },
        "name": {
          "description": "A name of the provider, used for log/error messages",
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "LogMode": {
      "oneOf": [
        {
          "description": "The log channel will block if it's full.",
          "type": "string",
          "enum": [
            "blocking"
          ]
        },
        {
          "description": "The log channel will return the data back to the caller, if full.",
          "type": "string",
          "enum": [
            "non_blocking"
          ]
        }
      ]
    },
    "LogsConfig": {
      "description": "Logs configuration",
      "type": "object",
      "properties": {
        "exporters": {
          "description": "Exporters configurations",
          "allOf": [
            {
              "$ref": "#/definitions/ExportersConfig"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "MessageSignaturesConfig": {
      "type": "object",
      "properties": {
        "algorithm": {
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/MessageSigningAlgorithm"
            },
            {
              "type": "null"
            }
          ]
        },
        "derived_components": {
          "default": [
            "request_target"
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/DerivedComponent"
          }
        },
        "enabled": {
          "default": null,
          "type": [
            "boolean",
            "null"
          ]
        },
        "expiry": {
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/Duration"
            },
            {
              "type": "null"
            }
          ]
        },
        "headers": {
          "default": {
            "include": [],
            "exclude": []
          },
          "allOf": [
            {
              "$ref": "#/definitions/MessageSigningHeaders"
            }
          ]
        },
        "key": {
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/MessageSigningKey"
            },
            {
              "type": "null"
            }
          ]
        },
        "signature_parameters": {
          "default": [
            "created",
            "alg"
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/SignatureParameter"
          }
        }
      },
      "additionalProperties": false
    },
    "MessageSigningAlgorithm": {
      "type": "string",
      "enum": [
        "HmacSha256",
        "Ed25519",
        "EcdsaP256",
        "EcdsaP384"
      ]
    },
    "MessageSigningHeaders": {
      "description": "Which headers to include/exclude in the signature",
      "type": "object",
      "required": [
        "exclude",
        "include"
      ],
      "properties": {
        "exclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "include": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MessageSigningKey": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "File"
          ],
          "properties": {
            "File": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "id": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "name": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Inline"
          ],
          "properties": {
            "Inline": {
              "type": "object",
              "required": [
                "contents"
              ],
              "properties": {
                "contents": {
                  "type": "string"
                },
                "id": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "MetricsConfig": {
      "description": "Logs configuration",
      "type": "object",
      "properties": {
        "exporters": {
          "description": "Exporters configurations",
          "allOf": [
            {
              "$ref": "#/definitions/ExportersConfig"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "NetworkConfig": {
      "type": "object",
      "properties": {
        "listen_address": {
          "default": null,
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "OperationLimitsConfig": {
      "type": "object",
      "properties": {
        "aliases": {
          "description": "Limits the total number of aliased fields in an operation, including fields of fragments.",
          "default": null,
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0.0
        },
        "complexity": {
          "description": "Query complexity takes the number of fields as well as the depth and any pagination arguments into account. Every scalar field adds 1 point, every nested field adds 2 points, and every pagination argument multiplies the nested objects score by the number of records fetched.",
          "default": null,
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0.0
        },
        "depth": {
          "description": "Limits the deepest nesting of selection sets in an operation, including fields in fragments.",
          "default": null,
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0.0
        },
        "height": {
          "description": "Limits the number of unique fields included in an operation, including fields of fragments. If a particular field is included multiple times via aliases, it's counted only once.",
          "default": null,
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0.0
        },
        "root_fields": {
          "description": "Limits the number of root fields in an operation, including root fields in fragments. If a particular root field is included multiple times via aliases, each usage is counted.",
          "default": null,
          "type": [
            "integer",
            "null"
          ],
          "format": "uint16",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "OtlpExporterConfig": {
      "description": "Otlp exporter configuration",
      "type": "object",
      "properties": {
        "batch_export": {
          "description": "Batch export configuration",
          "allOf": [
            {
              "$ref": "#/definitions/BatchExportConfig"
            }
          ]
        },
        "enabled": {
          "description": "Enable or disable the exporter",
          "default": false,
          "type": "boolean"
        },
        "endpoint": {
          "description": "Endpoint of the otlp collector",
          "default": "http://127.0.0.1:4317/",
          "type": "string",
          "format": "uri"
        },
        "grpc": {
          "description": "GRPC exporting configuration",
          "anyOf": [
            {
              "$ref": "#/definitions/OtlpExporterGrpcConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "http": {
          "description": "HTTP exporting configuration",
          "anyOf": [
            {
              "$ref": "#/definitions/OtlpExporterHttpConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "protocol": {
          "description": "Protocol to use when exporting",
          "allOf": [
            {
              "$ref": "#/definitions/OtlpExporterProtocol"
            }
          ]
        },
        "timeout": {
          "description": "The maximum duration to export data. The default value is 60 seconds.",
          "default": "PT60S",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "OtlpExporterGrpcConfig": {
      "description": "GRPC exporting configuration",
      "type": "object",
      "properties": {
        "headers": {
          "description": "Headers to send on export requests",
          "default": [],
          "allOf": [
            {
              "$ref": "#/definitions/Headers"
            }
          ]
        },
        "tls": {
          "description": "Tls configuration to use on export requests",
          "anyOf": [
            {
              "$ref": "#/definitions/OtlpExporterTlsConfig"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "OtlpExporterHttpConfig": {
      "description": "OTLP HTTP exporting configuration",
      "type": "object",
      "properties": {
        "headers": {
          "description": "Http headers to send on export requests",
          "default": [],
          "allOf": [
            {
              "$ref": "#/definitions/Headers"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "OtlpExporterProtocol": {
      "description": "OTLP Exporter protocol",
      "oneOf": [
        {
          "description": "GRPC protocol",
          "type": "string",
          "enum": [
            "grpc"
          ]
        },
        {
          "description": "HTTP protocol",
          "type": "string",
          "enum": [
            "http"
          ]
        }
      ]
    },
    "OtlpExporterTlsConfig": {
      "description": "OTLP GRPC TLS export configuration Wraps tls configuration used when exporting data. Any files referenced are read in *sync* fashion using `[std::fs::read]`.",
      "type": "object",
      "properties": {
        "ca": {
          "description": "Path to the X509 CA Certificate file, in pem format, against which to verify the server's TLS certificate.",
          "default": null,
          "type": [
            "string",
            "null"
          ]
        },
        "cert": {
          "description": "Path to the X509 Certificate file, in pem format, that represents the client identity to present to the server.",
          "default": null,
          "type": [
            "string",
            "null"
          ]
        },
        "domain_name": {
          "description": "Domain name against which to verify the server's TLS certificate",
          "default": null,
          "type": [
            "string",
            "null"
          ]
        },
        "key": {
          "description": "Path to the key of the `cert`",
          "default": null,
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "PreopenedDirectory": {
      "description": "Configuration for a directory that is preopened for the WASI component.",
      "type": "object",
      "required": [
        "guest_path",
        "host_path",
        "read_permission",
        "write_permission"
      ],
      "properties": {
        "guest_path": {
          "description": "The corresponding path in the guest environment.",
          "type": "string"
        },
        "host_path": {
          "description": "The path on the host system that is preopened.",
          "type": "string"
        },
        "read_permission": {
          "description": "Indicates if read access is permitted for this directory.",
          "type": "boolean"
        },
        "write_permission": {
          "description": "Indicates if write access is permitted for this directory.",
          "type": "boolean"
        }
      }
    },
    "PropagationConfig": {
      "type": "object",
      "properties": {
        "aws_xray": {
          "description": "Enable AWS X-Ray propagation through the `x-amzn-trace-id` header. This is the standard trace parent propagation mechanism for AWS X-Ray. https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-tracingheader",
          "default": false,
          "type": "boolean"
        },
        "baggage": {
          "description": "Enable Baggage context propagation through the `baggage` header. This is the standard context propagation mechanism in OpenTelemetry.\n\nResources:\n\n- https://www.w3.org/TR/baggage/ - https://opentelemetry.io/docs/concepts/signals/baggage/",
          "default": false,
          "type": "boolean"
        },
        "trace_context": {
          "description": "Enable [TraceContext](https://www.w3.org/TR/trace-context/) propagation through the `traceparent` header. This is the standard trace parent propagation mechanism in OpenTelemetry.",
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "RateLimitConfig": {
      "type": "object",
      "properties": {
        "global": {
          "anyOf": [
            {
              "$ref": "#/definitions/GraphRateLimit"
            },
            {
              "type": "null"
            }
          ]
        },
        "redis": {
          "default": {
            "url": "redis://localhost:6379",
            "key_prefix": "grafbase",
            "tls": null
          },
          "allOf": [
            {
              "$ref": "#/definitions/RateLimitRedisConfig"
            }
          ]
        },
        "storage": {
          "default": "memory",
          "allOf": [
            {
              "$ref": "#/definitions/RateLimitStorage"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "RateLimitRedisConfig": {
      "type": "object",
      "properties": {
        "key_prefix": {
          "default": "grafbase",
          "type": "string"
        },
        "tls": {
          "anyOf": [
            {
              "$ref": "#/definitions/RateLimitRedisTlsConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "url": {
          "default": "redis://localhost:6379",
          "type": "string",
          "format": "uri"
        }
      },
      "additionalProperties": false
    },
    "RateLimitRedisTlsConfig": {
      "type": "object",
      "properties": {
        "ca": {
          "type": [
            "string",
            "null"
          ]
        },
        "cert": {
          "type": [
            "string",
            "null"
          ]
        },
        "key": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "RateLimitStorage": {
      "type": "string",
      "enum": [
        "memory",
        "redis"
      ]
    },
    "RetryConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Should we retry or not.",
          "default": false,
          "type": "boolean"
        },
        "min_per_second": {
          "description": "How many retries are available per second, at a minimum.",
          "default": null,
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0.0
        },
        "retry_mutations": {
          "description": "Whether mutations should be retried at all. False by default.",
          "default": false,
          "type": "boolean"
        },
        "retry_percent": {
          "description": "The fraction of the successful requests budget that can be used for retries.",
          "default": null,
          "type": [
            "number",
            "null"
          ],
          "format": "float"
        },
        "ttl": {
          "description": "Each successful request to the subgraph adds to the retry budget. This setting controls for how long the budget remembers successful requests.",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/Duration"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "RotateMode": {
      "oneOf": [
        {
          "description": "Never rotate",
          "type": "string",
          "enum": [
            "never"
          ]
        },
        {
          "description": "A new file every minute",
          "type": "string",
          "enum": [
            "minutely"
          ]
        },
        {
          "description": "A new file every hour",
          "type": "string",
          "enum": [
            "hourly"
          ]
        },
        {
          "description": "A new file every day",
          "type": "string",
          "enum": [
            "daily"
          ]
        },
        {
          "description": "A new size when the current file has reached a certain size",
          "type": "object",
          "required": [
            "size"
          ],
          "properties": {
            "size": {
              "type": "integer",
              "format": "int64"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "SignatureParameter": {
      "description": "Which of the signature parameters to include in the signature\n\nhttps://www.rfc-editor.org/rfc/rfc9421.html#name-signature-parameters",
      "type": "string",
      "enum": [
        "created",
        "alg",
        "kid",
        "nonce"
      ]
    },
    "StdoutExporterConfig": {
      "description": "Stdout exporter configuration",
      "type": "object",
      "properties": {
        "batch_export": {
          "description": "Batch export configuration",
          "anyOf": [
            {
              "$ref": "#/definitions/BatchExportConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "enabled": {
          "description": "Enable or disable the exporter",
          "default": true,
          "type": "boolean"
        },
        "timeout": {
          "description": "The maximum duration to export data. The default value is 60 seconds.",
          "default": "PT60S",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SubgraphConfig": {
      "type": "object",
      "properties": {
        "entity_caching": {
          "description": "Subgraph specific entity caching config  this overrides the global config if there is any",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/EntityCachingConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "file": {
          "description": "The path of an SDL schema file for the subgraph.",
          "default": null,
          "type": [
            "string",
            "null"
          ]
        },
        "headers": {
          "description": "Header bypass configuration",
          "default": [],
          "type": "array",
          "items": {
            "$ref": "#/definitions/HeaderRule"
          }
        },
        "message_signatures": {
          "description": "Subgraph specific message signatures config",
          "default": {
            "enabled": null,
            "algorithm": null,
            "key": null,
            "expiry": null,
            "headers": {
              "include": [],
              "exclude": []
            },
            "derived_components": [],
            "signature_parameters": []
          },
          "allOf": [
            {
              "$ref": "#/definitions/MessageSignaturesConfig"
            }
          ]
        },
        "rate_limit": {
          "description": "Rate limiting configuration specifically for this Subgraph",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/GraphRateLimit"
            },
            {
              "type": "null"
            }
          ]
        },
        "retry": {
          "anyOf": [
            {
              "$ref": "#/definitions/RetryConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "timeout": {
          "description": "Timeout for subgraph requests in seconds. Default: 30 seconds.",
          "default": null,
          "anyOf": [
            {
              "$ref": "#/definitions/Duration"
            },
            {
              "type": "null"
            }
          ]
        },
        "url": {
          "description": "URL of the subgraph, overriding the one specified in the federated SDL.",
          "default": null,
          "type": [
            "string",
            "null"
          ],
          "format": "uri"
        },
        "websocket_url": {
          "description": "The URL to use for GraphQL websocket calls.",
          "default": null,
          "type": [
            "string",
            "null"
          ],
          "format": "uri"
        }
      },
      "additionalProperties": false
    },
    "TelemetryConfig": {
      "description": "Holds telemetry configuration",
      "type": "object",
      "properties": {
        "exporters": {
          "description": "Global exporters config",
          "allOf": [
            {
              "$ref": "#/definitions/ExportersConfig"
            }
          ]
        },
        "logs": {
          "description": "Separate configuration for logs exports. If set, overrides the global values.",
          "anyOf": [
            {
              "$ref": "#/definitions/LogsConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "metrics": {
          "description": "Separate configuration for metrics exports. If set, overrides the global values.",
          "anyOf": [
            {
              "$ref": "#/definitions/MetricsConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "resource_attributes": {
          "description": "Additional resource attributes",
          "default": {},
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "service_name": {
          "description": "The name of the service",
          "default": "",
          "type": "string"
        },
        "tracing": {
          "description": "Separate configuration for traces exports. If set, overrides the global values.",
          "allOf": [
            {
              "$ref": "#/definitions/TracingConfig"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "TlsConfig": {
      "type": "object",
      "required": [
        "certificate",
        "key"
      ],
      "properties": {
        "certificate": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "TracingCollectConfig": {
      "description": "Tracing collection configuration",
      "type": "object",
      "properties": {
        "max_attributes_per_event": {
          "description": "The maximum attributes per event before discarding. The default is 128.",
          "default": 128,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "max_attributes_per_link": {
          "description": "The maximum attributes per link before discarding. The default is 128.",
          "default": 128,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "max_attributes_per_span": {
          "description": "The maximum attributes per span before discarding. The default is 128.",
          "default": 128,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "max_events_per_span": {
          "description": "The maximum events per span before discarding. The default is 128.",
          "default": 128,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "max_links_per_span": {
          "description": "The maximum links per span before discarding. The default is 128.",
          "default": 128,
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "TracingConfig": {
      "description": "Tracing configuration",
      "type": "object",
      "properties": {
        "collect": {
          "description": "Collection configuration",
          "allOf": [
            {
              "$ref": "#/definitions/TracingCollectConfig"
            }
          ]
        },
        "exporters": {
          "description": "Exporters configurations",
          "allOf": [
            {
              "$ref": "#/definitions/ExportersConfig"
            }
          ]
        },
        "parent_based_sampler": {
          "description": "Allow clients to specify sampling rate. Enable only if you are not exposing the gateway directly to clients. Default: false.",
          "default": false,
          "type": "boolean"
        },
        "propagation": {
          "description": "Trace parent and context propagation configuration",
          "allOf": [
            {
              "$ref": "#/definitions/PropagationConfig"
            }
          ]
        },
        "sampling": {
          "description": "The sampler between 0.0 and 1.0. Default is 0.15.",
          "default": 0.15,
          "type": "number",
          "format": "double"
        }
      },
      "additionalProperties": false
    },
    "TrustedDocumentsConfig": {
      "description": "An optional header that can be passed by clients to bypass trusted documents enforcement, allowing arbitrary queries.",
      "type": "object",
      "properties": {
        "bypass_header_name": {
          "description": "Name of the optional header that can be set to bypass trusted documents enforcement, when `enabled = true`. Only meaningful in combination with `bypass_header_value`.",
          "default": null,
          "type": [
            "string",
            "null"
          ]
        },
        "bypass_header_value": {
          "description": "Value of the optional header that can be set to bypass trusted documents enforcement, when `enabled = true`. Only meaningful in combination with `bypass_header_value`.",
          "default": null,
          "type": [
            "string",
            "null"
          ]
        },
        "enabled": {
          "description": "If true, the engine will only accept trusted document queries. Default: false.",
          "default": false,
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  }
}