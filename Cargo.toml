[workspace]
resolver = "2"
members = [
  "cli/crates/*",
  "engine/crates/*",
  "engine/crates/gateway-v2/auth",
  "engine/crates/engine-v2/config",
  "engine/crates/engine-v2/schema",
  "engine/crates/engine/derive",
  "engine/crates/engine/parser",
  "engine/crates/engine/value",
]

[patch.crates-io]
hyper-util = { git = "https://github.com/grafbase/hyper-util", rev = "3ad8fd132812dc1e33b5a4830b96dff01b8020a3" } # error-is-connect
multipart-stream = { git = "https://github.com/grafbase/multipart-stream-rs-fork", rev = "06ff198e4041c8a8c1c93e580c260d597727c193" } # http-1.0-fix-multipart-mixed
serde_with = { git = "https://github.com/grafbase/serde_with", rev = "7c8c63e03daf81b23dcbb39b43c3c1dbb5a25b01" } # minify-field-names-strum-0.25
# Temporary change till https://github.com/alexcrichton/tar-rs/pull/319 is merged and released.
tar = { git = "https://github.com/grafbase/tar-rs.git", rev = "a889df5bd9fec44faf081f7fade5ec81935c2418" } # overwrite-hard-links
ulid = { git = "https://github.com/grafbase/ulid-rs", rev = "6d06156193d51a2db3216f058cbfadd4923df2c7" } # wasm-compatibility-web-time

[workspace.package]
version = "0.52.4"
edition = "2021"
license = "Apache-2.0"
homepage = "https://grafbase.com"
keywords = ["grafbase"]
repository = "https://github.com/grafbase/grafbase"

[workspace.dependencies]
async-graphql = "7"
async-graphql-axum = "7"
async-graphql-parser = "7"
async-graphql-value = "7"
async-trait = "0.1"
axum = "0.7"
base64 = "0.21"
bitflags = "2"
bytes = "1"
chrono = { version = "0.4", default-features = false }
cynic = "3"
cynic-introspection = "3"
flexbuffers = "2"
futures = "0.3"
futures-util = "0.3"
handlebars = "5"
headers = "0.4"
http = "1"
hyper = "1"
hyper-util = "0.1"
indexmap = "2"
itertools = "0.12"
jsonwebtoken = "9"
num-traits = "0.2"
oauth2 = "4"
once_cell = "1"
openidconnect = "3"
regex = "1"
rstest = "0.18"
secrecy = "0.8"
send_wrapper = "0.6"
strum = "0.25"
tar = "0.4"
thiserror = "1"
tokio = "1"
tower-http = "0.5"
url = "2"
uuid = "1"
ulid = "1"
wasm-bindgen = "0.2"
web-time = "0.2"
which = "5"
worker = "0.0.18"

# Serde
serde = { version = "1", features = ["derive"] }
serde_dynamo = "4"
serde_json = { version = "1" }
serde-wasm-bindgen = "0.6"
serde_with = "3"

# Tracing
tracing = "0.1"
# don't bump to 0.18, leads to memory access out of bounds in cloudflare workers
tracing-subscriber = "0.3"
tracing-futures = "0.2"

async-runtime = { path = "engine/crates/async-runtime" }
common-types = { path = "engine/crates/common-types" }
dataloader = { path = "engine/crates/dataloader", features = ["tracing"] }
engine-parser = { path = "engine/crates/engine/parser" }
engine = { path = "engine/crates/engine" }
engine-v2 = { path = "engine/crates/engine-v2" }
engine-value = { path = "engine/crates/engine/value" }
gateway-adapter-local = { path = "engine/crates/gateway-adapter-local" }
gateway-adapter = { path = "engine/crates/gateway-adapter" }
gateway-core = { path = "engine/crates/gateway-core" }
gateway-types = { path = "engine/crates/gateway-types" }
gateway-v2 = { path = "engine/crates/gateway-v2" }
graph-entities = { path = "engine/crates/graph-entities" }
graphql-composition = { path = "engine/crates/composition" }
graphql-extensions = { path = "engine/crates/graphql-extensions" }
jwt-verifier = { path = "engine/crates/jwt-verifier" }
log = { path = "engine/crates/log" }
parser-graphql = { path = "engine/crates/parser-graphql" }
parser-openapi = { path = "engine/crates/parser-openapi" }
parser-postgres = { path = "engine/crates/parser-postgres" }
runtime-local = { path = "engine/crates/runtime-local" }
runtime-noop = { path = "engine/crates/runtime-noop" }
runtime = { path = "engine/crates/runtime" }
search-protocol = { path = "engine/crates/search-protocol" }
worker-env = { path = "engine/crates/worker-env" }

[profile.bench]
debug = true

[profile.release]
strip = "symbols"
# by enabling link-time optimization, we can reduce size even further
# by telling cargo to optimize at the link stage (in addition to the
# normal optimizations during the compilation stage)
lto = "thin"

[workspace.lints.rust]
nonstandard-style = "deny"
rust-2018-idioms = "deny"
unused-crate-dependencies = "deny"

[workspace.lints.clippy]
all = "deny"
panic = "deny"

# Opt out of lints that have too many false positives or are yet to be addressed.
bool-to-int-with-if = "allow"
cast-possible-truncation = "allow"
default-trait-access = "allow"
derive-partial-eq-without-eq = "allow"
doc-markdown = "allow"
enum-glob-use = "allow"
implicit-hasher = "allow"
items-after-statements = "allow"
into_iter_without_iter = "allow"
iter_without_into_iter = "allow"
large-digit-groups = "allow"
let-underscore-untyped = "allow"
let-with-type-underscore = "allow"
manual-assert = "allow"
map-unwrap-or = "allow"
match-wildcard-for-single-variants = "allow"
missing-errors-doc = "allow"
missing-panics-doc = "allow"
module-name-repetitions = "allow"
must-use-candidate = "allow"
needless-pass-by-value = "allow"
redundant-closure-for-method-calls = "allow"
single-match-else = "allow"
struct-excessive-bools = "allow"
struct-field-names = "allow"
too-many-lines = "allow"
unnecessary-fallible-conversions = "allow"
unused-async = "allow"
unused-self = "allow"
wildcard-imports = "allow"
