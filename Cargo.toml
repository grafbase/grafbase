[workspace]
resolver = "2"
members = [
  "gateway/crates/*",
  "cli/crates/*",
  "engine/crates/*",
  "engine/crates/gateway-v2/auth",
  "engine/crates/gateway-v2/auth-config",
  "engine/crates/engine-v2/config",
  "engine/crates/engine-v2/axum",
  "engine/crates/engine-v2/schema",
  "engine/crates/engine-v2/id-newtypes",
  "engine/crates/engine/derive",
  "engine/crates/engine/meta-type-name",
  "engine/crates/engine/parser",
  "engine/crates/engine/query-path",
  "engine/crates/engine/registry-for-cache",
  "engine/crates/engine/registry-upgrade",
  "engine/crates/engine/registry-v2",
  "engine/crates/engine/registry-v2-generator",
  "engine/crates/engine/response",
  "engine/crates/engine/scalars",
  "engine/crates/engine/value",
  "graph-ref",
  "graphql-lint",
  "gqlint",
]
exclude = ["engine/crates/gateway-v2", "engine/crates/wasi-component-loader/examples"]

[patch.crates-io]
axum = { git = "https://github.com/grafbase/axum", rev = "c3146f9ca921907d9884fbf7549a1520e9e72eac" } # axum-tungstenite-upgrade
# Drop when https://github.com/programatik29/axum-server/pull/112 is merged.
axum-server = { git = "https://github.com/grafbase/axum-server", rev = "bc0c489c82e6fa76648f0d47191330ef4e125347" } # rustls-0.23-tokio-rustls-0.26
multipart-stream = { git = "https://github.com/grafbase/multipart-stream-rs-fork", rev = "06ff198e4041c8a8c1c93e580c260d597727c193" } # http-1.0-fix-multipart-mixed
names = { git = "https://github.com/grafbase/names", rev = "443800fbb7bc2936c1f2c16f3a5e116698b1454a" } # main
# FIXME: Drop when a new version is released.
openidconnect = { git = "https://github.com/ramosbugs/openidconnect-rs", rev = "7efc8943a8f699aff2db742827fc3d0fc2b3f34d" } # main

opentelemetry = { git = "https://github.com/grafbase/opentelemetry-rust", rev = "830815740a43f488157e86b0c69b0b86d1aee867" }                    # http-v1
opentelemetry-otlp = { git = "https://github.com/grafbase/opentelemetry-rust", rev = "830815740a43f488157e86b0c69b0b86d1aee867" }               # http-v1
opentelemetry-stdout = { git = "https://github.com/grafbase/opentelemetry-rust", rev = "830815740a43f488157e86b0c69b0b86d1aee867" }             # http-v1
opentelemetry_sdk = { git = "https://github.com/grafbase/opentelemetry-rust", rev = "830815740a43f488157e86b0c69b0b86d1aee867" }                # http-v1

# FIXME: Uncomment when we upgrade opentelemetry to 0.23.
# opentelemetry-aws = { git = "https://github.com/open-telemetry/opentelemetry-rust-contrib", rev = "086961e18437743c5ea43c9474cc1a7b13a49c6b" } # main
ory-client = { git = "https://github.com/grafbase/client-rust", rev = "88ed8f63c1d71b294c2ef64fd80ca654e91ac25f" } # reqwest-0.12
reqwest = { git = "https://github.com/grafbase/reqwest", rev = "22a7e4f64422b6e710ad703b62edc18301dea320" } # 0.12-with-patches-wasm-timeout
rudderanalytics =  { git = "https://github.com/grafbase/rudder-sdk-rust", rev = "3e994eb4dcc9c580be311ef9eab6e96dd264293b" } # async
serde_with = { git = "https://github.com/grafbase/serde_with", rev = "06ad277a0e0175c2364d3c065e303a6c8a775c8a" } # minify-field-names
# Temporary change till https://github.com/alexcrichton/tar-rs/pull/319 is merged and released.
tar = { git = "https://github.com/grafbase/tar-rs.git", rev = "a889df5bd9fec44faf081f7fade5ec81935c2418" } # overwrite-hard-links
tokio-postgres = { git = "https://github.com/grafbase/rust-postgres/", branch = "grafbase-rebased" }
# FIXME: Remove when a new major version is released.
tonic = { git = "https://github.com/hyperium/tonic", rev = "3457f9203226f88524b31bf5d64ce6e5ec7c993c" } # main
# FIXME: Uncomment when we upgrade opentelemetry to 0.23.
# tracing-opentelemetry = { git = "https://github.com/tokio-rs/tracing-opentelemetry", rev = "2539f4f7bde3dc3f320e5fb935d2c13a69a540dd" } # main
tracing = { git = "https://github.com/tokio-rs/tracing", rev = "6d00d7d9f72dc6797138a1062bc33073afbad5a1" } # v0.1.x
tracing-core = { git = "https://github.com/tokio-rs/tracing", rev = "6d00d7d9f72dc6797138a1062bc33073afbad5a1" } # v0.1.x
tracing-mock = { git = "https://github.com/tokio-rs/tracing", rev = "6d00d7d9f72dc6797138a1062bc33073afbad5a1" } # v0.1.x

[workspace.package]
version = "0.77.1"
edition = "2021"
license = "Apache-2.0"
homepage = "https://grafbase.com"
keywords = ["grafbase"]
repository = "https://github.com/grafbase/grafbase"

[workspace.dependencies]
anyhow = "1"
async-graphql = "7.0.3"
async-graphql-axum = "7.0.3"
async-graphql-parser = "7.0.3"
async-graphql-value = "7.0.3"
async-trait = "0.1.80"
axum = { version = "0.7.5", default-features = false }
axum-server = { version = "0.6", default-features = false }
base64 = "0.22.1"
bitflags = "2.5.0"
blake3 = "1.5.1"
bytes = "1.6.0"
chrono = { version = "0.4.38", default-features = false }
ctor = "0.2.8"
cynic = "3.7.0"
cynic-introspection = "3.7.0"
cynic-parser = "0.4.0"
deadpool-postgres = "0.14"
derive_more = "1.0.0-beta.6"
jwt-compact = "0.8"
flexbuffers = "2"
futures = "0.3.30"
futures-channel = "0.3.30"
futures-util = "0.3.30"
handlebars = "5.1.2"
headers = "0.4"
hex = "0.4.3"
http = "1.1.0"
hyper = { version = "1.3.1", features = ["http2"] }
hyper-util = "0.1.3"
indexmap = "2.2.6"
insta = { version = "1.38.0", features = ["json"] }
internment = { version = "0.8", features = ["serde", "arc"] }
itertools = "0.13.0"
jsonwebtoken = "9.3.0"
governor = "0.6"
num-traits = "0.2.18"
once_cell = "1.19.0"
openidconnect = "4.0.0-alpha.1"
postcard = { version = "1", features = ["use-std"] }
regex = "1.10.4"
reqwest = { version = "0.12.4", default-features = false, features = ["http2"] }
rmp-serde = "1.3.0"
rstest = "0.21"
rustls = { version = "0.23.5", default-features = false }
rustls-pemfile = { version = "2.1.2", default-features = false }
rustls-webpki = { version = "0.102.3", default-features = false }
secrecy = "0.8"
send_wrapper = "0.6"
strum = "0.26.2"
strum_macros = "0.26.2"
tar = "0.4.40"
thiserror = "1.0.59"
tokio = "1.37.0"
tokio-postgres = { version = "0.7.10", default-features = false }
tokio-postgres-rustls = "0.12.0"
tokio-rustls = { version = "0.26.0", default-features = false }
tokio-tungstenite = { version = "0.23.0", default-features = false }
tungstenite = { version = "0.23.0", default-features = false }
tower = "0.4.13"
tower-http = "0.5.2"
tower-service = "0.3.2"
url = "2.5.0"
uuid = "1.8.0"
ulid = "1.1.2"
wasm-bindgen = "0.2.92"
web-time = "1.1.0"
which = "6.0.1"
wiremock = "0.6.0"
worker = "0.3.0"
fnv = "1.0.7"
sha2 = "0.10.8"

# Serde
serde = { version = "1.0.199", features = ["derive"] }
serde_dynamo = "4.2.14"
serde_json = { version = "1.0.116", features = ["preserve_order"] }
serde-wasm-bindgen = "0.6.5"
serde_with = "3.8.1"

# Tracing
tracing = "0.1.40"
tracing-subscriber = "0.3.18"
tracing-futures = "0.2.5"
tracing-mock = "0.1"
tracing-opentelemetry = "0.23"
opentelemetry = "0.22"
opentelemetry_sdk = "0.22.0"
opentelemetry-stdout = "0.3"
opentelemetry-otlp = "0.15"

# Common
graph-ref = { path = "graph-ref" }
graphql-schema-validation = { path = "./engine/crates/validation" }
grafbase-graphql-introspection = { path = "graphql-introspection" }
graphql-lint = { path = "graphql-lint" }

# Gateway
federated-server = { path = "gateway/crates/federated-server" }

# Engine
async-runtime = { path = "engine/crates/async-runtime" }
common-types = { path = "engine/crates/common-types" }
dataloader = { path = "engine/crates/dataloader", features = ["tracing"] }
engine-config-builder = { path = "engine/crates/engine-config-builder" }
engine-parser = { path = "engine/crates/engine/parser" }
engine = { path = "engine/crates/engine" }
engine-id-newtypes = { path = "engine/crates/engine/id-newtypes" }
engine-response = { path = "engine/crates/engine/response" }
engine-v2 = { path = "engine/crates/engine-v2" }
engine-v2-axum = { path = "engine/crates/engine-v2/axum" }
engine-validation = { path = "engine/crates/engine/validation" }
engine-value = { path = "engine/crates/engine/value" }
gateway-adapter-local = { path = "engine/crates/gateway-adapter-local" }
gateway-adapter = { path = "engine/crates/gateway-adapter" }
gateway-core = { path = "engine/crates/gateway-core" }
gateway-v2-auth = { path = "engine/crates/gateway-v2/auth" }
gateway-v2-auth-config = { path = "engine/crates/gateway-v2/auth-config" }
grafbase-tracing = { path = "engine/crates/tracing" }
graph-entities = { path = "engine/crates/graph-entities" }
graphql-composition = { path = "engine/crates/composition" }
graphql-cursor = { path = "engine/crates/graphql-cursor" }
graphql-extensions = { path = "engine/crates/graphql-extensions" }
graphql-mocks = { path = "engine/crates/graphql-mocks" }
jwt-verifier = { path = "engine/crates/jwt-verifier" }
operation-normalizer = { path = "engine/crates/operation-normalizer" }
parser-graphql = { path = "engine/crates/parser-graphql" }
parser-openapi = { path = "engine/crates/parser-openapi" }
parser-postgres = { path = "engine/crates/parser-postgres" }
parser-sdl = { path = "engine/crates/parser-sdl" }
partial-caching = { path = "engine/crates/partial-caching" }
postgres-connector-types = { path = "engine/crates/postgres-connector-types" }
query-path = { path = "engine/crates/engine/query-path" }
registry-for-cache = { path = "engine/crates/engine/registry-for-cache" }
registry-upgrade = { path = "engine/crates/engine/registry-upgrade" }
registry-v1 = { path = "engine/crates/engine/registry-v1" }
registry-v2 = { path = "engine/crates/engine/registry-v2" }
runtime = { path = "engine/crates/runtime" }
runtime-local = { path = "engine/crates/runtime-local" }
runtime-noop = { path = "engine/crates/runtime-noop" }
serde-dynamic-string = { path = "engine/crates/serde-dynamic-string" }
worker-env = { path = "engine/crates/worker-env" }
wrapping = { path = "engine/crates/wrapping", package = "graphql-wrapping-types" }

[profile.bench]
debug = true

[profile.release]
strip = "symbols"
# by enabling link-time optimization, we can reduce size even further
# by telling cargo to optimize at the link stage (in addition to the
# normal optimizations during the compilation stage)
lto = "thin"

[profile.lambda]
inherits = "release"
opt-level = "s"
codegen-units = 1

[workspace.lints.rust]
nonstandard-style = "deny"
rust-2018-idioms = "deny"
unused-crate-dependencies = "deny"

[workspace.lints.clippy]
all = "deny"
panic = "deny"

# Opt out of lints that have too many false positives or are yet to be addressed.
bool-to-int-with-if = "allow"
cast-possible-truncation = "allow"
default-trait-access = "allow"
derive-partial-eq-without-eq = "allow"
doc-markdown = "allow"
enum-glob-use = "allow"
implicit-hasher = "allow"
items-after-statements = "allow"
into_iter_without_iter = "allow"
iter_without_into_iter = "allow"
large-digit-groups = "allow"
let-underscore-untyped = "allow"
let-with-type-underscore = "allow"
manual-assert = "allow"
map-unwrap-or = "allow"
match-wildcard-for-single-variants = "allow"
missing-errors-doc = "allow"
missing-panics-doc = "allow"
module-name-repetitions = "allow"
must-use-candidate = "allow"
needless-pass-by-value = "allow"
redundant-closure-for-method-calls = "allow"
single-match-else = "allow"
struct-excessive-bools = "allow"
struct-field-names = "allow"
too-many-lines = "allow"
unnecessary-fallible-conversions = "allow"
unused-async = "allow"
unused-self = "allow"
wildcard-imports = "allow"
