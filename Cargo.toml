[workspace]
resolver = "2"
members = [
    "cli",
    "gateway",
    "crates/*",
    "crates/grafbase-hooks/derive",
    "crates/grafbase-sdk/derive",
    "crates/grafbase-sdk/mock",
    "crates/engine/codegen",
    "crates/engine/operation",
    "crates/engine/walker",
    "crates/engine/schema",
    "crates/engine/error",
    "crates/engine/query-solver",
    "crates/engine/id-derives",
    "crates/engine/id-newtypes",
    "crates/engine/field-selection-map",
]
exclude = [
    "cli/tests/integration/data",
    "crates/wasi-component-loader/examples",
    "crates/integration-tests/data/extensions",
    "crates/integration-tests/data/mtls-subgraph",
    "examples/authorization",
    "examples/grpc-extension/server",
    "examples/hooks-template",
    "examples/composite-rest",
    "examples/query-plan",
]

[patch.crates-io]
multipart-stream = { git = "https://github.com/grafbase/multipart-stream-rs-fork", rev = "06ff198e4041c8a8c1c93e580c260d597727c193" } # http-1.0-fix-multipart-mixed
# Make sure we use the workspace-hack package when building
# this repo, but not when pulling it in
# See https://docs.rs/cargo-hakari/0.9.30/cargo_hakari/patch_directive/index.html for details
grafbase-workspace-hack.path = "crates/grafbase-workspace-hack"

[workspace.package]
edition = "2024"
license = "MPL-2.0"
homepage = "https://grafbase.com"
keywords = ["grafbase"]
repository = "https://github.com/grafbase/grafbase"

[workspace.dependencies]
anyhow = { version = "1", default-features = false }
ascii = "1"
askama = "0.14"
assert_matches = "1"
async-graphql = "7.0.16"
async-graphql-axum = "7.0.16"
async-graphql-parser = "7.0.16"
async-graphql-value = "7.0.16"
async-nats = "0.42.0"
async-sse = "5"
async-trait = "0.1.88"
async-tungstenite = "0.28.0"
axum = { version = "0.8.3", default-features = false }
axum-extra = "0.10"
axum-server = { version = "0.7", default-features = false }
backtrace = "0.3"
base64 = "0.22.1"
bitflags = "2"
bitvec = "1"
blake3 = "1.8.2"
bytes = "1.10.1"
case = "1"
cfg-if = "1"
chrono = { version = "0.4.40", default-features = false }
clap = "4"
clap_complete = "4.5"
cli-table = { version = "0.5", default-features = false }
clickhouse = "0.13"
color-print = "0.3"
colored = "3"
const_format = "0.2"
convert_case = "0.8"
criterion = "0.5" # Until pprof updates its dependencies... 2025-07-22
crossbeam = "0.8"
crossbeam-queue = "0.3"
crossterm = "0.29"
ctor = "0.4.2"
cynic = "3.11"
cynic-codegen = "3.11"
cynic-introspection = "3.11"
cynic-parser = "0.9.1"
cynic-parser-deser = "0.9.1"
dashmap = "6.1"
datatest-stable = "0.3.2"
deadpool = { version = "0.12.2", features = ["rt_tokio_1"] }
derive_more = "2.0.1"
dirs = "6"
duct = "1"
duration-str = "0.17"
ed25519-compact = "2"
either = "1.13"
elliptic-curve = "0.13"
enumflags2 = "0.7"
expect-test = "1.5"
fast-glob = "0.4.5"
fixedbitset = "0.5"
flate2 = "1"
fnv = "1.0.7"
form_urlencoded = "1"
fslock = "0.2"
futures = "0.3.31"
futures-channel = "0.3.31"
futures-lite = "2"
futures-util = "0.3.30"
fxhash = "0.2"
governor = "0.10"
graphql-parser = { git = "https://github.com/graphql-rust/graphql-parser", version = "0.4.0" }
graphql-ws-client = { version = "0.11.1", features = ["tungstenite"] }
handlebars = "6.3.2"
hashbrown = "0.15"
headers = "0.4"
heck = "0.5"
hex = "0.4.3"
http = "1.3.1"
http-body = "1"
http-body-util = "0.1"
httpsig = "0.0.18"
httpsig-hyper = "0.0.18"
hyper = { version = "1.6.0", features = ["http2"] }
hyper-util = "0.1.11"
ignore = "0.4"
im = "15"
indexmap = "2.9.0"
indicatif = "0.18"
indoc = "2"
inquire = "0.7"
insta = { version = "1.42.2", features = ["json", "redactions", "glob"] }
internment = { version = "0.8", features = ["serde", "arc"] }
itertools = "0.14.0"
jsonwebtoken = "9.3.1"
jwt-compact = "0.8"
lambda_http = "0.14.0"
lasso2 = "0.8"
libtest-mimic = "0.8"
log = "0.4.27"
mediatype = "0.20"
miette = "7.4"
mimalloc = "0.1"
mime = "0.3"
mini-moka = "0.10"
minicbor = "1"
minicbor-serde = "0.5.0"
multipart-stream = "0.1.2"
notify = "8"
notify-debouncer-full = "0.5"
num-traits = "0.2.19"
openidconnect = "4.0.0"
opentelemetry = "0.30"
opentelemetry-appender-tracing = "0.30"
opentelemetry-aws = "0.18"
opentelemetry-otlp = "0.30"
opentelemetry-stdout = "0.30"
opentelemetry_sdk = "0.30"
ordered-float = "5"
ory-client = "=1.9.0"
os_type = "2"
p256 = "0.13"
p384 = "0.13"
percent-encoding = "2"
petgraph = "0.8"
postcard = { version = "1", features = ["use-std"] }
pprof = "0.15"
pretty_assertions = "1"
priority-queue = "2"
proc-macro2 = "1"
prost = { version = "0.13.5", default-features = false }
prost-types = { version = "0.13.5", default-features = false }
quick_cache = "0.6"
quote = "1"
ramhorns = { git = "https://github.com/grafbase/ramhorns", branch = "grafbase", default-features = false, features = [
    "indexes",
    "export_derive",
] }
rand = "0.9"
rapidhash = "2"
redis = { version = "0.30.0", features = [
    "tokio-rustls-comp",
    "connection-manager",
] }
regex = "1.11.1"
reqwest = { version = "0.12.15", default-features = false, features = ["http2", "rustls-tls"] }
reqwest-eventsource = "0.6"
rmcp = { version = "0.5.0", features = [
    "transport-sse-server",
    "transport-streamable-http-server",
    "client",
    "reqwest",
    "transport-streamable-http-client",
] }
rmp-serde = "1.3.0"
rskafka = "0.6.0"
rstest = "0.25"
rust_decimal = "1.37.1"
rustls = { version = "0.23.26", default-features = false }
rustls-pemfile = { version = "2.2.0", default-features = false }
rustls-webpki = { version = "0.103.1", default-features = false }
schemars = "1"
semver = "1"
serde = { version = "1.0.219", features = ["derive"] }
serde-toml-merge = "0.3"
serde-value = "0.7"
serde_derive = "1"
serde_json = { version = "1.0.140", features = ["preserve_order"] }
serde_path_to_error = "0.1"
serde_regex = "1"
serde_urlencoded = "0.7"
serde_valid = "1"
serde_with = "3.12.0"
sha2 = "0.10.8"
similar = "2.5"
similar-asserts = "1.5"
size = "0.5.0"
slugify = "0.1"
sonic-rs = "0.5.0"
sqlx = { version = "0.8.5", default-features = false }
sse-stream = "0.2"
strum = "0.27.1"
strum_macros = "0.27.1"
syn = "2"
syntect = "5"
tantivy = "0.24"
tar = "0.4.44"
temp-env = "0.3"
tempfile = "3.16"
thiserror = "2.0.12"
time = "0.3.41"
tokio = "1.44.2"
tokio-rustls = { version = "0.26.2", default-features = false }
tokio-stream = "0.1"
tokio-tungstenite = { version = "0.26.2", default-features = false }
tokio-util = "0.7"
toml = "0.9"
tonic = { version = "0.13.0", default-features = false, features = [
    "channel",
    "tls-native-roots",
    "tls-aws-lc",
] }
tower = "0.5.2"
tower-http = "0.6.2"
tower-service = "0.3.3"
tracing = { version = "0.1.41", features = ["valuable"] }
tracing-futures = "0.2.5"
tracing-mock = "0.1"
tracing-opentelemetry = "0.31"
tracing-subscriber = { version = "0.3.19", default-features = false, features = ["valuable"] }
tungstenite = { version = "0.26.2", default-features = false }
ulid = "1.2.1"
unicode-normalization = "0.1.24"
url = "2.5.4"
urlencoding = "2.1"
uuid = "1.16.0"
valuable = "0.1"
wasmparser = "0.235.0"
wasmtime = "35"
wasmtime-wasi = "35"
wasmtime-wasi-http = "35"
webbrowser = "1"
webpki-roots = "1.0.0"
which = "8"
winnow = "0.7"
wiremock = "0.6.3"
wit-bindgen = "0.43.0"
xshell = "0.2"
zerocopy = "0.8.24"
zstd = "0.13"

# Workspace
engine = { path = "crates/engine" }
engine-error = { path = "crates/engine/error" }
engine-operation = { path = "crates/engine/operation" }
engine-schema = { path = "crates/engine/schema" }
event-queue = { path = "crates/event-queue" }
extension = { path = "crates/extension", package = "grafbase-extension" }
extension-catalog = { path = "crates/extension-catalog" }
federated-server = { path = "crates/federated-server" }
gateway-config = { path = "crates/gateway-config" }
grafbase-graphql-introspection = { path = "crates/grafbase-graphql-introspection" }
grafbase-hooks = { path = "crates/grafbase-hooks" }
grafbase-sdk = { path = "crates/grafbase-sdk" }
grafbase-telemetry = { path = "crates/telemetry" }
grafbase-workspace-hack = { path = "crates/grafbase-workspace-hack", version = "0.1" }
graph-ref = { path = "crates/graph-ref" }
graphql-composition = { path = "crates/graphql-composition" }
graphql-federated-graph = { path = "crates/graphql-federated-graph" }
graphql-lint = { path = "crates/graphql-lint" }
graphql-mocks = { path = "crates/graphql-mocks" }
graphql-schema-validation = { path = "crates/graphql-schema-validation" }
operation-normalizer = { path = "crates/operation-normalizer" }
rolling-logger = { path = "crates/rolling-logger" }
runtime = { path = "crates/runtime" }
runtime-local = { path = "crates/runtime-local" }
serde-dynamic-string = { path = "crates/serde-dynamic-string" }
wasi-component-loader = { path = "crates/wasi-component-loader" }
wrapping = { path = "crates/graphql-wrapping-types", package = "graphql-wrapping-types" }

[profile.bench]
strip = "none"
debug = true

[profile.release]
# by enabling link-time optimization, we can reduce size even further
# by telling cargo to optimize at the link stage (in addition to the
# normal optimizations during the compilation stage)
lto = "thin"

# Set the settings for build scripts and proc-macros.
[profile.dev.build-override]
opt-level = 2

[profile.dev.package."*"]
opt-level = 2

[profile.dev.package]
# Ensure wasmtime re-uses the same cache, which it doesn't for debug builds.
# https://github.com/bytecodealliance/wasmtime/blob/main/crates/cache/src/lib.rs#L234
wasmtime-internal-cache.debug-assertions = false

[profile.lambda]
inherits = "release"
opt-level = "s"
codegen-units = 1

[workspace.lints.rust]
nonstandard-style = "deny"
rust-2018-idioms = "deny"

[workspace.lints.clippy]
all = { level = "deny", priority = -1 }
panic = "deny"

# Opt out of lints that have too many false positives or are yet to be addressed.
bool-to-int-with-if = "allow"
cast-possible-truncation = "allow"
default-trait-access = "allow"
derive-partial-eq-without-eq = "allow"
doc-markdown = "allow"
enum-glob-use = "allow"
implicit-hasher = "allow"
items-after-statements = "allow"
into_iter_without_iter = "allow"
iter_without_into_iter = "allow"
large-digit-groups = "allow"
let-underscore-untyped = "allow"
let-with-type-underscore = "allow"
manual-assert = "allow"
map-unwrap-or = "allow"
match-wildcard-for-single-variants = "allow"
missing-errors-doc = "allow"
missing-panics-doc = "allow"
module-name-repetitions = "allow"
must-use-candidate = "allow"
needless-pass-by-value = "allow"
redundant-closure-for-method-calls = "allow"
single-match-else = "allow"
struct-excessive-bools = "allow"
struct-field-names = "allow"
too-many-lines = "allow"
unnecessary-fallible-conversions = "allow"
unused-async = "allow"
unused-self = "allow"
wildcard-imports = "allow"
