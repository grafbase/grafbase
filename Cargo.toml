[workspace]
resolver = "2"
members = [
    "cli",
    "gateway",
    "crates/*",
    "crates/engine/auth",
    "crates/engine/config",
    "crates/engine/axum",
    "crates/engine/codegen",
    "crates/engine/walker",
    "crates/engine/schema",
    "crates/engine/query-solver",
    "crates/engine/id-derives",
    "crates/engine/id-newtypes",
    "crates/engine/parser",
    "crates/engine/value",
]
exclude = ["crates/wasi-component-loader/examples", "examples/hooks-template"]

[patch.crates-io]
multipart-stream = { git = "https://github.com/grafbase/multipart-stream-rs-fork", rev = "06ff198e4041c8a8c1c93e580c260d597727c193" } # http-1.0-fix-multipart-mixed
# FIXME: Drop when a new version is released.
# Make sure we use the workspace-hack package when building
# this repo, but not when pulling it in
# See https://docs.rs/cargo-hakari/0.9.30/cargo_hakari/patch_directive/index.html for details
grafbase-workspace-hack.path = "crates/grafbase-workspace-hack"

[workspace.package]
version = "0.80.4"
edition = "2021"
license = "MPL-2.0"
homepage = "https://grafbase.com"
keywords = ["grafbase"]
repository = "https://github.com/grafbase/grafbase"

[workspace.dependencies]
anyhow = "1"
async-graphql = "7.0.3"
async-graphql-axum = "7.0.3"
async-graphql-parser = "7.0.3"
async-graphql-value = "7.0.3"
async-sse = "5"
async-trait = "0.1.80"
async-tungstenite = "0.26.0"
axum = { version = "0.7.5", default-features = false }
axum-server = { version = "0.7", default-features = false }
base64 = "0.22.1"
bitflags = "2"
bitvec = "1"
blake3 = "1.5.1"
bytes = "1.6.0"
chrono = { version = "0.4.38", default-features = false }
ctor = "0.2.8"
cynic = "3.9"
cynic-codegen = { version = "3.9", features = ["rkyv"] }
cynic-introspection = "3.9"
cynic-parser = "0.8"
cynic-parser-deser = "0.8"
deadpool-postgres = "0.14"
derive_more = "1.0.0-beta.6"
jwt-compact = "0.8"
flexbuffers = "2"
futures = "0.3.30"
futures-channel = "0.3.30"
futures-util = "0.3.30"
handlebars = "5.1.2"
headers = "0.4"
hex = "0.4.3"
http = "1.1.0"
httpsig = "0.0.16"
httpsig-hyper = "0.0.16"
hyper = { version = "1.3.1", features = ["http2"] }
hyper-util = "0.1.3"
indexmap = "2.2.6"
indoc = "2"
insta = { version = "1.39.0", features = ["json", "redactions"] }
internment = { version = "0.8", features = ["serde", "arc"] }
itertools = "0.13.0"
jsonwebtoken = "9.3.0"
governor = "0.6"
multipart-stream = "0.1.2"
mediatype = "0.19"
num-traits = "0.2.18"
openidconnect = "4.0.0-rc.1"
petgraph = "0.6"
pprof = "0.13"
postcard = { version = "1", features = ["use-std"] }
rand = "0.8"
regex = "1.10.4"
reqwest = { version = "0.12.8", default-features = false, features = ["http2"] }
rmp-serde = "1.3.0"
rstest = "0.22"
rustls = { version = "0.23.5", default-features = false }
rustls-pemfile = { version = "2.1.2", default-features = false }
rustls-webpki = { version = "0.102.3", default-features = false }
secrecy = "0.8"
send_wrapper = "0.6"
strum = "0.26.2"
strum_macros = "0.26.2"
tar = "0.4.40"
thiserror = "2.0.0"
tokio = "1.37.0"
tokio-postgres = { version = "0.7.10", default-features = false }
tokio-postgres-rustls = "0.12.0"
tokio-rustls = { version = "0.26.0", default-features = false }
tokio-tungstenite = { version = "0.23.0", default-features = false }
toml = "0.8"
tungstenite = { version = "0.23.0", default-features = false }
tonic = "0.12.0"
tower = "0.5.0"
tower-http = "0.5.2"
tower-service = "0.3.2"
url = "2.5.0"
uuid = "1.8.0"
ulid = "1.1.2"
wasm-bindgen = "0.2.92"
web-time = "1.1.0"
which = "7.0.0"
wiremock = "0.6.0"
worker = "0.4.0"
fnv = "1.0.7"
sha2 = "0.10.8"

# Serde
serde = { version = "1.0.199", features = ["derive"] }
serde_dynamo = "4.2.14"
serde_json = { version = "1.0.116", features = ["preserve_order"] }
serde_urlencoded = "0.7"
serde-wasm-bindgen = "0.6.5"
serde_with = "3.8.1"

# Tracing
tracing = "0.1.40"
tracing-subscriber = "0.3.18"
tracing-futures = "0.2.5"
tracing-mock = "0.1"
tracing-opentelemetry = "0.27"
opentelemetry = "0.26"
opentelemetry_sdk = "0.26.0"
opentelemetry-stdout = "0.26"
opentelemetry-otlp = "0.26"
opentelemetry-appender-tracing = "0.26.0"

# Common
graph-ref = { path = "crates/graph-ref" }
graphql-schema-validation = { path = "crates/graphql-schema-validation" }
grafbase-graphql-introspection = { path = "crates/grafbase-graphql-introspection" }
graphql-lint = { path = "crates/graphql-lint" }

# Gateway
federated-server = { path = "crates/federated-server" }
gateway-config = { path = "crates/gateway-config" }
rolling-logger = { path = "crates/rolling-logger" }

# Engine
engine-config-builder = { path = "crates/engine-config-builder" }
engine-parser = { path = "crates/engine/parser" }
engine = { path = "crates/engine" }
engine-auth = { path = "crates/engine/auth" }
engine-axum = { path = "crates/engine/axum" }
engine-config = { path = "crates/engine/config" }
engine-value = { path = "crates/engine/value" }
federated-graph = { path = "crates/graphql-federated-graph", package = "graphql-federated-graph" }
grafbase-telemetry = { path = "crates/telemetry" }
graphql-composition = { path = "crates/graphql-composition" }
graphql-mocks = { path = "crates/graphql-mocks" }
operation-normalizer = { path = "crates/operation-normalizer" }
runtime = { path = "crates/runtime" }
runtime-local = { path = "crates/runtime-local" }
runtime-noop = { path = "crates/runtime-noop" }
serde-dynamic-string = { path = "crates/serde-dynamic-string" }
grafbase-workspace-hack = { path = "crates/grafbase-workspace-hack", version = "0.1" }
wrapping = { path = "crates/graphql-wrapping-types", package = "graphql-wrapping-types" }

[profile.bench]
strip = "none"
debug = true

[profile.release]
# by enabling link-time optimization, we can reduce size even further
# by telling cargo to optimize at the link stage (in addition to the
# normal optimizations during the compilation stage)
lto = "thin"

[profile.lambda]
inherits = "release"
opt-level = "s"
codegen-units = 1

[workspace.lints.rust]
nonstandard-style = "deny"
rust-2018-idioms = "deny"
unused-crate-dependencies = "deny"

[workspace.lints.clippy]
all = { level = "deny", priority = -1 }
panic = "deny"

# Opt out of lints that have too many false positives or are yet to be addressed.
bool-to-int-with-if = "allow"
cast-possible-truncation = "allow"
default-trait-access = "allow"
derive-partial-eq-without-eq = "allow"
doc-markdown = "allow"
enum-glob-use = "allow"
implicit-hasher = "allow"
items-after-statements = "allow"
into_iter_without_iter = "allow"
iter_without_into_iter = "allow"
large-digit-groups = "allow"
let-underscore-untyped = "allow"
let-with-type-underscore = "allow"
manual-assert = "allow"
map-unwrap-or = "allow"
match-wildcard-for-single-variants = "allow"
missing-errors-doc = "allow"
missing-panics-doc = "allow"
module-name-repetitions = "allow"
must-use-candidate = "allow"
needless-pass-by-value = "allow"
redundant-closure-for-method-calls = "allow"
single-match-else = "allow"
struct-excessive-bools = "allow"
struct-field-names = "allow"
too-many-lines = "allow"
unnecessary-fallible-conversions = "allow"
unused-async = "allow"
unused-self = "allow"
wildcard-imports = "allow"
