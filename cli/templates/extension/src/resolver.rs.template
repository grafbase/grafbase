use grafbase_sdk::{
    types::{Configuration, SchemaDirective, FieldDefinitionDirective, FieldInputs, FieldOutput},
    Error, Extension, Headers, Resolver, ResolverExtension, Subscription
};

#[derive(ResolverExtension)]
struct {{name}};

impl Extension for {{name}} {
    fn new(schema_directives: Vec<SchemaDirective>, config: Configuration) -> Result<Self, Box<dyn std::error::Error>> {
        Ok(Self)
    }
}

impl Resolver for {{name}} {
    fn resolve_field(
        &mut self,
        headers: Headers,
        subgraph_name: &str,
        directive: FieldDefinitionDirective<'_>,
        inputs: FieldInputs,
    ) -> Result<FieldOutput, Error> {
        todo!()
    }

    fn resolve_subscription(
        &mut self,
        headers: Headers,
        subgraph_name: &str,
        directive: FieldDefinitionDirective<'_>,
    ) -> Result<Box<dyn Subscription>, Error> {
        todo!()
    }
}
