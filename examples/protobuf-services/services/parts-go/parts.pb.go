// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: parts.proto

package parts

import (
	_ "github.com/grafbase/grafbase/examples/protobuf-services/grafbase"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Part represents a component part in the system
type Part struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PartNumber        string  `protobuf:"bytes,2,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	Name              string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description       string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Cost              float64 `protobuf:"fixed64,5,opt,name=cost,proto3" json:"cost,omitempty"`
	Supplier          string  `protobuf:"bytes,6,opt,name=supplier,proto3" json:"supplier,omitempty"`
	WarehouseId       string  `protobuf:"bytes,7,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id,omitempty"`
	QuantityAvailable int32   `protobuf:"varint,8,opt,name=quantity_available,json=quantityAvailable,proto3" json:"quantity_available,omitempty"`
	Category          string  `protobuf:"bytes,9,opt,name=category,proto3" json:"category,omitempty"`
	IsCritical        bool    `protobuf:"varint,10,opt,name=is_critical,json=isCritical,proto3" json:"is_critical,omitempty"`
}

func (x *Part) Reset() {
	*x = Part{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Part) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Part) ProtoMessage() {}

func (x *Part) ProtoReflect() protoreflect.Message {
	mi := &file_parts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Part.ProtoReflect.Descriptor instead.
func (*Part) Descriptor() ([]byte, []int) {
	return file_parts_proto_rawDescGZIP(), []int{0}
}

func (x *Part) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Part) GetPartNumber() string {
	if x != nil {
		return x.PartNumber
	}
	return ""
}

func (x *Part) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Part) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Part) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *Part) GetSupplier() string {
	if x != nil {
		return x.Supplier
	}
	return ""
}

func (x *Part) GetWarehouseId() string {
	if x != nil {
		return x.WarehouseId
	}
	return ""
}

func (x *Part) GetQuantityAvailable() int32 {
	if x != nil {
		return x.QuantityAvailable
	}
	return 0
}

func (x *Part) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Part) GetIsCritical() bool {
	if x != nil {
		return x.IsCritical
	}
	return false
}

// Request message for getting a single part
type GetPartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPartRequest) Reset() {
	*x = GetPartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartRequest) ProtoMessage() {}

func (x *GetPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartRequest.ProtoReflect.Descriptor instead.
func (*GetPartRequest) Descriptor() ([]byte, []int) {
	return file_parts_proto_rawDescGZIP(), []int{1}
}

func (x *GetPartRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message for getting a single part
type GetPartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Part *Part `protobuf:"bytes,1,opt,name=part,proto3" json:"part,omitempty"`
}

func (x *GetPartResponse) Reset() {
	*x = GetPartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartResponse) ProtoMessage() {}

func (x *GetPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartResponse.ProtoReflect.Descriptor instead.
func (*GetPartResponse) Descriptor() ([]byte, []int) {
	return file_parts_proto_rawDescGZIP(), []int{2}
}

func (x *GetPartResponse) GetPart() *Part {
	if x != nil {
		return x.Part
	}
	return nil
}

// Request message for batch getting parts
type BatchGetPartsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BatchGetPartsRequest) Reset() {
	*x = BatchGetPartsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetPartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetPartsRequest) ProtoMessage() {}

func (x *BatchGetPartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetPartsRequest.ProtoReflect.Descriptor instead.
func (*BatchGetPartsRequest) Descriptor() ([]byte, []int) {
	return file_parts_proto_rawDescGZIP(), []int{3}
}

func (x *BatchGetPartsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// Response message for batch getting parts
type BatchGetPartsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parts []*Part `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"`
}

func (x *BatchGetPartsResponse) Reset() {
	*x = BatchGetPartsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetPartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetPartsResponse) ProtoMessage() {}

func (x *BatchGetPartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetPartsResponse.ProtoReflect.Descriptor instead.
func (*BatchGetPartsResponse) Descriptor() ([]byte, []int) {
	return file_parts_proto_rawDescGZIP(), []int{4}
}

func (x *BatchGetPartsResponse) GetParts() []*Part {
	if x != nil {
		return x.Parts
	}
	return nil
}

// Request message for searching parts with filters
type SearchPartsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter by name (partial match)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Filter by category
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	// Filter by supplier
	Supplier string `protobuf:"bytes,3,opt,name=supplier,proto3" json:"supplier,omitempty"`
	// Filter by warehouse ID
	WarehouseId string `protobuf:"bytes,4,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id,omitempty"`
	// Filter by minimum quantity available
	MinQuantity int32 `protobuf:"varint,5,opt,name=min_quantity,json=minQuantity,proto3" json:"min_quantity,omitempty"`
	// Filter by is_critical flag
	IsCritical bool `protobuf:"varint,6,opt,name=is_critical,json=isCritical,proto3" json:"is_critical,omitempty"`
	// Filter by minimum cost
	MinCost float64 `protobuf:"fixed64,7,opt,name=min_cost,json=minCost,proto3" json:"min_cost,omitempty"`
	// Filter by maximum cost
	MaxCost float64 `protobuf:"fixed64,8,opt,name=max_cost,json=maxCost,proto3" json:"max_cost,omitempty"`
	// Filter by part number (partial match)
	PartNumber string `protobuf:"bytes,9,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
}

func (x *SearchPartsRequest) Reset() {
	*x = SearchPartsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPartsRequest) ProtoMessage() {}

func (x *SearchPartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_parts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPartsRequest.ProtoReflect.Descriptor instead.
func (*SearchPartsRequest) Descriptor() ([]byte, []int) {
	return file_parts_proto_rawDescGZIP(), []int{5}
}

func (x *SearchPartsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchPartsRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SearchPartsRequest) GetSupplier() string {
	if x != nil {
		return x.Supplier
	}
	return ""
}

func (x *SearchPartsRequest) GetWarehouseId() string {
	if x != nil {
		return x.WarehouseId
	}
	return ""
}

func (x *SearchPartsRequest) GetMinQuantity() int32 {
	if x != nil {
		return x.MinQuantity
	}
	return 0
}

func (x *SearchPartsRequest) GetIsCritical() bool {
	if x != nil {
		return x.IsCritical
	}
	return false
}

func (x *SearchPartsRequest) GetMinCost() float64 {
	if x != nil {
		return x.MinCost
	}
	return 0
}

func (x *SearchPartsRequest) GetMaxCost() float64 {
	if x != nil {
		return x.MaxCost
	}
	return 0
}

func (x *SearchPartsRequest) GetPartNumber() string {
	if x != nil {
		return x.PartNumber
	}
	return ""
}

// Response message for searching parts
type SearchPartsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parts []*Part `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"`
}

func (x *SearchPartsResponse) Reset() {
	*x = SearchPartsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPartsResponse) ProtoMessage() {}

func (x *SearchPartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_parts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPartsResponse.ProtoReflect.Descriptor instead.
func (*SearchPartsResponse) Descriptor() ([]byte, []int) {
	return file_parts_proto_rawDescGZIP(), []int{6}
}

func (x *SearchPartsResponse) GetParts() []*Part {
	if x != nil {
		return x.Parts
	}
	return nil
}

var File_parts_proto protoreflect.FileDescriptor

var file_parts_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x1a, 0x16, 0x67, 0x72, 0x61, 0x66, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x03, 0x0a,
	0x04, 0x50, 0x61, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x2d, 0x0a, 0x12, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x3a, 0x6b, 0xea, 0xbb, 0x1c,
	0x2e, 0x40, 0x6b, 0x65, 0x79, 0x28, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x3a, 0x20, 0x22, 0x69,
	0x64, 0x22, 0x29, 0x20, 0x40, 0x6b, 0x65, 0x79, 0x28, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x3a,
	0x20, 0x22, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x29, 0xfa,
	0xbb, 0x1c, 0x35, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x1a, 0x14, 0x7b, 0x20, 0x69, 0x64, 0x3a, 0x20, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x20, 0x7d, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x22, 0x28,
	0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x3a, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x22, 0x9e, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69,
	0x6e, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6d, 0x61, 0x78,
	0x43, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x32,
	0x84, 0x03, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x38, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x0d, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x73, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0xea, 0xbb, 0x1c, 0x07, 0x40, 0x6c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x82, 0xbc, 0x1c, 0x1b, 0x40, 0x69, 0x73, 0x28, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x3a,
	0x20, 0x22, 0x7b, 0x20, 0x69, 0x64, 0x73, 0x3a, 0x20, 0x5b, 0x69, 0x64, 0x5d, 0x20, 0x7d, 0x22,
	0x29, 0x12, 0x44, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x73,
	0x12, 0x19, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x7d, 0xe8, 0xbb, 0x1c, 0x01, 0xfa, 0xbb, 0x1c,
	0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x82, 0xbc, 0x1c, 0x6c, 0x40, 0x6c, 0x69, 0x6e, 0x6b, 0x28,
	0x75, 0x72, 0x6c, 0x3a, 0x20, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x73, 0x70,
	0x65, 0x63, 0x73, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x73, 0x2f, 0x76, 0x31, 0x22, 0x2c, 0x20, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x3a, 0x20,
	0x5b, 0x22, 0x40, 0x6b, 0x65, 0x79, 0x22, 0x2c, 0x20, 0x22, 0x40, 0x6c, 0x6f, 0x6f, 0x6b, 0x75,
	0x70, 0x22, 0x2c, 0x20, 0x22, 0x40, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x22, 0x2c, 0x20, 0x22,
	0x40, 0x69, 0x73, 0x22, 0x5d, 0x29, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x66, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x67, 0x72,
	0x61, 0x66, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_parts_proto_rawDescOnce sync.Once
	file_parts_proto_rawDescData = file_parts_proto_rawDesc
)

func file_parts_proto_rawDescGZIP() []byte {
	file_parts_proto_rawDescOnce.Do(func() {
		file_parts_proto_rawDescData = protoimpl.X.CompressGZIP(file_parts_proto_rawDescData)
	})
	return file_parts_proto_rawDescData
}

var file_parts_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_parts_proto_goTypes = []interface{}{
	(*Part)(nil),                  // 0: parts.Part
	(*GetPartRequest)(nil),        // 1: parts.GetPartRequest
	(*GetPartResponse)(nil),       // 2: parts.GetPartResponse
	(*BatchGetPartsRequest)(nil),  // 3: parts.BatchGetPartsRequest
	(*BatchGetPartsResponse)(nil), // 4: parts.BatchGetPartsResponse
	(*SearchPartsRequest)(nil),    // 5: parts.SearchPartsRequest
	(*SearchPartsResponse)(nil),   // 6: parts.SearchPartsResponse
}
var file_parts_proto_depIdxs = []int32{
	0, // 0: parts.GetPartResponse.part:type_name -> parts.Part
	0, // 1: parts.BatchGetPartsResponse.parts:type_name -> parts.Part
	0, // 2: parts.SearchPartsResponse.parts:type_name -> parts.Part
	1, // 3: parts.PartService.GetPart:input_type -> parts.GetPartRequest
	3, // 4: parts.PartService.BatchGetParts:input_type -> parts.BatchGetPartsRequest
	5, // 5: parts.PartService.SearchParts:input_type -> parts.SearchPartsRequest
	2, // 6: parts.PartService.GetPart:output_type -> parts.GetPartResponse
	4, // 7: parts.PartService.BatchGetParts:output_type -> parts.BatchGetPartsResponse
	6, // 8: parts.PartService.SearchParts:output_type -> parts.SearchPartsResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_parts_proto_init() }
func file_parts_proto_init() {
	if File_parts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_parts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Part); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetPartsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetPartsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPartsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPartsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_parts_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_parts_proto_goTypes,
		DependencyIndexes: file_parts_proto_depIdxs,
		MessageInfos:      file_parts_proto_msgTypes,
	}.Build()
	File_parts_proto = out.File
	file_parts_proto_rawDesc = nil
	file_parts_proto_goTypes = nil
	file_parts_proto_depIdxs = nil
}
