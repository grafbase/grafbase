directive @join__unionMember(graph: join__Graph!, member: String!) on UNION

directive @join__implements(graph: join__Graph!, interface: String!) on OBJECT | INTERFACE

directive @join__graph(name: String!, url: String) on ENUM_VALUE

directive @join__field(
  graph: join__Graph
  requires: join__FieldSet
  provides: join__FieldSet
  type: String
  external: Boolean
  override: String
  overrideLabel: String
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__type(
  graph: join__Graph
  key: join__FieldSet
  extension: Boolean = false
  resolvable: Boolean = true
  isInterfaceObject: Boolean = false
) on SCALAR | OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT

directive @join__owner(graph: join__Graph!) on OBJECT

scalar join__FieldSet

type Query {
  greet(name: String!): String @join__field(graph: GREET)
}

enum join__Graph {
  GREET @join__graph(name: "greet", url: "http://subgraph.example.com/graphql")
}
