// Code generated by wit-bindgen-go. DO NOT EDIT.

package resolver

import (
	resolvertypes "example.com/grafbase-go-extension/grafbase/sdk/resolver-types"
	"go.bytecodealliance.org/cm"
)

// This file contains wasmimport and wasmexport declarations for "grafbase:sdk".

//go:wasmexport grafbase:sdk/resolver#prepare
//export grafbase:sdk/resolver#prepare
func wasmexport_Prepare(context0 uint32, subgraphName0 *uint8, subgraphName1 uint32, directive0 *uint8, directive1 uint32, directive2 *uint8, directive3 uint32, rootFieldId0 uint32, fields0 *Field, fields1 uint32) (result *cm.Result[ErrorShape, cm.List[uint8], Error]) {
	context := cm.Reinterpret[SharedContext]((uint32)(context0))
	subgraphName := cm.LiftString[string]((*uint8)(subgraphName0), (uint32)(subgraphName1))
	directive := lift_Directive((*uint8)(directive0), (uint32)(directive1), (*uint8)(directive2), (uint32)(directive3))
	rootFieldID := (resolvertypes.FieldID)((uint32)(rootFieldId0))
	fields := cm.LiftList[cm.List[Field]]((*Field)(fields0), (uint32)(fields1))
	result_ := Exports.Prepare(context, subgraphName, directive, rootFieldID, fields)
	result = &result_
	return
}

//go:wasmexport grafbase:sdk/resolver#resolve
//export grafbase:sdk/resolver#resolve
func wasmexport_Resolve(context0 uint32, prepared0 *uint8, prepared1 uint32, headers0 uint32, arguments0 *cm.Tuple[ArgumentsID, cm.List[uint8]], arguments1 uint32) (result *Response) {
	context := cm.Reinterpret[SharedContext]((uint32)(context0))
	prepared := cm.LiftList[cm.List[uint8]]((*uint8)(prepared0), (uint32)(prepared1))
	headers_ := cm.Reinterpret[Headers]((uint32)(headers0))
	arguments := cm.LiftList[cm.List[cm.Tuple[ArgumentsID, cm.List[uint8]]]]((*cm.Tuple[ArgumentsID, cm.List[uint8]])(arguments0), (uint32)(arguments1))
	result_ := Exports.Resolve(context, prepared, headers_, arguments)
	result = &result_
	return
}

//go:wasmexport grafbase:sdk/resolver#create-subscription
//export grafbase:sdk/resolver#create-subscription
func wasmexport_CreateSubscription(context0 uint32, prepared0 *uint8, prepared1 uint32, headers0 uint32, arguments0 *cm.Tuple[ArgumentsID, cm.List[uint8]], arguments1 uint32) (result *cm.Result[ErrorShape, cm.Option[cm.List[uint8]], Error]) {
	context := cm.Reinterpret[SharedContext]((uint32)(context0))
	prepared := cm.LiftList[cm.List[uint8]]((*uint8)(prepared0), (uint32)(prepared1))
	headers_ := cm.Reinterpret[Headers]((uint32)(headers0))
	arguments := cm.LiftList[cm.List[cm.Tuple[ArgumentsID, cm.List[uint8]]]]((*cm.Tuple[ArgumentsID, cm.List[uint8]])(arguments0), (uint32)(arguments1))
	result_ := Exports.CreateSubscription(context, prepared, headers_, arguments)
	result = &result_
	return
}

//go:wasmexport grafbase:sdk/resolver#resolve-next-subscription-item
//export grafbase:sdk/resolver#resolve-next-subscription-item
func wasmexport_ResolveNextSubscriptionItem(context0 uint32) (result *cm.Result[OptionSubscriptionItemShape, cm.Option[SubscriptionItem], Error]) {
	context := cm.Reinterpret[SharedContext]((uint32)(context0))
	result_ := Exports.ResolveNextSubscriptionItem(context)
	result = &result_
	return
}

//go:wasmexport grafbase:sdk/resolver#drop-subscription
//export grafbase:sdk/resolver#drop-subscription
func wasmexport_DropSubscription(context0 uint32) {
	context := cm.Reinterpret[SharedContext]((uint32)(context0))
	Exports.DropSubscription(context)
	return
}
