// Code generated by wit-bindgen-go. DO NOT EDIT.

package natsclient

import (
	"go.bytecodealliance.org/cm"
	"unsafe"
)

// TupleStringStringShape is used for storage in variant or result types.
type TupleStringStringShape struct {
	_     cm.HostLayout
	shape [unsafe.Sizeof([2]string{})]byte
}

func lower_TupleStringString(v [2]string) (f0 *uint8, f1 uint32, f2 *uint8, f3 uint32) {
	f0, f1 = cm.LowerString(v[0])
	f2, f3 = cm.LowerString(v[1])
	return
}

func lower_NatsAuth(v NatsAuth) (f0 uint32, f1 uint32, f2 uint32, f3 *uint8, f4 uint32) {
	f0 = (uint32)(v.Tag())
	switch f0 {
	case 0: // username-password
		v1, v2, v3, v4 := lower_TupleStringString(*cm.Case[[2]string](&v, 0))
		f1 = (uint32)(cm.PointerToU32(v1))
		f2 = (uint32)(v2)
		f3 = (*uint8)(v3)
		f4 = (uint32)(v4)
	case 1: // token
		v1, v2 := cm.LowerString(*cm.Case[string](&v, 1))
		f1 = (uint32)(cm.PointerToU32(v1))
		f2 = (uint32)(v2)
	case 2: // credentials
		v1, v2 := cm.LowerString(*cm.Case[string](&v, 2))
		f1 = (uint32)(cm.PointerToU32(v1))
		f2 = (uint32)(v2)
	}
	return
}

func lower_OptionNatsAuth(v cm.Option[NatsAuth]) (f0 uint32, f1 uint32, f2 uint32, f3 uint32, f4 *uint8, f5 uint32) {
	some := v.Some()
	if some != nil {
		f0 = 1
		v1, v2, v3, v4, v5 := lower_NatsAuth(*some)
		f1 = (uint32)(v1)
		f2 = (uint32)(v2)
		f3 = (uint32)(v3)
		f4 = (*uint8)(v4)
		f5 = (uint32)(v5)
	}
	return
}

// NatsMessageShape is used for storage in variant or result types.
type NatsMessageShape struct {
	_     cm.HostLayout
	shape [unsafe.Sizeof(NatsMessage{})]byte
}

func lower_OptionU64(v cm.Option[uint64]) (f0 uint32, f1 uint64) {
	some := v.Some()
	if some != nil {
		f0 = 1
		v1 := (uint64)(*some)
		f1 = (uint64)(v1)
	}
	return
}

// OptionListU8Shape is used for storage in variant or result types.
type OptionListU8Shape struct {
	_     cm.HostLayout
	shape [unsafe.Sizeof(cm.Option[cm.List[uint8]]{})]byte
}

// OptionNatsMessageShape is used for storage in variant or result types.
type OptionNatsMessageShape struct {
	_     cm.HostLayout
	shape [unsafe.Sizeof(cm.Option[NatsMessage]{})]byte
}
