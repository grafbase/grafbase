// Code generated by wit-bindgen-go. DO NOT EDIT.

package postgres

import (
	"go.bytecodealliance.org/cm"
	"unsafe"
)

// TupleF64F64Shape is used for storage in variant or result types.
type TupleF64F64Shape struct {
	_     cm.HostLayout
	shape [unsafe.Sizeof([2]float64{})]byte
}

func lower_OptionU32(v cm.Option[uint32]) (f0 uint32, f1 uint32) {
	some := v.Some()
	if some != nil {
		f0 = 1
		v1 := (uint32)(*some)
		f1 = (uint32)(v1)
	}
	return
}

func lower_OptionU64(v cm.Option[uint64]) (f0 uint32, f1 uint64) {
	some := v.Some()
	if some != nil {
		f0 = 1
		v1 := (uint64)(*some)
		f1 = (uint64)(v1)
	}
	return
}

func lower_PgPoolOptions(v PgPoolOptions) (f0 uint32, f1 uint32, f2 uint32, f3 uint32, f4 uint32, f5 uint64, f6 uint32, f7 uint64, f8 uint32, f9 uint64) {
	f0, f1 = lower_OptionU32(v.MaxConnections)
	f2, f3 = lower_OptionU32(v.MinConnections)
	f4, f5 = lower_OptionU64(v.IdleTimeoutMs)
	f6, f7 = lower_OptionU64(v.AcquisitionTimeoutMs)
	f8, f9 = lower_OptionU64(v.MaxLifetimeMs)
	return
}

func lower_TupleListPgBoundValuePgValueTree(v cm.Tuple[cm.List[PgBoundValue], PgValueTree]) (f0 *PgBoundValue, f1 uint32, f2 *PgValue, f3 uint32) {
	f0, f1 = cm.LowerList(v.F0)
	f2, f3 = cm.LowerList(v.F1)
	return
}

// OptionListU8Shape is used for storage in variant or result types.
type OptionListU8Shape struct {
	_     cm.HostLayout
	shape [unsafe.Sizeof(cm.Option[cm.List[uint8]]{})]byte
}
