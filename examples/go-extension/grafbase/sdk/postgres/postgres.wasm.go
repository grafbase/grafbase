// Code generated by wit-bindgen-go. DO NOT EDIT.

package postgres

import (
	"go.bytecodealliance.org/cm"
)

// This file contains wasmimport and wasmexport declarations for "grafbase:sdk".

//go:wasmimport grafbase:sdk/postgres [resource-drop]pg-pool
//go:noescape
func wasmimport_PgPoolResourceDrop(self0 uint32)

//go:wasmimport grafbase:sdk/postgres [static]pg-pool.connect
//go:noescape
func wasmimport_PgPoolConnect(name0 *uint8, name1 uint32, url0 *uint8, url1 uint32, options0 uint32, options1 uint32, options2 uint32, options3 uint32, options4 uint32, options5 uint64, options6 uint32, options7 uint64, options8 uint32, options9 uint64, result *cm.Result[string, PgPool, string])

//go:wasmimport grafbase:sdk/postgres [method]pg-pool.acquire
//go:noescape
func wasmimport_PgPoolAcquire(self0 uint32, result *cm.Result[string, PgConnection, string])

//go:wasmimport grafbase:sdk/postgres [method]pg-pool.begin-transaction
//go:noescape
func wasmimport_PgPoolBeginTransaction(self0 uint32, result *cm.Result[string, PgTransaction, string])

//go:wasmimport grafbase:sdk/postgres [resource-drop]pg-connection
//go:noescape
func wasmimport_PgConnectionResourceDrop(self0 uint32)

//go:wasmimport grafbase:sdk/postgres [method]pg-connection.execute
//go:noescape
func wasmimport_PgConnectionExecute(self0 uint32, query0 *uint8, query1 uint32, params0 *PgBoundValue, params1 uint32, params2 *PgValue, params3 uint32, result *cm.Result[string, uint64, string])

//go:wasmimport grafbase:sdk/postgres [method]pg-connection.query
//go:noescape
func wasmimport_PgConnectionQuery(self0 uint32, query0 *uint8, query1 uint32, params0 *PgBoundValue, params1 uint32, params2 *PgValue, params3 uint32, result *cm.Result[cm.List[PgRow], cm.List[PgRow], string])

//go:wasmimport grafbase:sdk/postgres [resource-drop]pg-row
//go:noescape
func wasmimport_PgRowResourceDrop(self0 uint32)

//go:wasmimport grafbase:sdk/postgres [method]pg-row.as-bytes
//go:noescape
func wasmimport_PgRowAsBytes(self0 uint32, index0 uint64, result *cm.Result[OptionListU8Shape, cm.Option[cm.List[uint8]], string])

//go:wasmimport grafbase:sdk/postgres [method]pg-row.columns
//go:noescape
func wasmimport_PgRowColumns(self0 uint32, result *cm.List[string])

//go:wasmimport grafbase:sdk/postgres [method]pg-row.len
//go:noescape
func wasmimport_PgRowLen(self0 uint32) (result0 uint64)

//go:wasmimport grafbase:sdk/postgres [resource-drop]pg-transaction
//go:noescape
func wasmimport_PgTransactionResourceDrop(self0 uint32)

//go:wasmimport grafbase:sdk/postgres [method]pg-transaction.commit
//go:noescape
func wasmimport_PgTransactionCommit(self0 uint32, result *cm.Result[string, struct{}, string])

//go:wasmimport grafbase:sdk/postgres [method]pg-transaction.execute
//go:noescape
func wasmimport_PgTransactionExecute(self0 uint32, query0 *uint8, query1 uint32, params0 *PgBoundValue, params1 uint32, params2 *PgValue, params3 uint32, result *cm.Result[string, uint64, string])

//go:wasmimport grafbase:sdk/postgres [method]pg-transaction.query
//go:noescape
func wasmimport_PgTransactionQuery(self0 uint32, query0 *uint8, query1 uint32, params0 *PgBoundValue, params1 uint32, params2 *PgValue, params3 uint32, result *cm.Result[cm.List[PgRow], cm.List[PgRow], string])

//go:wasmimport grafbase:sdk/postgres [method]pg-transaction.rollback
//go:noescape
func wasmimport_PgTransactionRollback(self0 uint32, result *cm.Result[string, struct{}, string])
