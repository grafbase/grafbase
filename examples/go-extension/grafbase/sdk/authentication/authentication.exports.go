// Code generated by wit-bindgen-go. DO NOT EDIT.

package authentication

import (
	"go.bytecodealliance.org/cm"
)

// Exports represents the caller-defined exports from "grafbase:sdk/authentication".
var Exports struct {
	// Authenticate represents the caller-defined, exported function "authenticate".
	//
	// Authenticates a request using the provided headers.
	//
	// This function validates authentication credentials found in the request headers
	// and returns an authentication token if successful.
	//
	// # Parameters
	// - `headers`: Immutable HTTP headers
	//
	// # Returns
	// - `Ok(token)`: Authentication successful, returns a valid token
	// - `Err(error-response)`: Authentication failed, returns error details
	//
	//	authenticate: func(context: shared-context, headers: headers) -> result<token,
	//	error-response>
	Authenticate func(context SharedContext, headers_ Headers) (result cm.Result[ErrorResponseShape, Token, ErrorResponse])

	// PublicMetadata represents the caller-defined, exported function "public-metadata".
	//
	// Define endpoints on the gateway that expose authentication related metadata. This
	// can be used to implement [OAuth 2.0 Protected Resource Metadata](https://datatracker.ietf.org/doc/html/rfc9728),
	// for example.
	//
	// See the docs on [`public-metadata-endpoint`](public-metadata-endpoint) for details.
	//
	//	public-metadata: func() -> result<list<public-metadata-endpoint>, error>
	PublicMetadata func() (result cm.Result[ErrorShape, cm.List[PublicMetadataEndpoint], Error])
}
