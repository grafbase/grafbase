// Code generated by wit-bindgen-go. DO NOT EDIT.

package authorization

import (
	authorizationtypes "example.com/grafbase-go-extension/grafbase/sdk/authorization-types"
	"example.com/grafbase-go-extension/grafbase/sdk/token"
	"go.bytecodealliance.org/cm"
	"strconv"
	"unsafe"
)

// TupleAuthorizationDecisionsListU8Shape is used for storage in variant or result types.
type TupleAuthorizationDecisionsListU8Shape struct {
	_     cm.HostLayout
	shape [unsafe.Sizeof(cm.Tuple[AuthorizationDecisions, cm.List[uint8]]{})]byte
}

func lift_Token(f0 uint32, f1 *uint8, f2 uint32) (v token.Token) {
	switch f0 {
	case 0:
		return cm.New[token.Token](0, struct{}{})
	case 1:
		return cm.New[token.Token](1, cm.LiftList[cm.List[uint8]]((*uint8)(f1), (uint32)(f2)))
	}
	panic("lift variant: unknown case: " + strconv.Itoa(int(f0)))
}

func lift_QueryElements(f0 *cm.Tuple3[string, uint32, uint32], f1 uint32, f2 *authorizationtypes.QueryElement, f3 uint32) (v authorizationtypes.QueryElements) {
	v.DirectiveNames = cm.LiftList[cm.List[cm.Tuple3[string, uint32, uint32]]](f0, f1)
	v.Elements = cm.LiftList[cm.List[authorizationtypes.QueryElement]](f2, f3)
	return
}

// AuthorizationDecisionsShape is used for storage in variant or result types.
type AuthorizationDecisionsShape struct {
	_     cm.HostLayout
	shape [unsafe.Sizeof(AuthorizationDecisions{})]byte
}

func lift_ResponseElements(f0 *cm.Tuple3[string, uint32, uint32], f1 uint32, f2 *authorizationtypes.ResponseElement, f3 uint32, f4 *cm.List[uint8], f5 uint32) (v authorizationtypes.ResponseElements) {
	v.DirectiveNames = cm.LiftList[cm.List[cm.Tuple3[string, uint32, uint32]]](f0, f1)
	v.Elements = cm.LiftList[cm.List[authorizationtypes.ResponseElement]](f2, f3)
	v.Items = cm.LiftList[cm.List[cm.List[uint8]]](f4, f5)
	return
}
