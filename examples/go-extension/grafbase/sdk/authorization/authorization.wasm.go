// Code generated by wit-bindgen-go. DO NOT EDIT.

package authorization

import (
	authorizationtypes "example.com/grafbase-go-extension/grafbase/sdk/authorization-types"
	"go.bytecodealliance.org/cm"
)

// This file contains wasmimport and wasmexport declarations for "grafbase:sdk".

//go:wasmexport grafbase:sdk/authorization#authorize-query
//export grafbase:sdk/authorization#authorize-query
func wasmexport_AuthorizeQuery(context0 uint32, headers0 uint32, token0 uint32, token1 *uint8, token2 uint32, elements0 *cm.Tuple3[string, uint32, uint32], elements1 uint32, elements2 *authorizationtypes.QueryElement, elements3 uint32) (result *cm.Result[TupleAuthorizationDecisionsListU8Shape, cm.Tuple[AuthorizationDecisions, cm.List[uint8]], ErrorResponse]) {
	context := cm.Reinterpret[SharedContext]((uint32)(context0))
	headers_ := cm.Reinterpret[Headers]((uint32)(headers0))
	token_ := lift_Token((uint32)(token0), (*uint8)(token1), (uint32)(token2))
	elements := lift_QueryElements((*cm.Tuple3[string, uint32, uint32])(elements0), (uint32)(elements1), (*authorizationtypes.QueryElement)(elements2), (uint32)(elements3))
	result_ := Exports.AuthorizeQuery(context, headers_, token_, elements)
	result = &result_
	return
}

//go:wasmexport grafbase:sdk/authorization#authorize-response
//export grafbase:sdk/authorization#authorize-response
func wasmexport_AuthorizeResponse(context0 uint32, state0 *uint8, state1 uint32, elements0 *cm.Tuple3[string, uint32, uint32], elements1 uint32, elements2 *authorizationtypes.ResponseElement, elements3 uint32, elements4 *cm.List[uint8], elements5 uint32) (result *cm.Result[AuthorizationDecisionsShape, AuthorizationDecisions, Error]) {
	context := cm.Reinterpret[SharedContext]((uint32)(context0))
	state := cm.LiftList[cm.List[uint8]]((*uint8)(state0), (uint32)(state1))
	elements := lift_ResponseElements((*cm.Tuple3[string, uint32, uint32])(elements0), (uint32)(elements1), (*authorizationtypes.ResponseElement)(elements2), (uint32)(elements3), (*cm.List[uint8])(elements4), (uint32)(elements5))
	result_ := Exports.AuthorizeResponse(context, state, elements)
	result = &result_
	return
}
