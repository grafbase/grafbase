// Code generated by wit-bindgen-go. DO NOT EDIT.

package hooks

import (
	httpclient "example.com/grafbase-go-extension/grafbase/sdk/http-client"
	"go.bytecodealliance.org/cm"
)

// This file contains wasmimport and wasmexport declarations for "grafbase:sdk".

//go:wasmexport grafbase:sdk/hooks#on-request
//export grafbase:sdk/hooks#on-request
func wasmexport_OnRequest(context0 uint32, url0 *uint8, url1 uint32, method0 uint32, headers0 uint32) (result *cm.Result[ErrorResponse, struct{}, ErrorResponse]) {
	context := cm.Reinterpret[SharedContext]((uint32)(context0))
	url := cm.LiftString[string]((*uint8)(url0), (uint32)(url1))
	method := (httpclient.HTTPMethod)((uint32)(method0))
	headers_ := cm.Reinterpret[Headers]((uint32)(headers0))
	result_ := Exports.OnRequest(context, url, method, headers_)
	result = &result_
	return
}

//go:wasmexport grafbase:sdk/hooks#on-response
//export grafbase:sdk/hooks#on-response
func wasmexport_OnResponse(context0 uint32, status0 uint32, headers0 uint32, eventQueue0 uint32) (result *cm.Result[string, struct{}, string]) {
	context := cm.Reinterpret[SharedContext]((uint32)(context0))
	status := (uint16)((uint32)(status0))
	headers_ := cm.Reinterpret[Headers]((uint32)(headers0))
	eventQueue := cm.Reinterpret[EventQueue]((uint32)(eventQueue0))
	result_ := Exports.OnResponse(context, status, headers_, eventQueue)
	result = &result_
	return
}
