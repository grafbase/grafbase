extend schema
  @link(url: "https://grafbase.com/extensions/grpc/0.2.0", import: ["@protoServices", "@protoEnums", "@protoMessages", "@grpcMethod"])
  @link(url: "https://specs.grafbase.com/composite-schemas/v1", import: ["@key", "@derive", "@is", "@lookup", "@require"])
  @protoServices(
    definitions: [
      {
        name: "locations.LocationService"
        methods: [
          {
            name: "GetLocation"
            inputType: ".locations.GetLocationRequest"
            outputType: ".locations.GetLocationResponse"
          }
          {
            name: "BatchGetLocations"
            inputType: ".locations.BatchGetLocationsRequest"
            outputType: ".locations.BatchGetLocationsResponse"
          }
          {
            name: "SearchLocations"
            inputType: ".locations.SearchLocationsRequest"
            outputType: ".locations.SearchLocationsResponse"
          }
        ]
      }
    ]
  )
  @protoMessages(
    definitions: [
      {
        name: ".locations.Location"
        fields: [
          {
            name: "id"
            number: 1
            repeated: false
            type: "string"
          }
          {
            name: "name"
            number: 2
            repeated: false
            type: "string"
          }
          {
            name: "address"
            number: 3
            repeated: false
            type: "string"
          }
          {
            name: "city"
            number: 4
            repeated: false
            type: "string"
          }
          {
            name: "state"
            number: 5
            repeated: false
            type: "string"
          }
          {
            name: "country"
            number: 6
            repeated: false
            type: "string"
          }
          {
            name: "postal_code"
            number: 7
            repeated: false
            type: "string"
          }
          {
            name: "capacity"
            number: 8
            repeated: false
            type: "int32"
          }
          {
            name: "manager_name"
            number: 9
            repeated: false
            type: "string"
          }
          {
            name: "contact_phone"
            number: 10
            repeated: false
            type: "string"
          }
          {
            name: "is_active"
            number: 11
            repeated: false
            type: "bool"
          }
        ]
      }
      {
        name: ".locations.GetLocationRequest"
        fields: [
          {
            name: "id"
            number: 1
            repeated: false
            type: "string"
          }
        ]
      }
      {
        name: ".locations.GetLocationResponse"
        fields: [
          {
            name: "location"
            number: 1
            repeated: false
            type: ".locations.Location"
          }
        ]
      }
      {
        name: ".locations.BatchGetLocationsRequest"
        fields: [
          {
            name: "ids"
            number: 1
            repeated: true
            type: "string"
          }
        ]
      }
      {
        name: ".locations.BatchGetLocationsResponse"
        fields: [
          {
            name: "locations"
            number: 1
            repeated: true
            type: ".locations.Location"
          }
        ]
      }
      {
        name: ".locations.SearchLocationsRequest"
        fields: [
          {
            name: "name"
            number: 1
            repeated: false
            type: "string"
          }
          {
            name: "city"
            number: 2
            repeated: false
            type: "string"
          }
          {
            name: "state"
            number: 3
            repeated: false
            type: "string"
          }
          {
            name: "country"
            number: 4
            repeated: false
            type: "string"
          }
          {
            name: "min_capacity"
            number: 5
            repeated: false
            type: "int32"
          }
          {
            name: "is_active"
            number: 6
            repeated: false
            type: "bool"
          }
          {
            name: "postal_code"
            number: 7
            repeated: false
            type: "string"
          }
          {
            name: "manager_name"
            number: 8
            repeated: false
            type: "string"
          }
        ]
      }
      {
        name: ".locations.SearchLocationsResponse"
        fields: [
          {
            name: "locations"
            number: 1
            repeated: true
            type: ".locations.Location"
          }
        ]
      }
    ]
  )

type Query {
"""
Get a single location by ID
"""
  locations_LocationService_GetLocation(input: locations_GetLocationRequestInput): locations_GetLocationResponse @grpcMethod(service: "locations.LocationService", method: "GetLocation")
"""
Batch get locations by IDs
"""
  locations_LocationService_BatchGetLocations(input: locations_BatchGetLocationsRequestInput @is(field: "{ ids: [id] }")): locations_BatchGetLocationsResponse @grpcMethod(service: "locations.LocationService", method: "BatchGetLocations") @lookup
"""
Search locations with optional filters
"""
  locations_LocationService_SearchLocations(input: locations_SearchLocationsRequestInput): locations_SearchLocationsResponse @grpcMethod(service: "locations.LocationService", method: "SearchLocations")
}

"64 bit signed integer" scalar I64
"64 bit unsigned integer" scalar U64

"""
Request message for getting a single location
"""
input locations_GetLocationRequestInput {
  id: String
}

"""
Request message for batch getting locations
"""
input locations_BatchGetLocationsRequestInput {
  ids: [String!]
}

"""
Request message for searching locations with filters
"""
input locations_SearchLocationsRequestInput {
"""
Filter by name (partial match)
"""
  name: String
"""
Filter by city
"""
  city: String
"""
Filter by state
"""
  state: String
"""
Filter by country
"""
  country: String
"""
Filter by minimum capacity
"""
  min_capacity: Int
"""
Filter by is_active flag
"""
  is_active: Boolean
"""
Filter by postal code (partial match)
"""
  postal_code: String
"""
Filter by manager name (partial match)
"""
  manager_name: String
}

"""
Location represents a warehouse or storage location in the system
"""
type locations_Location @key(fields: "id") {
  id: String!
  name: String!
  address: String!
  city: String!
  state: String!
  country: String!
  postal_code: String!
  capacity: Int!
  manager_name: String!
  contact_phone: String!
  is_active: Boolean!
}

"""
Response message for getting a single location
"""
type locations_GetLocationResponse {
  location: locations_Location
}

"""
Response message for batch getting locations
"""
type locations_BatchGetLocationsResponse {
  locations: [locations_Location!]
}

"""
Response message for searching locations
"""
type locations_SearchLocationsResponse {
  locations: [locations_Location!]
}
