// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: grafbase/options.proto

package grafbase

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeriveField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *string `protobuf:"bytes,1,opt,name=entity" json:"entity,omitempty"`
	Name   *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Is     *string `protobuf:"bytes,3,opt,name=is" json:"is,omitempty"`
}

func (x *DeriveField) Reset() {
	*x = DeriveField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grafbase_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeriveField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveField) ProtoMessage() {}

func (x *DeriveField) ProtoReflect() protoreflect.Message {
	mi := &file_grafbase_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveField.ProtoReflect.Descriptor instead.
func (*DeriveField) Descriptor() ([]byte, []int) {
	return file_grafbase_options_proto_rawDescGZIP(), []int{0}
}

func (x *DeriveField) GetEntity() string {
	if x != nil && x.Entity != nil {
		return *x.Entity
	}
	return ""
}

func (x *DeriveField) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeriveField) GetIs() string {
	if x != nil && x.Is != nil {
		return *x.Is
	}
	return ""
}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields *string `protobuf:"bytes,1,opt,name=fields" json:"fields,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grafbase_options_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_grafbase_options_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_grafbase_options_proto_rawDescGZIP(), []int{1}
}

func (x *Key) GetFields() string {
	if x != nil && x.Fields != nil {
		return *x.Fields
	}
	return ""
}

type Lookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Lookup) Reset() {
	*x = Lookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grafbase_options_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lookup) ProtoMessage() {}

func (x *Lookup) ProtoReflect() protoreflect.Message {
	mi := &file_grafbase_options_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lookup.ProtoReflect.Descriptor instead.
func (*Lookup) Descriptor() ([]byte, []int) {
	return file_grafbase_options_proto_rawDescGZIP(), []int{2}
}

type JoinField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Service *string `protobuf:"bytes,2,opt,name=service" json:"service,omitempty"`
	Method  *string `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
	Require *string `protobuf:"bytes,4,opt,name=require" json:"require,omitempty"`
}

func (x *JoinField) Reset() {
	*x = JoinField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grafbase_options_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinField) ProtoMessage() {}

func (x *JoinField) ProtoReflect() protoreflect.Message {
	mi := &file_grafbase_options_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinField.ProtoReflect.Descriptor instead.
func (*JoinField) Descriptor() ([]byte, []int) {
	return file_grafbase_options_proto_rawDescGZIP(), []int{3}
}

func (x *JoinField) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *JoinField) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *JoinField) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *JoinField) GetRequire() string {
	if x != nil && x.Require != nil {
		return *x.Require
	}
	return ""
}

var file_grafbase_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         58301,
		Name:          "grafbase.graphql.object_directives",
		Tag:           "bytes,58301,opt,name=object_directives",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         58302,
		Name:          "grafbase.graphql.input_object_directives",
		Tag:           "bytes,58302,opt,name=input_object_directives",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]*DeriveField)(nil),
		Field:         58304,
		Name:          "grafbase.graphql.derive_field",
		Tag:           "bytes,58304,rep,name=derive_field",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]*Key)(nil),
		Field:         58305,
		Name:          "grafbase.graphql.key",
		Tag:           "bytes,58305,rep,name=key",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: ([]*JoinField)(nil),
		Field:         58306,
		Name:          "grafbase.graphql.join_field",
		Tag:           "bytes,58306,rep,name=join_field",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         58301,
		Name:          "grafbase.graphql.output_field_directives",
		Tag:           "bytes,58301,opt,name=output_field_directives",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         58302,
		Name:          "grafbase.graphql.input_field_directives",
		Tag:           "bytes,58302,opt,name=input_field_directives",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         58301,
		Name:          "grafbase.graphql.enum_directives",
		Tag:           "bytes,58301,opt,name=enum_directives",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         58301,
		Name:          "grafbase.graphql.enum_value_directives",
		Tag:           "bytes,58301,opt,name=enum_value_directives",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         58301,
		Name:          "grafbase.graphql.default_to_query_fields",
		Tag:           "varint,58301,opt,name=default_to_query_fields",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         58302,
		Name:          "grafbase.graphql.default_to_mutation_fields",
		Tag:           "varint,58302,opt,name=default_to_mutation_fields",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         58303,
		Name:          "grafbase.graphql.subgraph_name",
		Tag:           "bytes,58303,opt,name=subgraph_name",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         58304,
		Name:          "grafbase.graphql.schema_directives",
		Tag:           "bytes,58304,opt,name=schema_directives",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         58301,
		Name:          "grafbase.graphql.directives",
		Tag:           "bytes,58301,opt,name=directives",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         58302,
		Name:          "grafbase.graphql.is_query",
		Tag:           "varint,58302,opt,name=is_query",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         58303,
		Name:          "grafbase.graphql.is_mutation",
		Tag:           "varint,58303,opt,name=is_mutation",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         58304,
		Name:          "grafbase.graphql.argument_directives",
		Tag:           "bytes,58304,opt,name=argument_directives",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*Lookup)(nil),
		Field:         58305,
		Name:          "grafbase.graphql.lookup",
		Tag:           "bytes,58305,opt,name=lookup",
		Filename:      "grafbase/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         58306,
		Name:          "grafbase.graphql.argument_is",
		Tag:           "bytes,58306,opt,name=argument_is",
		Filename:      "grafbase/options.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional string object_directives = 58301;
	E_ObjectDirectives = &file_grafbase_options_proto_extTypes[0]
	// optional string input_object_directives = 58302;
	E_InputObjectDirectives = &file_grafbase_options_proto_extTypes[1]
	// repeated grafbase.graphql.DeriveField derive_field = 58304;
	E_DeriveField = &file_grafbase_options_proto_extTypes[2]
	// repeated grafbase.graphql.Key key = 58305;
	E_Key = &file_grafbase_options_proto_extTypes[3]
	// repeated grafbase.graphql.JoinField join_field = 58306;
	E_JoinField = &file_grafbase_options_proto_extTypes[4]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional string output_field_directives = 58301;
	E_OutputFieldDirectives = &file_grafbase_options_proto_extTypes[5]
	// optional string input_field_directives = 58302;
	E_InputFieldDirectives = &file_grafbase_options_proto_extTypes[6]
)

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional string enum_directives = 58301;
	E_EnumDirectives = &file_grafbase_options_proto_extTypes[7]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional string enum_value_directives = 58301;
	E_EnumValueDirectives = &file_grafbase_options_proto_extTypes[8]
)

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional bool default_to_query_fields = 58301;
	E_DefaultToQueryFields = &file_grafbase_options_proto_extTypes[9]
	// optional bool default_to_mutation_fields = 58302;
	E_DefaultToMutationFields = &file_grafbase_options_proto_extTypes[10]
	// optional string subgraph_name = 58303;
	E_SubgraphName = &file_grafbase_options_proto_extTypes[11]
	// optional string schema_directives = 58304;
	E_SchemaDirectives = &file_grafbase_options_proto_extTypes[12]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional string directives = 58301;
	E_Directives = &file_grafbase_options_proto_extTypes[13]
	// optional bool is_query = 58302;
	E_IsQuery = &file_grafbase_options_proto_extTypes[14]
	// optional bool is_mutation = 58303;
	E_IsMutation = &file_grafbase_options_proto_extTypes[15]
	// optional string argument_directives = 58304;
	E_ArgumentDirectives = &file_grafbase_options_proto_extTypes[16]
	// optional grafbase.graphql.Lookup lookup = 58305;
	E_Lookup = &file_grafbase_options_proto_extTypes[17]
	// optional string argument_is = 58306;
	E_ArgumentIs = &file_grafbase_options_proto_extTypes[18]
)

var File_grafbase_options_proto protoreflect.FileDescriptor

var file_grafbase_options_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x72, 0x61, 0x66, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x67, 0x72, 0x61, 0x66, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x0b,
	0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x73, 0x22, 0x1d, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x08, 0x0a, 0x06, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x22, 0x6b, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x3a, 0x4e, 0x0a,
	0x11, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xbd, 0xc7, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x3a, 0x59, 0x0a,
	0x17, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbe, 0xc7, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x3a, 0x63, 0x0a, 0x0c, 0x64, 0x65, 0x72, 0x69,
	0x76, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc0, 0xc7, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x71, 0x6c, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x0b, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x3a, 0x4a, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc1, 0xc7, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x67, 0x72, 0x61, 0x66, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c,
	0x2e, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x3a, 0x5d, 0x0a, 0x0a, 0x6a, 0x6f, 0x69,
	0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc2, 0xc7, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x09, 0x6a,
	0x6f, 0x69, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x3a, 0x57, 0x0a, 0x17, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xbd, 0xc7, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x3a, 0x55, 0x0a, 0x16, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbe, 0xc7, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x3a, 0x47, 0x0a, 0x0f, 0x65, 0x6e, 0x75, 0x6d,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbd, 0xc7, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x6e, 0x75, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x3a, 0x57, 0x0a, 0x15, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbd, 0xc7,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x3a, 0x58, 0x0a, 0x17, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbd, 0xc7, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x3a, 0x5e, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x74, 0x6f, 0x5f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xbe, 0xc7, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x3a, 0x46, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbf, 0xc7, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x75, 0x62, 0x67, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x4e, 0x0a, 0x11,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xc0, 0xc7, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x3a, 0x40, 0x0a, 0x0a,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbd, 0xc7, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x73, 0x3a, 0x3b,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbe, 0xc7, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x3a, 0x41, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbf, 0xc7, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x51,
	0x0a, 0x13, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc0, 0xc7, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x3a, 0x52, 0x0a, 0x06, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc1, 0xc7, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x66, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x06, 0x6c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x3a, 0x41, 0x0a, 0x0b, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc2, 0xc7, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x73,
}

var (
	file_grafbase_options_proto_rawDescOnce sync.Once
	file_grafbase_options_proto_rawDescData = file_grafbase_options_proto_rawDesc
)

func file_grafbase_options_proto_rawDescGZIP() []byte {
	file_grafbase_options_proto_rawDescOnce.Do(func() {
		file_grafbase_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_grafbase_options_proto_rawDescData)
	})
	return file_grafbase_options_proto_rawDescData
}

var file_grafbase_options_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_grafbase_options_proto_goTypes = []interface{}{
	(*DeriveField)(nil),                   // 0: grafbase.graphql.DeriveField
	(*Key)(nil),                           // 1: grafbase.graphql.Key
	(*Lookup)(nil),                        // 2: grafbase.graphql.Lookup
	(*JoinField)(nil),                     // 3: grafbase.graphql.JoinField
	(*descriptorpb.MessageOptions)(nil),   // 4: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),     // 5: google.protobuf.FieldOptions
	(*descriptorpb.EnumOptions)(nil),      // 6: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 7: google.protobuf.EnumValueOptions
	(*descriptorpb.ServiceOptions)(nil),   // 8: google.protobuf.ServiceOptions
	(*descriptorpb.MethodOptions)(nil),    // 9: google.protobuf.MethodOptions
}
var file_grafbase_options_proto_depIdxs = []int32{
	4,  // 0: grafbase.graphql.object_directives:extendee -> google.protobuf.MessageOptions
	4,  // 1: grafbase.graphql.input_object_directives:extendee -> google.protobuf.MessageOptions
	4,  // 2: grafbase.graphql.derive_field:extendee -> google.protobuf.MessageOptions
	4,  // 3: grafbase.graphql.key:extendee -> google.protobuf.MessageOptions
	4,  // 4: grafbase.graphql.join_field:extendee -> google.protobuf.MessageOptions
	5,  // 5: grafbase.graphql.output_field_directives:extendee -> google.protobuf.FieldOptions
	5,  // 6: grafbase.graphql.input_field_directives:extendee -> google.protobuf.FieldOptions
	6,  // 7: grafbase.graphql.enum_directives:extendee -> google.protobuf.EnumOptions
	7,  // 8: grafbase.graphql.enum_value_directives:extendee -> google.protobuf.EnumValueOptions
	8,  // 9: grafbase.graphql.default_to_query_fields:extendee -> google.protobuf.ServiceOptions
	8,  // 10: grafbase.graphql.default_to_mutation_fields:extendee -> google.protobuf.ServiceOptions
	8,  // 11: grafbase.graphql.subgraph_name:extendee -> google.protobuf.ServiceOptions
	8,  // 12: grafbase.graphql.schema_directives:extendee -> google.protobuf.ServiceOptions
	9,  // 13: grafbase.graphql.directives:extendee -> google.protobuf.MethodOptions
	9,  // 14: grafbase.graphql.is_query:extendee -> google.protobuf.MethodOptions
	9,  // 15: grafbase.graphql.is_mutation:extendee -> google.protobuf.MethodOptions
	9,  // 16: grafbase.graphql.argument_directives:extendee -> google.protobuf.MethodOptions
	9,  // 17: grafbase.graphql.lookup:extendee -> google.protobuf.MethodOptions
	9,  // 18: grafbase.graphql.argument_is:extendee -> google.protobuf.MethodOptions
	0,  // 19: grafbase.graphql.derive_field:type_name -> grafbase.graphql.DeriveField
	1,  // 20: grafbase.graphql.key:type_name -> grafbase.graphql.Key
	3,  // 21: grafbase.graphql.join_field:type_name -> grafbase.graphql.JoinField
	2,  // 22: grafbase.graphql.lookup:type_name -> grafbase.graphql.Lookup
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	19, // [19:23] is the sub-list for extension type_name
	0,  // [0:19] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_grafbase_options_proto_init() }
func file_grafbase_options_proto_init() {
	if File_grafbase_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grafbase_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeriveField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grafbase_options_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grafbase_options_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grafbase_options_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grafbase_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 19,
			NumServices:   0,
		},
		GoTypes:           file_grafbase_options_proto_goTypes,
		DependencyIndexes: file_grafbase_options_proto_depIdxs,
		MessageInfos:      file_grafbase_options_proto_msgTypes,
		ExtensionInfos:    file_grafbase_options_proto_extTypes,
	}.Build()
	File_grafbase_options_proto = out.File
	file_grafbase_options_proto_rawDesc = nil
	file_grafbase_options_proto_goTypes = nil
	file_grafbase_options_proto_depIdxs = nil
}
