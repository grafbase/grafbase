[package]
name = "federated-server"
edition.workspace = true
license = "MPL-2.0"
homepage.workspace = true
keywords.workspace = true
repository.workspace = true

[lints]
workspace = true

[features]
default = []
lambda = ["engine-axum/lambda", "dep:tower", "dep:lambda_http"]

[dependencies]
ascii = { workspace = true, features = ["serde"] }
async-trait.workspace = true
axum = { workspace = true, features = ["macros", "ws", "query", "json"] }
axum-server = { workspace = true, features = ["tls-rustls"] }
blake3.workspace = true
cfg-if.workspace = true
engine.workspace = true
engine-auth.workspace = true
engine-axum.workspace = true
engine-schema.workspace = true
event-queue.workspace = true
futures-lite.workspace = true
futures-util.workspace = true
gateway-config.workspace = true
grafbase-mcp = { path = "../mcp" }
grafbase-telemetry = { workspace = true }
grafbase-workspace-hack.workspace = true
graph-ref.workspace = true
graphql-composition.workspace = true
http.workspace = true
notify.workspace = true
reqwest = { workspace = true, features = ["http2", "json", "rustls-tls"] }
rolling-logger.workspace = true
runtime.workspace = true
runtime-local = { workspace = true, features = ["wasi", "redis"] }
semver.workspace = true
serde.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["signal", "time", "net"] }
tokio-stream = { workspace = true, features = ["sync"] }
tokio-util = { workspace = true, features = ["codec"] }
toml.workspace = true
tower-http = { workspace = true, features = [
    "cors",
    "timeout",
    "compression-zstd",
    "compression-deflate",
    "compression-gzip",
    "compression-br",
] }
tracing.workspace = true
ulid = { workspace = true, features = ["serde"] }
url = { workspace = true, features = ["serde"] }
wasi-component-loader.workspace = true

# Lambda dependencies
either.workspace = true
extension-catalog.workspace = true
fast-glob.workspace = true
indoc.workspace = true
lambda_http = { workspace = true, optional = true }
minicbor-serde = { workspace = true, features = ["alloc"] }
rand.workspace = true
serde_json.workspace = true
tower = { workspace = true, optional = true }

[dev-dependencies]
insta.workspace = true
tempfile.workspace = true
