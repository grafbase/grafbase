directive @core(feature: String!) repeatable on SCHEMA

directive @join__owner(graph: join__Graph!) on OBJECT

directive @join__type(
    graph: join__Graph!
    key: join__FieldSet
    resolvable: Boolean = true
) repeatable on OBJECT | INTERFACE

directive @join__field(
    graph: join__Graph
    requires: join__FieldSet
    provides: join__FieldSet
) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

scalar join__FieldSet

enum join__Graph {
    BAR @join__graph(name: "bar", url: "http://example.com/bar")
    BAZ @join__graph(name: "baz", url: "http://example.com/baz")
    FOO @join__graph(name: "foo", url: "http://example.com/foo")
}

scalar Yan

scalar Tan

scalar Texture

scalar Tethera

type Sheep
    @join__type(graph: BAZ)
    @join__type(graph: FOO)
{
    sheepIdx: Tethera @join__field(graph: FOO)
    texture: Texture! @join__field(graph: BAZ)
}

type Query
{
    sheep: Sheep @join__field(graph: FOO)
}
