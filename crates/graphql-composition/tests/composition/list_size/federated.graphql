directive @core(feature: String!) repeatable on SCHEMA

directive @join__owner(graph: join__Graph!) on OBJECT

directive @join__type(
    graph: join__Graph!
    key: join__FieldSet
    resolvable: Boolean = true
) repeatable on OBJECT | INTERFACE

directive @join__field(
    graph: join__Graph
    requires: join__FieldSet
    provides: join__FieldSet
) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

scalar join__FieldSet

directive @listSize(
  assumedSize: Int,
  slicingArguments: [String!],
  sizedFields: [String!],
  requireOneSlicingArgument: Boolean = true
) on FIELD_DEFINITION

enum join__Graph {
    A @join__graph(name: "a", url: "http://example.com/a")
}

type BarCollection
    @join__type(graph: A)
{
    items: [Int]
}

type Query
{
    bar(slice: Int!): BarCollection  @listSize(slicingArguments: ["slice"], sizedFields: ["items"], requireOneSlicingArgument: false) @join__field(graph: A)
    baz(slice: Int!): [String]  @listSize(slicingArguments: ["slice"]) @join__field(graph: A)
    foo: [String!]  @listSize(assumedSize: 10) @join__field(graph: A)
}
