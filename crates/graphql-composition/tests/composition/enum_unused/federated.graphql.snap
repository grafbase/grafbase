---
source: crates/graphql-composition/tests/composition_tests.rs
expression: Federated SDL
input_file: crates/graphql-composition/tests/composition/enum_unused/test.md
---
directive @join__unionMember(graph: join__Graph!, member: String!) on UNION

directive @join__implements(graph: join__Graph!, interface: String!) on OBJECT | INTERFACE

directive @join__graph(name: String!, url: String) on ENUM_VALUE

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet) on FIELD_DEFINITION

directive @join__type(graph: join__Graph, key: join__FieldSet, resolvable: Boolean = true) on OBJECT | INTERFACE

directive @join__owner(graph: join__Graph!) on OBJECT

scalar join__FieldSet

type User
    @join__type(graph: THESCHEMA)
{
    id: ID!
    name: String!
}

type Query
{
    user: User @join__field(graph: THESCHEMA)
}

enum UserType
    @join__type(graph: THESCHEMA)
{
    ADMIN
    REGULAR
}

enum join__Graph
{
    THESCHEMA @join__graph(name: "theschema", url: "http://example.com/theschema")
}
