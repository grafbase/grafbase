---
source: crates/graphql-composition/tests/composition_tests.rs
expression: "Tests that extension names are case insensitive and unique. But if the same extension is ingested twice, as long as the url is compatible, we're fine."
input_file: crates/graphql-composition/tests/composition/extensions_same_extension_ingested_twice/test.md
---
directive @join__unionMember(graph: join__Graph!, member: String!) on UNION

directive @join__implements(graph: join__Graph!, interface: String!) on OBJECT | INTERFACE

directive @join__graph(name: String!, url: String) on ENUM_VALUE

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, overrideLabel: String) on FIELD_DEFINITION

directive @join__type(graph: join__Graph, key: join__FieldSet, extension: Boolean = false, resolvable: Boolean = true, isInterfaceObject: Boolean = false) on OBJECT | INTERFACE

directive @join__owner(graph: join__Graph!) on OBJECT

scalar join__FieldSet

type Query
{
  hiMark: String @join__field(graph: IRRELEVANT)
}

enum join__Graph
{
  IRRELEVANT @join__graph(name: "irrelevant", url: "http://example.com/irrelevant")
}
