directive @core(feature: String!) repeatable on SCHEMA

directive @join__owner(graph: join__Graph!) on OBJECT

directive @join__type(
    graph: join__Graph!
    key: join__FieldSet
    resolvable: Boolean = true
) repeatable on OBJECT | INTERFACE

directive @join__field(
    graph: join__Graph
    requires: join__FieldSet
    provides: join__FieldSet
) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

scalar join__FieldSet

directive @cost(weight: Int!) on
    ARGUMENT_DEFINITION
  | ENUM
  | FIELD_DEFINITION
  | INPUT_FIELD_DEFINITION
  | OBJECT
  | SCALAR

enum join__Graph {
    A @join__graph(name: "a", url: "http://example.com/a")
}

scalar Foo
    @cost(weight: 6)

type Query
    @cost(weight: 1)
{
    foo(name: String @cost(weight: 100)): String @join__field(graph: A)
    id: ID! @cost(weight: 2) @join__field(graph: A)
}

interface Account
    @cost(weight: 3)
    @join__type(graph: A)
{
    foo(name: String @cost(weight: 200)): String
    id: ID! @cost(weight: 4)
}

enum Blah
    @cost(weight: 5)
    @join__type(graph: A)
{
    BLAH
}

input Bar
    @join__type(graph: A)
{
    x: String @cost(weight: 7)
}
