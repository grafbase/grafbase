---
source: crates/graphql-composition/tests/composition_tests.rs
expression: Federated SDL
input_file: crates/graphql-composition/tests/composition/override_basic/test.md
---
directive @join__unionMember(graph: join__Graph!, member: String!) on UNION

directive @join__implements(graph: join__Graph!, interface: String!) on OBJECT | INTERFACE

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet) on FIELD_DEFINITION

directive @join__type(graph: join__Graph, key: join__FieldSet, resolvable: Boolean = true) on OBJECT | INTERFACE

directive @join__owner(graph: join__Graph!) on OBJECT

scalar join__FieldSet

type Mammoth
    @join__type(graph: MANGROVE)
    @join__type(graph: STEPPE)
{
    tuskLength: Int
    weightGrams: Int @join__field(graph: MANGROVE, override: "steppe")
}

type Query
{
    getMammoth: Mammoth @join__field(graph: MANGROVE, override: "steppe")
}

enum join__Graph
{
    MANGROVE @join__graph(name: "mangrove", url: "http://example.com/mangrove")
    STEPPE @join__graph(name: "steppe", url: "http://example.com/steppe")
}
