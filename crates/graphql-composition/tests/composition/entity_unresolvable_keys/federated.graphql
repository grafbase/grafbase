directive @core(feature: String!) repeatable on SCHEMA

directive @join__owner(graph: join__Graph!) on OBJECT

directive @join__type(
    graph: join__Graph!
    key: join__FieldSet
    resolvable: Boolean = true
) repeatable on OBJECT | INTERFACE

directive @join__field(
    graph: join__Graph
    requires: join__FieldSet
    provides: join__FieldSet
) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

scalar join__FieldSet

enum join__Graph {
    ACCOUNTS @join__graph(name: "accounts", url: "http://example.com/accounts")
    PRODUCTS @join__graph(name: "products", url: "http://example.com/products")
}

type User
    @join__type(graph: ACCOUNTS)
{
    id: ID!
    posts: [Post!]!
}

type Post
    @join__type(graph: ACCOUNTS, key: "id", resolvable: false)
    @join__type(graph: PRODUCTS, key: "id")
{
    id: ID!
    name: String @join__field(graph: PRODUCTS)
}

type Query
{
    getUser(id: ID!): User @join__field(graph: ACCOUNTS)
}
