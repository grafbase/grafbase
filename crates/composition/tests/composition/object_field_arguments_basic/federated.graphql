type Query {
    # Resolvable in `history`
    # Resolvable in `inventory`
    # Resolvable in `performance`
    getRollerCoaster(id: ID!): RollerCoaster
}

type RollerCoaster {
    # Resolvable in `history`
    # Resolvable in `inventory`
    # Resolvable in `performance`
    id: ID!
    # Resolvable in `history`
    # Resolvable in `inventory`
    # Resolvable in `performance`
    name: String!
    # Resolvable in `history`
    # Resolvable in `inventory`
    # Resolvable in `performance`
    height: Float!
    # Resolvable in `history`
    # Resolvable in `inventory`
    # Resolvable in `performance`
    speed: Float!
    # Resolvable in `history`
    # Resolvable in `inventory`
    manufacturer: String!
    # Resolvable in `history`
    historicalData: [HistoricalData]
    # Resolvable in `performance`
    numberOfInversions: Int!
}

type HistoricalData {
    # Resolvable in `history`
    year: Int!
    # Resolvable in `history`
    visitors: Int!
    # Resolvable in `history`
    incidents: Int!
}
