---
source: crates/protoc-gen-grafbase-subgraph/tests/codegen_tests.rs
expression: "fs::read_to_string(entry.path()).unwrap()"
input_file: crates/protoc-gen-grafbase-subgraph/tests/codegen/echo/echo.proto
---
extend schema
  @link(url: "https://grafbase.com/extensions/grpc/0.1.0", import: ["@protoServices", "@protoEnums", "@protoMessages", "@grpcMethod"])
  @protoServices(
    definitions: [
      {
        name: "Echo"
        methods: [
          {
            name: "UnaryEcho"
            inputType: ".grpc.examples.echo.EchoRequest"
            outputType: ".grpc.examples.echo.EchoResponse"
          }
          {
            name: "ServerStreamingEcho"
            inputType: ".grpc.examples.echo.EchoRequest"
            outputType: ".grpc.examples.echo.EchoResponse"
            serverStreaming: true
          }
          {
            name: "ClientStreamingEcho"
            inputType: ".grpc.examples.echo.EchoRequest"
            outputType: ".grpc.examples.echo.EchoResponse"
          }
          {
            name: "BidirectionalStreamingEcho"
            inputType: ".grpc.examples.echo.EchoRequest"
            outputType: ".grpc.examples.echo.EchoResponse"
            serverStreaming: true
          }
        ]
      }
    ]
  )
  @protoMessages(
    definitions: [
      {
        name: ".grpc.examples.echo.EchoRequest"
        fields: [
          {
            name: "message"
            number: 1
            repeated: false
            type: "string"
          }
        ]
      }
      {
        name: ".grpc.examples.echo.EchoResponse"
        fields: [
          {
            name: "message"
            number: 1
            repeated: false
            type: "string"
          }
        ]
      }
    ]
  )

type Mutation {
"""
UnaryEcho is unary echo.
"""
  Echo_UnaryEcho(input: grpc_examples_echo_EchoRequestInput): grpc_examples_echo_EchoResponse @grpcMethod(service: "Echo", method: "UnaryEcho")
"""
ClientStreamingEcho is client side streaming.
"""
  Echo_ClientStreamingEcho(input: grpc_examples_echo_EchoRequestInput): grpc_examples_echo_EchoResponse @grpcMethod(service: "Echo", method: "ClientStreamingEcho")
}

type Subscription {
"""
ServerStreamingEcho is server side streaming.
"""
  Echo_ServerStreamingEcho(input: grpc_examples_echo_EchoRequestInput): grpc_examples_echo_EchoResponse @grpcMethod(service: "Echo", method: "ServerStreamingEcho")
"""
BidirectionalStreamingEcho is bidi streaming.
"""
  Echo_BidirectionalStreamingEcho(input: grpc_examples_echo_EchoRequestInput): grpc_examples_echo_EchoResponse @grpcMethod(service: "Echo", method: "BidirectionalStreamingEcho")
}

"64 bit signed integer" scalar I64
"64 bit unsigned integer" scalar U64

"""
EchoRequest is the request for echo.
"""
input grpc_examples_echo_EchoRequestInput {
  message: String
}

"""
EchoResponse is the response for echo.
"""
type grpc_examples_echo_EchoResponse {
  message: String
}
