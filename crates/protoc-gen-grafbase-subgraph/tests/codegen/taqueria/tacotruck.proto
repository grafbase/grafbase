syntax = "proto3";

package taqueria;

service TaqueriaService {
  // Get menu items with optional filters
  rpc GetMenu(MenuRequest) returns (MenuResponse) {}

  // Place a new order
  rpc PlaceOrder(Order) returns (OrderResponse) {}

  // Check order status
  rpc CheckOrderStatus(OrderStatusRequest) returns (OrderStatusResponse) {}

  // Get daily sales report
  rpc GetDailySalesReport(DailySalesRequest) returns (DailySalesResponse) {}
}

// Enum for spice level
enum SpiceLevel {
  MILD = 0;
  MEDIUM = 1;
  HOT = 2;
  EXTRA_HOT = 3;
}

// Enum for meat type
enum MeatType {
  NONE = 0;
  CARNE_ASADA = 1;
  CHICKEN = 2;
  CARNITAS = 3;
  AL_PASTOR = 4;
  BARBACOA = 5;
  FISH = 6;
  SHRIMP = 7;
}

// Menu item message
message MenuItem {
  string id = 1;
  string name = 2;
  // The price of the item in â‚¬.
  double price = 3;
  string description = 4;
  MeatType meat = 5;
  SpiceLevel spice_level = 6;
  repeated string toppings = 7;
  bool vegetarian = 8;
  bool vegan = 9;
}

// Menu request message
message MenuRequest {
  bool vegetarian_only = 1;
  MeatType meat_filter = 2;
  double max_price = 3;
}

// Menu response message
message MenuResponse {
  repeated MenuItem items = 1;
}

// Order item message
message OrderItem {
  string menu_item_id = 1;
  int32 quantity = 2;
  repeated string extra_toppings = 3;
  string special_instructions = 4;
}

// Order message
message Order {
  string customer_id = 1;
  repeated OrderItem items = 2;
  bool is_takeout = 3;
  // Map of item_id to customization options
  map<string, string> customizations = 4;
  PaymentInfo payment_info = 5;
}

// Payment information
message PaymentInfo {
  enum PaymentMethod {
    CASH = 0;
    CREDIT_CARD = 1;
    DEBIT_CARD = 2;
    MOBILE_PAYMENT = 3;
  }

  PaymentMethod method = 1;
  string transaction_id = 2;
  double tip_amount = 3;
}

// Order response
message OrderResponse {
  string order_id = 1;
  string estimated_ready_time = 2;
  double total_amount = 3;
}

// Order status request
message OrderStatusRequest {
  string order_id = 1;
}

// Order status response
enum OrderStatus {
  RECEIVED = 0;
  PREPARING = 1;
  READY = 2;
  DELIVERED = 3;
  CANCELLED = 4;
}

message OrderStatusResponse {
  string order_id = 1;
  OrderStatus status = 2;
  string status_updated_at = 3;
  string estimated_completion_time = 4;
}

// Daily sales request
message DailySalesRequest {
  string date = 1;
}

// Daily sales response
message DailySalesResponse {
  string date = 1;
  int32 total_orders = 2;
  double total_revenue = 3;
  // Map of menu_item_id to quantity sold
  map<string, int32> items_sold = 4;
  map<int32, int32> meat_type_counts = 5;
}
