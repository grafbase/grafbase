name: CLI rust job init
description: Base steps for CLI jobs

inputs:
  platform:
    type: choice
    description: Target platform to use when installing nextest
    required: true
    options:
      - windows
      - macos
      - linux

runs:
  using: 'composite'
  steps:
    - name: Extract the Rust version to use from the `rust-toolchain.toml` file
      shell: bash
      run: |
        rust_version=$(grep "channel" rust-toolchain.toml | cut -d "=" -f 2 | cut -d " " -f 2)
        echo "RUST_VERSION=$rust_version" >> $GITHUB_ENV

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ env.RUST_VERSION }}
        components: clippy, rustfmt

    - name: rustup
      shell: bash
      run: |
        rustup target list

    - name: Install cargo-nextest & libs linux
      if: ${{ startsWith(inputs.platform, 'linux') }}
      shell: bash
      run: |
        curl -LsSf https://get.nexte.st/latest/${{ inputs.platform }} | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
        sudo apt-get install musl-tools

    - name: Install cargo-nextest windows
      if: ${{ inputs.platform == 'windows' }}
      shell: pwsh
      run: |
        $tmp = New-TemporaryFile | Rename-Item -NewName { $_ -replace 'tmp$', 'zip' } -PassThru
        Invoke-WebRequest -OutFile $tmp https://get.nexte.st/latest/windows
        $outputDir = if ($Env:CARGO_HOME) { Join-Path $Env:CARGO_HOME "bin" } else { "~/.cargo/bin" }
        $tmp | Expand-Archive -DestinationPath $outputDir -Force
        $tmp | Remove-Item

    - name: Install cargo-nextest macos
      if: ${{ inputs.platform == 'macos' }}
      shell: bash
      run: |
        curl -LsSf https://get.nexte.st/latest/mac | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
