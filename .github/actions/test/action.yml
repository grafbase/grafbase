name: Sanitize and test
description: Run cargo fmt, clippy, test

inputs:
  dockerhub-username:
    required: true
    description: Username to log into docker hub
  dockerhub-token:
    required: true
    description: Token to log into docker hub
  with-integration-tests:
    required: false
    default: 'true'
    description: If enabled, runs integration tests and needs docker

runs:
  using: 'composite'
  steps:
    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.7

    # https://github.com/actions/setup-node/issues/899
    - name: Enable Corepack before setting up Node
      shell: bash
      run: corepack enable

    - name: Setup Node.js
      if: ${{ inputs.with-integration-tests == 'true' }}
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install pnpm
      uses: pnpm/action-setup@v3
      id: pnpm-install
      with:
        version: 8
        run_install: false

    - name: Login to Docker Hub
      if: inputs.with-integration-tests == 'true' && inputs.dockerhub-username != ''
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.dockerhub-username }}
        password: ${{ inputs.dockerhub-token }}

    - name: Install cargo binstall
      if: ${{ inputs.with-integration-tests == 'true' }}
      uses: cargo-bins/cargo-binstall@v1.10.21

    - name: Build the WASI components for tests
      if: ${{ inputs.with-integration-tests == 'true' }}
      working-directory: crates/wasi-component-loader/examples
      shell: bash
      env:
        RUSTC_WRAPPER: sccache
      run: |
        cargo build --target wasm32-wasip2

    - name: Build all non-gateway tests
      id: all_tests_build
      if: ${{ inputs.with-integration-tests == 'true' }}
      shell: bash
      env:
        RUSTC_WRAPPER: sccache
      run: |
        RUST_BACKTRACE=1 cargo nextest run --workspace --no-run --profile ci \
          --exclude grafbase-gateway \
          --exclude federation-audit-tests
        docker compose -f crates/integration-tests/compose.yaml stop -t 3

    - name: Run all non-gateway tests
      id: all_tests
      if: ${{ inputs.with-integration-tests == 'true' }}
      shell: bash
      run: |
        docker compose -f crates/integration-tests/compose.yaml up -d
        RUST_BACKTRACE=1 cargo nextest run --workspace --profile ci \
          --exclude grafbase-gateway \
          --exclude federation-audit-tests
        docker compose -f crates/integration-tests/compose.yaml stop -t 3

    - name: Build gateway tests
      id: gateway_tests_build
      if: ${{ inputs.with-integration-tests == 'true' }}
      shell: bash
      env:
        RUSTC_WRAPPER: sccache
      run: |
        docker compose -f gateway/docker-compose.yml up -d
        RUST_BACKTRACE=1 cargo nextest run -p grafbase-gateway --profile ci --no-run

    - name: Run gateway tests
      id: gateway_tests
      if: ${{ inputs.with-integration-tests == 'true' }}
      shell: bash
      run: |
        docker compose -f gateway/docker-compose.yml up -d
        RUST_BACKTRACE=1 cargo nextest run -p grafbase-gateway --profile ci

    - name: Build tests without integration
      id: tests_no_integration
      if: ${{ inputs.with-integration-tests == 'false' }}
      shell: bash
      env:
        RUSTC_WRAPPER: sccache
      run: |
        RUST_BACKTRACE=1 cargo nextest run --workspace --no-run \
          --exclude integration-tests \
          --exclude grafbase-gateway \
          --exclude wasi-component-loader \
          --exclude federation-audit-tests \
          --profile ci

    - name: Run tests without integration
      id: tests_no_integration
      if: ${{ inputs.with-integration-tests == 'false' }}
      shell: bash
      run: |
        RUST_BACKTRACE=1 cargo nextest run --workspace \
          --exclude integration-tests \
          --exclude grafbase-gateway \
          --exclude wasi-component-loader \
          --exclude federation-audit-tests \
          --profile ci
