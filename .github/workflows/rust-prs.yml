name: rust-prs

on:
  workflow_dispatch:
  pull_request:
  workflow_call:
    inputs:
      base_ref:
        type: string
        required: true

env:
  CARGO_PROFILE_DEV_DEBUG: 0
  CARGO_PROFILE_TEST_DEBUG: 0
  CARGO_TERM_COLOR: 'always'
  RUST_BACKTRACE: 1
  DEPOT_PROJECT: lc6t0h7bhh

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-rust-pr
  cancel-in-progress: true

jobs:
  what-changed:
    runs-on: depot-ubuntu-24.04-small
    outputs:
      # These 2 are JSON lists
      changed-packages: ${{ steps.rust.outputs.changed-packages }}
      changed-binaries: ${{ steps.rust.outputs.changed-binaries }}

      # These 4 are strings
      cargo-build-specs: ${{ steps.rust.outputs.cargo-build-specs }}
      cargo-test-specs: ${{ steps.rust.outputs.cargo-test-specs }}
      cargo-docker-test-specs: ${{ steps.rust.outputs.cargo-docker-test-specs }}
      cargo-bin-specs: ${{ steps.rust.outputs.cargo-bin-specs }}

      gateway-docker: ${{ steps.paths-changed.outputs.gateway-docker }}
      examples: ${{ steps.paths-changed.outputs.examples }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          # TODO: Figure out how to not make this zero
          # Seems like if it's not zero you dont get branches
          fetch-depth: 0

      - uses: Swatinem/rust-cache@a8b36e3f740d2ae4fa6e44a424a7b296af51cbef # v2.8.0
        with:
          prefix-key: cargo-v1

      - name: Run what-rust-changed
        id: rust
        uses: grafbase/what-rust-changed@4bd103b30c18e07a48c08f7c891fb22e27ddcd8e # v0.2.1
        with:
          config: .github/what-rust-changed.toml
          base: ${{ inputs.base_ref || github.event.pull_request.base.ref || 'main' }}

      - name: Check paths changed
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: paths-changed
        with:
          filters: |
            gateway-docker:
              - gateway/Dockerfile
            examples:
              - examples/**

  check-licenses:
    needs: [what-changed]
    if: needs.what-changed.outputs.changed-packages != '[]'
    runs-on: depot-ubuntu-24.04-small
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: ./.github/actions/install-rust
        with:
          target: x86_64-unknown-linux-musl

      - name: Install cargo-binstall and cargo-about
        shell: bash
        run: |
          curl -LsSf https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
          cargo binstall --no-symlinks --no-confirm cargo-about

      - name: Check licenses
        shell: bash
        run: |
          cd gateway
          cargo about generate -c about.toml -o "licenses.html" about.hbs

  check-format:
    needs: [what-changed]
    if: needs.what-changed.outputs.changed-packages != '[]'
    runs-on: depot-ubuntu-24.04-small
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-rust
        with:
          target: x86_64-unknown-linux-musl
          components: rustfmt

      - name: cargo fmt
        shell: bash
        run: |
          cargo fmt --check

      - uses: uncenter/setup-taplo@4f203fdb4f3b1e289c8382cf90d8397d2338df2e # v1.0.8
        with:
          version: '0.9.3'

      - name: taplo fmt check
        shell: bash
        run: |
          taplo fmt --check
          taplo check

  grafbase-sdk-doc:
    needs: [what-changed]
    if: contains(fromJson(needs.what-changed.outputs.changed-packages), 'grafbase-sdk')
    runs-on: depot-ubuntu-24.04-small
    steps:
      - uses: actions/checkout@v4
      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - uses: ./.github/actions/install-rust
        with:
          target: x86_64-unknown-linux-musl
          components: rust-docs
      - uses: Swatinem/rust-cache@a8b36e3f740d2ae4fa6e44a424a7b296af51cbef # v2.8.0
        with:
          prefix-key: cargo-v1

      - name: cargo doc
        shell: bash
        env:
          RUSTC_WRAPPER: 'sccache'
        run: |
          cargo doc -p grafbase-sdk --no-deps

      - name: cargo doc tests
        shell: bash
        env:
          RUSTC_WRAPPER: 'sccache'
        run: |
          cargo test --doc -p grafbase-sdk

  wasm-extensions:
    needs: [what-changed]
    runs-on: depot-ubuntu-24.04-8
    if: |
      contains(fromJson(needs.what-changed.outputs.changed-packages), 'grafbase-gateway')
      || contains(fromJson(needs.what-changed.outputs.changed-packages), 'integration-tests')
      || contains(fromJson(needs.what-changed.outputs.changed-packages), 'wasi-component-loader')
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/fetch-assets
      - uses: cargo-bins/cargo-binstall@63aaa5c1932cebabc34eceda9d92a70215dcead6 # v1.12.3
      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - uses: Swatinem/rust-cache@a8b36e3f740d2ae4fa6e44a424a7b296af51cbef # v2.8.0
        with:
          cache-workspace-crates: true
          prefix-key: cargo-v1
          workspaces: |
            . -> target
            crates/integration-tests/data/extensions -> target
            crates/wasi-component-loader/examples -> target

      - name: Build the grafbase cli
        shell: bash
        env:
          RUSTC_WRAPPER: sccache
        run: cargo build -p grafbase

      - name: Build the integration-tests extensions
        shell: bash
        working-directory: crates/integration-tests/data/extensions
        env:
          RUSTC_WRAPPER: sccache
        run: |
          ./build.sh

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: integration-tests-extensions
          path: crates/integration-tests/data/extensions/crates/*/build
          retention-days: 5

      - name: Build the WASI components for tests
        shell: bash
        working-directory: crates/wasi-component-loader/examples
        env:
          RUSTC_WRAPPER: sccache
        run: cargo build --target wasm32-wasip2

      - uses: actions/upload-artifact@v4
        with:
          name: example-component
          path: crates/wasi-component-loader/examples/target/wasm32-wasip2/debug/*.wasm
          retention-days: 5

  tests:
    needs: [what-changed, wasm-extensions]
    # We need the cancelled & result checks of this if to make sure that we
    # run even if some of our needs were skipped.
    # In particular we need `cancelled()` because `always()` (the other way of doing this)
    # makes this job uncancellable - which is not great.
    if: |
      needs.what-changed.outputs.changed-packages != '[]'
      && !(cancelled())
      && !(contains(needs.*.result, 'failure'))
    strategy:
      fail-fast: false
      matrix:
        platform:
          [
            { 'target': 'x86_64-unknown-linux-musl', 'runner': 'depot-ubuntu-24.04-8' },
            { 'target': 'aarch64-unknown-linux-musl', 'runner': 'depot-ubuntu-24.04-arm-8' },
            { 'target': 'aarch64-apple-darwin', 'runner': 'depot-macos-latest' },
            { 'target': 'x86_64-pc-windows-msvc', 'runner': 'depot-windows-2022-8' },
          ]
    runs-on: ${{ matrix.platform.runner }}
    env:
      RUSTFLAGS: '-D warnings --cfg tracing_unstable'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/fetch-assets
      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9

      - uses: Swatinem/rust-cache@a8b36e3f740d2ae4fa6e44a424a7b296af51cbef # v2.8.0
        with:
          cache-workspace-crates: true
          prefix-key: cargo-v1
          cache-directories: |
            .grafbase/wasm-cache

      - uses: ./.github/actions/install-rust
        with:
          target: ${{ matrix.platform.target }}
          components: clippy

      - name: Install musl
        uses: awalsh128/cache-apt-pkgs-action@latest
        if: ${{ contains(matrix.platform.target, 'linux') }}
        with:
          packages: musl musl-tools
          version: 1.0

      - name: Update musl-tools post installation
        if: ${{ contains(matrix.platform.target, 'linux') }}
        shell: bash
        run: |
          # This seems like a horrible hack that might come back to bite, but lets see!
          sudo ln -s /bin/g++ /bin/musl-g++
          sudo ln -s /bin/g++ /bin/aarch64-linux-musl-g++

      - name: Install cargo-nextest
        uses: taiki-e/install-action@d12e869b89167df346dd0ff65da342d1fb1202fb # v2.53.2
        with:
          tool: nextest

      - name: Retrieve wasi-component-loader examples
        if: needs.wasm-extensions.result != 'skipped'
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: example-component
          path: crates/wasi-component-loader/examples/target/wasm32-wasip2/debug

      - name: Retrieve integration-tests extensions
        if: needs.wasm-extensions.result != 'skipped'
        uses: actions/download-artifact@v4
        with:
          name: integration-tests-extensions
          path: crates/integration-tests/data/extensions/crates

      - name: Verify extension structure
        if: needs.wasm-extensions.result != 'skipped'
        shell: bash
        run: |
          find crates/integration-tests/data/extensions -name "*.wasm" -type f

      # TODO: Add timing reports in here somehow...

      - if: runner.os == 'Windows'
        uses: ilammy/setup-nasm@72793074d3c8cdda771dba85f6deafe00623038b # v1

      - name: Build debug binaries
        if: needs.what-changed.outputs.cargo-bin-specs
        shell: bash
        env:
          RUSTC_WRAPPER: 'sccache'
        run: |
          cargo build --target ${{ matrix.platform.target }} ${{ needs.what-changed.outputs.cargo-bin-specs }}

      - name: Clippy
        if: needs.what-changed.outputs.cargo-build-specs
        shell: bash
        run: |
          cargo clippy \
            --locked \
            --target ${{ matrix.platform.target }} \
            ${{ needs.what-changed.outputs.cargo-build-specs }}

      - name: Docker Login
        env:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
        if: env.dockerhub_username != '' && runner.os == 'Linux'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: depot/setup-action@b0b1ea4f69e92ebf5dea3f8713a1b0c37b2126a5 # v1

      - name: Build integration-tests docker compose
        # Will fail if there is nothing to build.
        continue-on-error: true
        if: |
          contains(fromJson(needs.what-changed.outputs.changed-packages), 'grafbase-gateway')
          && matrix.platform.target == 'x86_64-unknown-linux-musl'
        uses: depot/bake-action@6f9796efa5235be338972e30e7b93977a7f18855 # v1
        with:
          project: ${{ env.DEPOT_PROJECT }}
          token: ${{ secrets.DEPOT_TOKEN }}
          workdir: crates/integration-tests
          load: true
          pull: true

      - name: Build gateway docker compose
        # Will fail if there is nothing to build.
        continue-on-error: true
        if: |
          contains(fromJson(needs.what-changed.outputs.changed-packages), 'grafbase-gateway')
          && matrix.platform.target == 'x86_64-unknown-linux-musl'
        uses: depot/bake-action@6f9796efa5235be338972e30e7b93977a7f18855 # v1
        with:
          project: ${{ env.DEPOT_PROJECT }}
          token: ${{ secrets.DEPOT_TOKEN }}
          workdir: gateway
          load: true
          pull: true

      - name: Start integration-test docker compose
        if: |
          contains(fromJson(needs.what-changed.outputs.changed-packages), 'integration-tests')
          && matrix.platform.target == 'x86_64-unknown-linux-musl'
        shell: bash
        working-directory: crates/integration-tests
        run: |
          docker compose up -d

      - name: Start gateway docker compose
        if: |
          contains(fromJson(needs.what-changed.outputs.changed-packages), 'grafbase-gateway')
          && matrix.platform.target == 'x86_64-unknown-linux-musl'
        shell: bash
        working-directory: gateway
        run: |
          docker compose up -d

      # It's kinda useful to get build vs run timings on tests, so splitting out the build from the run
      # here
      - name: Build tests (non docker platforms)
        if: |
          needs.what-changed.outputs.cargo-test-specs
          && matrix.platform.target != 'x86_64-unknown-linux-musl'
        shell: bash
        env:
          RUSTC_WRAPPER: 'sccache'
        run: |
          cargo nextest run --target ${{ matrix.platform.target }} --no-run --profile ci ${{ needs.what-changed.outputs.cargo-test-specs }}

      - name: Run tests (non docker platforms)
        id: tests
        if: |
          needs.what-changed.outputs.cargo-test-specs
          && matrix.platform.target != 'x86_64-unknown-linux-musl'
        shell: bash
        env:
          RUSTC_WRAPPER: 'sccache'
        run: |
          cargo nextest run --target ${{ matrix.platform.target }} --no-tests=warn --profile ci ${{ needs.what-changed.outputs.cargo-test-specs }}

      - name: Build tests (docker platforms)
        if: |
          needs.what-changed.outputs.cargo-docker-test-specs
          && matrix.platform.target == 'x86_64-unknown-linux-musl'
        shell: bash
        env:
          RUSTC_WRAPPER: 'sccache'
        run: |
          cargo nextest run --target ${{ matrix.platform.target }} --no-run --profile ci ${{ needs.what-changed.outputs.cargo-docker-test-specs }}

      - name: Run tests (docker platforms)
        id: tests_docker
        if: |
          needs.what-changed.outputs.cargo-docker-test-specs
          && matrix.platform.target == 'x86_64-unknown-linux-musl'
        shell: bash
        env:
          RUSTC_WRAPPER: 'sccache'
        run: |
          cargo nextest run --target ${{ matrix.platform.target }} --no-tests=warn --profile ci ${{ needs.what-changed.outputs.cargo-docker-test-specs }}

  docker-gateway:
    needs: [what-changed]
    if: |
      needs.what-changed.outputs.gateway-docker == 'true'
      || needs.what-changed.outputs.examples == 'true'
      || contains(fromJson(needs.what-changed.outputs.changed-packages), 'grafbase-gateway')
    env:
      COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
      dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
    runs-on: depot-ubuntu-24.04-8
    permissions:
      packages: write
    steps:
      - if: env.dockerhub_username != ''
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        if: env.dockerhub_username != ''
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: env.dockerhub_username != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: env.dockerhub_username != ''
        uses: depot/build-push-action@636daae76684e38c301daa0c5eca1c095b24e780 # v1
        with:
          project: ${{ env.DEPOT_PROJECT }}
          token: ${{ secrets.DEPOT_TOKEN }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/grafbase/gateway:${{ env.COMMIT_SHA }}
          file: ./gateway/Dockerfile

  examples:
    needs: [docker-gateway]
    env:
      COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
      dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
    strategy:
      fail-fast: false
      matrix:
        working_directory:
          - examples/authorization
          - examples/grpc-extension
          - examples/composite-rest
          - examples/grpc-composite-schemas
          - examples/dynamic-schema-contracts
    runs-on: depot-ubuntu-24.04-8
    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: env.dockerhub_username != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download Hurl
        uses: gacts/install-hurl@a6765f7f715286f58a69d3be6061243578781a79 # v1

      - name: Use current image
        working-directory: ${{ matrix.working_directory }}
        run: |
          sed -i "s/\(FROM ghcr.io\/grafbase\/gateway:\)latest/\1$COMMIT_SHA/" Dockerfile.gateway

      - uses: depot/setup-action@b0b1ea4f69e92ebf5dea3f8713a1b0c37b2126a5 # v1

      - name: Build docker compose
        # Will fail if there is nothing to build.
        continue-on-error: true
        uses: depot/bake-action@6f9796efa5235be338972e30e7b93977a7f18855 # v1
        with:
          project: ${{ env.DEPOT_PROJECT }}
          token: ${{ secrets.DEPOT_TOKEN }}
          workdir: ${{ matrix.working_directory }}
          load: true
          pull: true

      - name: docker compose up
        working-directory: ${{ matrix.working_directory }}
        run: docker compose up -d

      - name: test
        working-directory: ${{ matrix.working_directory }}
        run: |
          ./healthcheck.sh
          hurl --test test.hurl

  extensions:
    needs: [what-changed]
    strategy:
      fail-fast: false
      matrix:
        platform: [{ 'runner': 'depot-ubuntu-24.04-8' }]
    runs-on: ${{ matrix.platform.runner }}
    if: |
      needs.what-changed.outputs.changed-packages != '[]'
            && contains(needs.what-changed.outputs.changed-packages, 'grafbase')
            && contains(needs.what-changed.outputs.changed-packages, 'grafbase-gateway')
            && !(cancelled())
            && !(contains(needs.*.result, 'failure'))
    steps:
      - uses: actions/checkout@v4
      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - uses: ./.github/actions/install-rust
        with:
          target: x86_64-unknown-linux-musl
          components: clippy, rustfmt

      - name: Checkout Extensions
        uses: actions/checkout@v4
        with:
          repository: 'grafbase/extensions'
          path: extensions

      - uses: Swatinem/rust-cache@a8b36e3f740d2ae4fa6e44a424a7b296af51cbef # v2.8.0
        with:
          cache-workspace-crates: true
          prefix-key: cargo-v1
          workspaces: |
            . -> target
            extensions -> target
          cache-directories: |
            extensions/extensions/*/build/wasm-cache

      - uses: ./.github/actions/fetch-assets

      - name: Install cargo-nextest
        uses: taiki-e/install-action@d12e869b89167df346dd0ff65da342d1fb1202fb # v2.53.2
        with:
          tool: nextest

      - name: Build CLI and Gateway
        shell: bash
        env:
          RUSTC_WRAPPER: 'sccache'
        run: |
          cargo build -p grafbase -p grafbase-gateway
          echo "$(pwd)/target/debug" >> $GITHUB_PATH

      - name: Login to Docker Hub
        env:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
        if: env.dockerhub_username != '' && runner.os == 'Linux'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: depot/setup-action@b0b1ea4f69e92ebf5dea3f8713a1b0c37b2126a5 # v1

      - name: Build docker compose
        # Will fail if there is nothing to build.
        continue-on-error: true
        uses: depot/bake-action@6f9796efa5235be338972e30e7b93977a7f18855 # v1
        with:
          project: ${{ env.DEPOT_PROJECT }}
          token: ${{ secrets.DEPOT_TOKEN }}
          workdir: extensions
          load: true
          pull: true

      - name: Start extensions docker compose
        working-directory: extensions
        run: docker compose up -d

      - name: Install Protoc for the gRPC extension
        uses: arduino/setup-protoc@f4d5893b897028ff5739576ea0409746887fa536 # v3

      - name: Build test matrix
        working-directory: extensions
        env:
          RUSTC_WRAPPER: 'sccache'
        run: |
          cargo build -p test-matrix

      - name: Test all extensions
        working-directory: extensions
        continue-on-error: true
        env:
          RUSTC_WRAPPER: 'sccache'
        run: |
          cargo run -p test-matrix

  after-build-rust:
    # This job is responsible for reacting to build success or failure. It must
    # happen after the builds, hence the `needs`. But it must not be skipped
    # when the builds are cancelled or fail (hence the `if: ${{ always() }}`).
    needs: [check-format, grafbase-sdk-doc, tests, examples, extensions]
    runs-on: depot-ubuntu-24.04-small
    if: ${{ always() }}
    steps:
      - name: Check that the builds succeeded
        run: exit 1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}

  check-helm-template:
    name: Check Helm Template
    runs-on: ubuntu-latest
    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Template Charts
        working-directory: gateway/helm
        run: |
          set -e
          helm template .
