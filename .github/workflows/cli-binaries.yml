name: CLI / build

on: [push, workflow_dispatch]

permissions:
  # Allow checks read
  checks: write
  # Allow repo checkout
  contents: write

jobs:
  windows:
    runs-on: windows-latest

    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Move CLI to root
        run: |
          shopt -s extglob
          rm -r !("cli")
          mv cli/* .
          rm -r cli

      # FIXME: Drop when https://github.com/actions-rs/toolchain/issues/126 is fixed.
      - name: Create `rust-toolchain`
        run: |
          grep -Po '(?<=^channel = ")\d+\.\d+(\.\d+)?(?=")' rust-toolchain.toml > rust-toolchain && rm rust-toolchain.toml

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        # FIXME: We use rust-toolchain.toml to specify targets, etc. Unfortunately,
        # the action doesn't support it yet (https://github.com/actions-rs/toolchain/issues/208).
        # Once it does, we should be able to remove the `with` block entirely.
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          target: x86_64-pc-windows-msvc
          override: true

      - name: Fetch assets
      - run: |
        Invoke-WebRequest -Uri "https://temp-artifact-storage.s3.eu-west-3.amazonaws.com/assets.zip" -OutFile assets.zip
        Remove-Item -Recurse -Force crates/server/assets
        Expand-Archive assets.zip -DestinationPath crates/server/assets
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ["--target", "x86_64-pc-windows-msvc"]


  linux:
    runs-on: ubuntu-latest

    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Move CLI to root
        run: |
          shopt -s extglob
          rm -r !("cli")
          mv cli/* .
          rm -r cli

      # FIXME: Drop when https://github.com/actions-rs/toolchain/issues/126 is fixed.
      - name: Create `rust-toolchain`
        run: |
          grep -Po '(?<=^channel = ")\d+\.\d+(\.\d+)?(?=")' rust-toolchain.toml > rust-toolchain && rm rust-toolchain.toml

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        # FIXME: We use rust-toolchain.toml to specify targets, etc. Unfortunately,
        # the action doesn't support it yet (https://github.com/actions-rs/toolchain/issues/208).
        # Once it does, we should be able to remove the `with` block entirely.
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          target: x86_64-unknown-linux-musl
          override: true

      - name: Fetch assets
      - run: |
        curl https://temp-artifact-storage.s3.eu-west-3.amazonaws.com/assets.zip --output assets.zip
        unzip assets.zip
        rm crates/server/assets
        mv assets crates/server/assets

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ["--target", "x86_64-unknown-linux-musl"]


  darwin:
    runs-on: ubuntu-latest

    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Move CLI to root
        run: |
          shopt -s extglob
          rm -r !("cli")
          mv cli/* .
          rm -r cli

      # FIXME: Drop when https://github.com/actions-rs/toolchain/issues/126 is fixed.
      - name: Create `rust-toolchain`
        run: |
          grep -Po '(?<=^channel = ")\d+\.\d+(\.\d+)?(?=")' rust-toolchain.toml > rust-toolchain && rm rust-toolchain.toml

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        # FIXME: We use rust-toolchain.toml to specify targets, etc. Unfortunately,
        # the action doesn't support it yet (https://github.com/actions-rs/toolchain/issues/208).
        # Once it does, we should be able to remove the `with` block entirely.
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          target: x86_64-apple-darwin
          override: false
      
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        # FIXME: We use rust-toolchain.toml to specify targets, etc. Unfortunately,
        # the action doesn't support it yet (https://github.com/actions-rs/toolchain/issues/208).
        # Once it does, we should be able to remove the `with` block entirely.
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
          target: aarch64-apple-darwin
          override: false

      - name: Fetch assets
      - run: |
        curl https://temp-artifact-storage.s3.eu-west-3.amazonaws.com/assets.zip --output assets.zip
        unzip assets.zip
        rm crates/server/assets
        mv assets crates/server/assets

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ["--target", "aarch64-apple-darwin"]

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ["--target", "x86_64-apple-darwin"]
