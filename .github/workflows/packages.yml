name: packages

on:
  workflow_dispatch:
  pull_request:

permissions:
  contents: read
  pull-requests: read

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

defaults:
  run:
    shell: bash
    working-directory: ./packages

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-change-type:
    runs-on: buildjet-8vcpu-ubuntu-2204
    outputs:
      packages: ${{ steps.filter.outputs.packages }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Path filter check
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            packages:
              - 'packages/**/*'

  lint:
    name: Lint
    needs: [detect-change-type]
    if: ${{ needs.detect-change-type.outputs.packages == 'true' }}
    runs-on: buildjet-8vcpu-ubuntu-2204
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: buildjet/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --ignore-scripts --frozen-lockfile

      - name: Lint
        run: pnpm run lint

  build-and-test:
    name: Build and test
    needs: [lint]
    runs-on: buildjet-8vcpu-ubuntu-2204
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: buildjet/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --ignore-scripts --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Run tests
        run: pnpm turbo test

      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Check the nix build
        run: nix build .#cli-app
