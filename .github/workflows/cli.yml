name: cli

on: [push, workflow_dispatch]

permissions:
  # Allow checks read
  checks: write
  # Allow repo checkout
  contents: write

env:
  GRAFBASE_SKIP_ASSET_VERSION_CHECK: 'true'
  ASSETS_VERSION: 'release/c25def5-2022-11-02'
  PROD_ASSETS: assets.grafbase.com
  CARGO_TERM_COLOR: 'always'

concurrency:
  group: ${{ github.event.ref }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Rust job init
        uses: ./.github/actions/init_rust_job
        with:
          cdn: ${{ env.PROD_ASSETS }}
          assets_version: ${{ env.ASSETS_VERSION }}

      - name: check formatting of Rust code
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: lint
        uses: actions-rs/clippy-check@v1
        with:
          args: --locked --tests -- -D warnings
          name: clippy
          token: ${{ github.token }}

  windows:
    runs-on: windows-latest
    needs: [lint]
    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Rust job init
        uses: ./.github/actions/init_rust_job
        with:
          cdn: ${{ env.PROD_ASSETS }}
          assets_version: ${{ env.ASSETS_VERSION }}

      - name: Install cargo-nextest
        run: |
          curl -LsSf https://get.nexte.st/latest/windows-tar | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
        shell: bash

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: 'run --profile ci'

      - name: Build release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: '--release --target x86_64-pc-windows-msvc'

      - name: Upload binaries
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.ref_name }}-windows
          path: |
            target/x86_64-pc-windows-msvc/release/grafbase.exe

  linux:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Rust job init
        uses: ./.github/actions/init_rust_job
        with:
          cdn: ${{ env.PROD_ASSETS }}
          assets_version: ${{ env.ASSETS_VERSION }}

      - name: Install cargo-nextest
        run: |
          curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: 'run --profile ci'

      - name: Build release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: '--release --target x86_64-unknown-linux-musl'

      - name: Upload binaries
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.ref_name }}-linux
          path: |
            target/x86_64-unknown-linux-musl/release/grafbase

  darwin:
    runs-on: macos-latest
    needs: [lint]
    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Rust job init
        uses: ./.github/actions/init_rust_job
        with:
          cdn: ${{ env.PROD_ASSETS }}
          assets_version: ${{ env.ASSETS_VERSION }}

      - name: Install cargo-nextest
        run: |
          curl -LsSf https://get.nexte.st/latest/mac | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: nextest
          args: 'run --profile ci'

      - name: Build aarch64 release
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          use-cross: true
          command: build
          args: '--release --target aarch64-apple-darwin'

      - name: Build x86_64 release
        uses: actions-rs/cargo@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          use-cross: true
          command: build
          args: '--release --target x86_64-apple-darwin'

      - name: Upload aarch binary
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.ref_name }}-aarch64-apple-darwin
          path: target/aarch64-apple-darwin/release/grafbase

      - name: Upload x86_64 binary
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.ref_name }}-x86_64-apple-darwin
          path: target/x86_64-apple-darwin/release/grafbase

  release:
    needs: [windows, linux, darwin]
    if: startsWith(github.ref, 'refs/tags/')
    uses: ./.github/workflows/partial-release.yml
    with:
      draft: false
      tag: ${{ github.ref_name }}
    secrets:
      CRATES_ACCESS_TOKEN: ${{ secrets.CRATES_ACCESS_TOKEN }}
      NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
