name: cli

on:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - 'cli-*'

permissions:
  # Allow checks read
  checks: write
  # Allow repo checkout
  contents: write
  # Allow PRs write
  pull-requests: write
  # Allow issues write
  issues: write

env:
  GRAFBASE_SKIP_ASSET_VERSION_CHECK: 'true'
  ASSETS_VERSION: release/3dd760c-2024-02-29
  PROD_ASSETS: assets.grafbase.com
  CARGO_TERM_COLOR: 'always'
  CARGO_PROFILE_DEV_DEBUG: 0
  CARGO_PROFILE_TEST_DEBUG: 0
  DO_NOT_TRACK: 1
  GRAFBASE_RUDDERSTACK_WRITE_KEY: ${{ secrets.GRAFBASE_RUDDERSTACK_WRITE_KEY }}
  GRAFBASE_RUDDERSTACK_DATAPLANE_URL: ${{ secrets.GRAFBASE_RUDDERSTACK_DATAPLANE_URL }}
  CLI_RELEASE_CLOUDFLARE_R2_ENDPOINT_URL: https://d267a8ab95268b272f5147e8939c9d38.r2.cloudflarestorage.com
  CLI_RELEASE_CLOUDFLARE_R2_PUBLIC_URL: https://pub-b0013effd6614b32a4fb9bf338b90658.r2.dev
  CLI_RELEASE_CLOUDFLARE_R2_BUCKET_NAME: cli-releases

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  darwin:
    runs-on: macos-latest-xlarge
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64-apple-darwin]
    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Rust job init
        uses: ./.github/actions/init_rust_job
        with:
          platform: macos
          cache-key: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.target }}-cargo-release-${{ hashFiles('cli/Cargo.lock') }}
          restore-key: ${{ runner.os }}-${{ runner.arch }}-cargo-release

      - name: Prepare CLI assets
        uses: ./.github/actions/cli_assets
        with:
          cdn: ${{ env.PROD_ASSETS }}
          assets_version: ${{ env.ASSETS_VERSION }}

      - if: ${{ !startsWith(github.ref, 'refs/tags/') && matrix.target == 'x86_64-apple-darwin' }}
        name: Sanitize
        uses: ./.github/actions/sanitize
        with:
          lint: false

      - name: Build ${{ matrix.target }} release
        run: |
          cd cli
          cargo build --release -p grafbase --target ${{ matrix.target }} --timings

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-release-timings.html
          path: target/cargo-timings/cargo-timing.html

      - name: Parse version tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          VERSION_BUMP="${{ github.ref_name }}"
          VERSION_BUMP=${VERSION_BUMP//cli-} # remove the cli prefix from the tag
          echo VERSION_BUMP=${VERSION_BUMP} >> $GITHUB_ENV

      - if: ${{ github.event_name == 'pull_request' && matrix.archs.runner != 'buildjet-8vcpu-ubuntu-2204-arm' }}
        name: Upload the binary of the change to R2
        run: |
          curl "https://awscli.amazonaws.com/AWSCLIV2.pkg" -o "AWSCLIV2.pkg"
          sudo installer -pkg AWSCLIV2.pkg -target /
          aws s3api put-object \
            --endpoint-url $CLI_RELEASE_CLOUDFLARE_R2_ENDPOINT_URL \
            --bucket $CLI_RELEASE_CLOUDFLARE_R2_BUCKET_NAME \
            --key ${GITHUB_SHA}/${{ matrix.target }}/grafbase \
            --body target/${{ matrix.target }}/release/grafbase
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_RELEASES_BUCKET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_RELEASES_BUCKET_SECRET_ACCESS_KEY }}

      - if: startsWith(github.ref, 'refs/tags/')
        name: Upload ${{ matrix.target }} binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.VERSION_BUMP }}-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/grafbase

  after-build:
    # This job is responsible for reacting to build success or failure. It must
    # happen after the builds, hence the `needs`. But it must not be skipped
    # when the builds are cancelled or fail (hence the `if: ${{ always() }}`).
    needs: [darwin]
    runs-on: buildjet-2vcpu-ubuntu-2204
    if: ${{ always() }}
    steps:
      - name: Check that the builds succeeded
        run: exit 1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        if: ${{ github.event_name == 'pull_request' && contains(needs.*.result, 'success') }}
        with:
          message: |
            ### Built binaries:

            * [Mac (M1)](${{ env.CLI_RELEASE_CLOUDFLARE_R2_PUBLIC_URL }}/${{ github.sha }}/aarch64-apple-darwin/grafbase)

      - name: Report release failures
        if: ${{ failure() &&  startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'cli-') }}
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: '({workflow}) CLI release failed'
          message_format: 'Check the link below to see what failed.'
          footer: '<{run_url}|View Run>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
