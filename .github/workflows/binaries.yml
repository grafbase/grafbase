name: Binaries

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'gateway-*'
      - 'grafbase-*'

permissions:
  # Allow checks read
  checks: write
  # Allow repo checkout
  contents: write
  # Allow PRs write
  pull-requests: write
  # Allow issues write
  issues: write
  # Allow login to via OIDC
  id-token: write

env:
  CARGO_PROFILE_DEV_DEBUG: 0
  CARGO_PROFILE_TEST_DEBUG: 0
  CARGO_TERM_COLOR: 'always'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-change-type:
    runs-on: depot-ubuntu-24.04-small
    outputs:
      build: ${{ steps.filter.outputs.build }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Path filter check
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          filters: |
            build:
              - Dockerfile
              - 'gateway/**/*'
              - 'cli/**/*'
              - 'crates/**/*'
              - '.github/workflows/gateway.yml'
              - '.github/actions/**/*'
              - '!**/*.md'

  lint:
    name: Lint
    needs: [detect-change-type]
    if: ${{ needs.detect-change-type.outputs.build == 'true' || startsWith(github.ref, 'refs/tags/') }}
    runs-on: depot-ubuntu-24.04-8
    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Rust job init
        uses: ./.github/actions/init_rust_job
        with:
          platform: linux

      - name: Fetch CLI assets
        uses: ./.github/actions/fetch-assets

      - name: Lint
        uses: ./.github/actions/lint

  test:
    name: Test
    needs: [lint]
    if: ${{ needs.detect-change-type.outputs.build == 'true' || startsWith(github.ref, 'refs/tags/') }}
    runs-on: depot-ubuntu-24.04-8
    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Rust job init
        uses: ./.github/actions/init_rust_job
        with:
          platform: linux

      - name: Fetch CLI assets
        uses: ./.github/actions/fetch-assets

      - name: Test
        uses: ./.github/actions/test
        with:
          dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}

  individual-builds:
    needs: [detect-change-type]
    if: ${{ needs.detect-change-type.outputs.build == 'true' || startsWith(github.ref, 'refs/tags/') }}
    strategy:
      fail-fast: false
      matrix:
        package: [grafbase, grafbase-gateway, federated-server]
    runs-on: depot-ubuntu-24.04-8
    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Setup Depot
        uses: depot/setup-action@v1

      - name: Install sccache
        uses: taiki-e/install-action@d12e869b89167df346dd0ff65da342d1fb1202fb # v2.53.2
        with:
          tool: sccache

      - name: Rust job init
        uses: ./.github/actions/init_rust_job
        with:
          platform: linux

      - name: Fetch CLI assets
        uses: ./.github/actions/fetch-assets

      - name: Individual package build
        shell: bash
        run: |
          set -euo pipefail
          # The actual features used for each dependency depends on what is being built simultaneously.
          # However, each package is published individually, so we're checking that all packages compile
          # with only their defined features.
          # See: https://github.com/rust-lang/cargo/issues/4463
          depot cargo check --all-features --package ${{ matrix.package }}

      - name: Individual package without lambda
        if: ${{ matrix.package == 'grafbase-gateway' }}
        shell: bash
        run: |
          set -euo pipefail
          depot cargo check --package ${{ matrix.package }}

  docker-gateway:
    needs: [test]
    if: ${{ (needs.detect-change-type.outputs.build == 'true' || startsWith(github.ref, 'refs/tags/')) }}
    runs-on: depot-ubuntu-24.04
    permissions:
      packages: write
    env:
      COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push tagged image
        uses: depot/build-push-action@636daae76684e38c301daa0c5eca1c095b24e780 # v1
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          project: lc6t0h7bhh
          token: ${{ secrets.DEPOT_TOKEN }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/grafbase/gateway:${{ env.COMMIT_SHA }}, ghcr.io/grafbase/gateway:latest
          file: ./gateway/Dockerfile

      - name: Set release version
        if: ${{ startsWith(github.ref, 'refs/tags') && startsWith(github.ref_name, 'gateway-') }}
        run: |
          RELEASE_VERSION="$(echo "${{ github.ref }}" | sed -e "s/^refs\/tags\/gateway-//")"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Build and push versioned image
        uses: depot/build-push-action@636daae76684e38c301daa0c5eca1c095b24e780 # v1
        if: ${{ startsWith(github.ref, 'refs/tags') && startsWith(github.ref_name, 'gateway-') }}
        with:
          project: lc6t0h7bhh
          token: ${{ secrets.DEPOT_TOKEN }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/grafbase/gateway:${{ env.RELEASE_VERSION }}
          file: ./gateway/Dockerfile

  linux:
    needs: [test]
    strategy:
      fail-fast: false
      matrix:
        archs:
          [
            { runner: depot-ubuntu-24.04-8, target: x86_64-unknown-linux-musl, platform: linux },
            { runner: depot-ubuntu-24.04-arm-8, target: aarch64-unknown-linux-musl, platform: linux-arm },
          ]
    runs-on: ${{ matrix.archs.runner }}
    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Rust job init
        uses: ./.github/actions/init_rust_job
        with:
          platform: ${{ matrix.archs.platform }}

      - name: Setup Depot
        uses: depot/setup-action@v1

      - name: Install sccache
        uses: taiki-e/install-action@d12e869b89167df346dd0ff65da342d1fb1202fb # v2.53.2
        with:
          tool: sccache

      - name: Fetch CLI assets
        uses: ./.github/actions/fetch-assets

      - name: Install musl
        run: |
          sudo apt update
          sudo apt install musl

      - name: Build grafbase release
        run: |
          cd cli
          depot cargo build --release -p grafbase --target ${{ matrix.archs.target }} --timings

      - name: Build gateway release
        run: |
          depot cargo build --release -p grafbase-gateway --target ${{ matrix.archs.target }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archs.platform }}-release-timings.html
          path: target/cargo-timings/cargo-timing.html

      - name: Parse version tag for grafbase
        if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'grafbase-')
        run: |
          VERSION_BUMP="${{ github.ref_name }}"
          VERSION_BUMP=${VERSION_BUMP//grafbase-} # remove the grafbase prefix from the tag
          echo VERSION_BUMP=${VERSION_BUMP} >> $GITHUB_ENV

      - name: Parse version tag for gateway
        if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'gateway-')
        run: |
          VERSION_BUMP="${{ github.ref_name }}"
          VERSION_BUMP=${VERSION_BUMP//gateway-} # remove the gateway prefix from the tag
          echo VERSION_BUMP=${VERSION_BUMP} >> $GITHUB_ENV

      - if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'grafbase-')
        name: Upload grafbase binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.VERSION_BUMP }}-${{ matrix.archs.platform }}
          path: |
            target/${{ matrix.archs.target }}/release/grafbase

      - if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'gateway-')
        name: Upload gateway binaries
        uses: actions/upload-artifact@v4
        with:
          name: gateway-${{ env.VERSION_BUMP }}-${{ matrix.archs.platform }}
          path: |
            target/${{ matrix.archs.target }}/release/grafbase-gateway

      - name: Build gateway lambda release
        shell: bash
        run: |
          BUILD_PROFILE=release
          if [[ $GITHUB_REF =~ ^refs/tags/gateway- ]]; then
            BUILD_PROFILE=lambda
          fi
          echo "Building lambda with $BUILD_PROFILE profile"
          depot cargo build --profile $BUILD_PROFILE -p grafbase-gateway --target ${{ matrix.archs.target }} --features lambda

      - if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'gateway-')
        name: Upload gateway lambda binary
        uses: actions/upload-artifact@v4
        with:
          name: gateway-lambda-${{ env.VERSION_BUMP }}-${{ matrix.archs.platform }}
          path: |
            target/${{ matrix.archs.target }}/lambda/grafbase-gateway

  windows:
    needs: [test]
    runs-on: depot-windows-2022-8
    steps:
      - name: Get sources
        uses: actions/checkout@v4
      - name: Rust job init
        uses: ./.github/actions/init_rust_job
        with:
          platform: windows

      - name: Setup Depot
        uses: depot/setup-action@v1

      - name: Install sccache
        uses: taiki-e/install-action@d12e869b89167df346dd0ff65da342d1fb1202fb # v2.53.2
        with:
          tool: sccache

      - name: Fetch CLI assets
        uses: ./.github/actions/fetch-assets

      - uses: ilammy/setup-nasm@72793074d3c8cdda771dba85f6deafe00623038b # v1

      - if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        name: Test
        uses: ./.github/actions/test
        with:
          with-integration-tests: 'false'
          dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build grafbase release
        run: |
          cd cli
          depot cargo build --release -p grafbase --target x86_64-pc-windows-msvc --timings

      - uses: actions/upload-artifact@v4
        with:
          name: windows-release-timings.html
          path: target/cargo-timings/cargo-timing.html

      - name: Parse version tag for grafbase
        if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'grafbase-')
        shell: bash
        run: |
          VERSION_BUMP="${{ github.ref_name }}"
          VERSION_BUMP=${VERSION_BUMP//grafbase-} # remove the grafbase prefix from the tag
          echo VERSION_BUMP=${VERSION_BUMP} >> $GITHUB_ENV

      - if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'grafbase-')
        name: Upload grafbase x86_64-pc-windows-msvc binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.VERSION_BUMP }}-x86_64-pc-windows-msvc
          path: target/x86_64-pc-windows-msvc/release/grafbase.exe

  darwin:
    needs: [test]
    runs-on: depot-macos-latest
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Rust job init
        uses: ./.github/actions/init_rust_job
        with:
          platform: macos

      - name: Setup Depot
        uses: depot/setup-action@v1

      - name: Install sccache
        uses: taiki-e/install-action@d12e869b89167df346dd0ff65da342d1fb1202fb # v2.53.2
        with:
          tool: sccache

      - name: Fetch CLI assets
        uses: ./.github/actions/fetch-assets

      - if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        name: Test
        uses: ./.github/actions/test
        with:
          with-integration-tests: 'false'
          dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build grafbase release
        run: |
          depot cargo build --release --target=${{ matrix.target }} -p grafbase --timings

      - name: Build gateway release
        run: |
          depot cargo build --release --target=${{ matrix.target }} -p grafbase-gateway

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-release-timings.html
          path: target/cargo-timings/cargo-timing.html

      - name: Parse version tag for grafbase
        if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'grafbase-')
        run: |
          VERSION_BUMP="${{ github.ref_name }}"
          VERSION_BUMP=${VERSION_BUMP//grafbase-} # remove the grafbase prefix from the tag
          echo VERSION_BUMP=${VERSION_BUMP} >> $GITHUB_ENV

      - name: Parse version tag for gateway
        if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'gateway-')
        run: |
          VERSION_BUMP="${{ github.ref_name }}"
          VERSION_BUMP=${VERSION_BUMP//gateway-} # remove the gateway prefix from the tag
          echo VERSION_BUMP=${VERSION_BUMP} >> $GITHUB_ENV

      - if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'grafbase-')
        name: Upload grafbase ${{ matrix.target }} binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.VERSION_BUMP }}-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/grafbase

      - if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'gateway-')
        name: Upload gateway ${{ matrix.target }} binary
        uses: actions/upload-artifact@v4
        with:
          name: gateway-${{ env.VERSION_BUMP }}-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/grafbase-gateway

  release-grafbase:
    needs: [windows, linux, darwin]
    if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'grafbase-')
    uses: ./.github/workflows/grafbase-partial-release.yml
    with:
      draft: false
      tag: ${{ github.ref_name }}
      prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}
    secrets:
      CRATES_ACCESS_TOKEN: ${{ secrets.CRATES_ACCESS_TOKEN }}
      NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

  release-gateway:
    needs: [windows, linux, darwin]
    if: startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'gateway-')
    uses: ./.github/workflows/gateway-partial-release.yml
    with:
      draft: false
      tag: ${{ github.ref_name }}
      prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}
    secrets:
      CRATES_ACCESS_TOKEN: ${{ secrets.CRATES_ACCESS_TOKEN }}
      NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

  after-build:
    # This job is responsible for reacting to build success or failure. It must
    # happen after the builds, hence the `needs`. But it must not be skipped
    # when the builds are cancelled or fail (hence the `if: ${{ always() }}`).
    needs: [linux, darwin]
    runs-on: depot-ubuntu-24.04-small
    if: ${{ always() }}
    steps:
      - name: Check that the builds succeeded
        run: exit 1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}

      - name: Report release failures
        if: ${{ failure() && startsWith(github.ref, 'refs/tags/') && startsWith(github.ref_name, 'grafbase-') }}
        uses: ravsamhq/notify-slack-action@be814b201e233b2dc673608aa46e5447c8ab13f2 # v2
        with:
          status: ${{ job.status }}
          notification_title: '({workflow}) grafbase release failed'
          message_format: 'Check the link below to see what failed.'
          footer: '<{run_url}|View Run>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
