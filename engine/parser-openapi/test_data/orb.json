{
    "openapi": "3.1.0",
    "info": {
        "title": "API Reference",
        "version": "1.0",
        "description": "Orb's API is built with the following principles in mind:\n\n1. **Predictable developer experience**: Where applicable, the Orb API uses industry-standard patterns such as cursor-based pagination and standardized error output. To help with debugging in critical API actions, the API always strives to provide detailed and actionable error messages. Aliases such as external customer IDs aid in fast integration times.\n2. **Reliably real time**: Orb's event-based APIs, such as event ingestion are designed to handle extremely high throughput and scale with concurrent load. Orb also provides a real-time event-level credits ledger and a highly performant webhooks architecture.\n3. **Flexibility at the forefront**: Features like timezone localization and the ability to amend historical usage show the flexible nature of the platform.",
        "contact": {
            "email": "team@withorb.com",
            "url": "https://www.withorb.com/",
            "name": "Orb, Inc."
        },
        "termsOfService": "https://www.withorb.com/terms",
        "summary": "Orb powers usage-based billing for the fastest-growing software companies."
    },
    "servers": [
        {
            "url": "https://api.withorb.com/v1",
            "description": "Production server"
        }
    ],
    "paths": {
        "/ingest": {
            "post": {
                "summary": "Ingest events",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "",
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "duplicate": [],
                                            "ingested": [],
                                            "validation_failed": [
                                                {
                                                    "idempotency_key": "materialize-sample-event-90",
                                                    "validation_errors": [
                                                        "{'a': 'us-east-1'} is not of type 'number', 'string', 'boolean'"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "properties": {
                                        "debug": {
                                            "type": "object",
                                            "description": "Optional debug information (only present when debug=true is passed to the endpoint). Contains ingested and duplicate event idempotency keys.",
                                            "minProperties": 0,
                                            "maxProperties": 0,
                                            "properties": {
                                                "duplicate": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "ingested": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "validation_failed": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "Contains all failing validation events. In the case of a 200, this array will always be empty. This field will always be present.",
                                            "items": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "idempotency_key": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "description": "The passed idempotency_key corresponding to the validation_errors"
                                                        },
                                                        "validation_errors": {
                                                            "type": "array",
                                                            "description": "An array of objects corresponding to validation failures for each idempotency_key.",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "idempotency_key": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "description": "The passed idempotency_key corresponding to the validation_errors"
                                                        },
                                                        "validation_errors": {
                                                            "type": "array",
                                                            "description": "An array of objects corresponding to validation failures for each idempotency_key.",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "validation_failed"
                                    ]
                                },
                                "examples": {
                                    "Successful ingestion": {
                                        "value": {
                                            "validation_failed": []
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "debug": {
                                            "type": "object",
                                            "description": "Optional debug information (only present when debug=true is passed to the endpoint). Contains ingested and duplicate event idempotency keys.",
                                            "properties": {
                                                "duplicate": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "ingested": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "validation_failed": {
                                            "type": "array",
                                            "description": "Contains all failing validation events. In the case of a 400, there will be at least one entry in this array.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "idempotency_key": {
                                                        "type": "string"
                                                    },
                                                    "validation_errors": {
                                                        "type": "array",
                                                        "description": "An array of objects corresponding to validation failures for each idempotency_key.",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "validation_failed"
                                    ]
                                },
                                "examples": {
                                    "Validation failure": {
                                        "value": {
                                            "validation_failed": [
                                                {
                                                    "idempotency_key": "9MWjqKUG9saHtWew",
                                                    "validation_errors": [
                                                        "Event idempotency_key 9MWjqKUG9saHtWew is a duplicate,but the current request does not match the previous request"
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "gZkWyHjbNRUXSDxJ",
                                                    "validation_errors": [
                                                        "Event idempotency_key gZkWyHjbNRUXSDxJ is a duplicate,but the current request does not match the previous request"
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "AEocrVaAeu73YZ9E",
                                                    "validation_errors": [
                                                        "Event idempotency_key AEocrVaAeu73YZ9E is a duplicate,but the current request does not match the previous request"
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "WQck5u83uSigyrWQ",
                                                    "validation_errors": [
                                                        "Event idempotency_key WQck5u83uSigyrWQ is a duplicate,but the current request does not match the previous request"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "post-ingest",
                "description": "Orb's event ingestion model and API is designed around two core principles:\n\n1. **Data fidelity**: The accuracy of your billing model depends on a robust foundation of events. Orb's API protocol encourages usage patterns that ensure that your data is consistently complete and correct.\n2. **Fast integration**: Sending events into Orb requires no tedious setup steps or explicit field schema for your event shape, making it instant to start streaming in usage in real-time.\n\n\n## Event shape\n\nEvents are the starting point for all usage calculations in the system, and are simple at their core:\n\n```json\n{\n  // customer_id and external_customer_id are used to\n  // attribute usage to a given Customer. Exactly one of these\n  // should be specified in a given ingestion event.\n\n  // `customer_id` is the Orb generated identifier for the Customer,\n  // which is returned from the Create Customer API call.\n  customer_id: string,\n\n  // external_customer_id is an alternate identifier which is associated\n  // with a Customer at creation time. This is treated as an alias for\n  // customer_id, and is usually set to an identifier native to your system.\n  external_customer_id: string,\n\n  // A string name identifying the event, usually a usage\n  // action. By convention, this should not contain any whitespace.\n  event_name: string,\n\n  // An ISO 8601 format date with no timezone offset.\n  // This should represent the time that usage occurred\n  // and is important to attribute usage to a given\n  // billing period. See the notes below on determining the timestamp.\n  // e.g. 2020-12-09T16:09:53Z\n  timestamp: string,\n\n  // A unique value, generated by the client, that is\n  // used to de-duplicate events.\n  // Exactly one event with a given\n  // idempotency key will be ingested, which allows for\n  // safe request retries.\n  idempotency_key: string\n\n  // Optional custom metadata to attach to the event.\n  // This might include a numeric value used for aggregation,\n  // or a string/boolean value used for filtering.\n  // The schema of this dictionary need not be pre-declared, and\n  // properties can be added at any time.\n  properties: {\n    [key: string]?: string | number | boolean,\n  },\n}\n```\n\n## Required fields\nBecause events streamed to Orb are meant to be as flexible as possible, there are only a few required fields in every event.\n\n- We recommend that `idempotency_key` are unique strings that you generated with V4 UUIDs, but only require that they uniquely identify an event (i.e. don’t collide).\n- The `timestamp` field in the event body will be used to determine which billable period a given event falls into. For example, with a monthly billing cycle starting from the first of December, Orb will calculate metrics based on events that fall into the range `12-01 00:00:00 <= timestamp < 01-01 00:00:00`.\n\n## Logging metadata\n\nOrb allows tagging events with metadata using a flexible properties dictionary. Since Orb does not enforce a rigid schema for this field-set, key-value pairs can be added dynamically as your events evolve.\n\nThis dictionary can be helpful for a wide variety of use cases:\n\n- Numeric properties on events like `compute_time_ms` can later be inputs to our flexible query engine to determine usage.\n- Logging a region or cluster with each event can help you provide customers more granular visibility into their usage.\n\nWe encourage logging this metadata with an eye towards future use cases to ensure full coverage for historical data. The datatype of the value in the properties dictionary is important for metric creation from an event source. Values that you wish to numerically aggregate should be of numeric type in the event.\n\n\n## Determining event timestamp\nFor cases where usage is being reported in real time as it is occurring, timestamp should correspond to the time that usage occurred.\n\nIn cases where usage is reported in aggregate for a historical timeframe at a regular interval, we recommend setting the event `timestamp` to the midpoint of the interval. As an example, if you have an hourly reporter that sends data once an hour for the previous hour of usage, setting the `timestamp` to the half-hour mark will ensure that the usage is counted within the correct period.\n\nNote that other time-related fields (e.g. time elapsed) can be added to the properties dictionary as necessary.\n\nIn cases where usage is reported in aggregate for a historical timeframe, the timestamp must be within the grace period set for your account. Events with `timestamp < current_time - grace_period` will not be accepted as a valid event, and will throw validation errors. Enforcing the grace period enables Orb to accurately map usage to the correct billing cycle and ensure that all usage is billed for in the corresponding billing period.\n\n## Event validation\n\nOrb’s validation ensures that you recognize errors in your events as quickly as possible, and the API provides informative error messages to help you fix problems quickly.\n\nWe validate the following:\n\n- Exactly one of `customer_id` and `external_customer_id` should be specified.\n- If specified, `customer_id` must identify a Customer resource within Orb. We do not support sending events for customers that have not been provisioned. Similarly, if specified, `external_customer_id` must be an identifier that is associated with an Orb Customer resource. Note: During our initial integration period, this enforcement will be temporarily turned into a warning to ensure smooth customer migration.\n- `timestamp` must conform to ISO 8601 and represent a timestamp at most 1 hour in the future. This timestamp should be sent in UTC timezone (no timezone offset).\n\n## Idempotency and retry semantics\n\nOrb's idempotency guarantees allow you to implement safe retry logic in the event of network or machine failures, ensuring data fidelity. Each event in the request payload is associated with an idempotency key, and Orb guarantees that a single idempotency key will be successfully ingested at most once.\n\n- Successful responses return a 200 HTTP status code. The response contains information about previously processed events.\n- Requests that return a `4xx` HTTP status code indicate a payload error and contain at least one event with a validation failure. An event with a validation failure can be re-sent to the ingestion endpoint (after the payload is fixed) with the original idempotency key since that key is not marked as processed.\n- Requests that return a `5xx` HTTP status code indicate a server-side failure. These requests should be retried in their entirety.\n\n\n## API usage and limits\nThe ingestion API is designed made for real-time streaming ingestion and architected for high throughput. Even if events are later deemed unnecessary or filtered out, we encourage you to log them to Orb if they may be relevant to billing calculations in the future.\n\nTo take advantage of the real-time features of the Orb platform and avoid any chance of dropped events by producers, we recommend reporting events to Orb frequently. Optionally, events can also be briefly aggregated at the source, as this API accepts an array of event bodies.\n\nOrb does not currently enforce a hard rate-limit for API usage or a maximum request payload size, but please give us a heads up if you’re changing either of these factors by an order of magnitude from initial setup.\n\n## Testing in debug mode\nThe ingestion API supports a debug mode, which returns additional verbose output to indicate which event idempotency keys were newly ingested or duplicates from previous requests. To enable this mode, mark `debug=true` as a query parameter.\n\nIf `debug=true` is not specified, the response will only contain `validation_failed`. Orb will still honor the idempotency guarantees set [here](https://docs.withorb.com/docs/orb-docs/event-ingestion#event-volume-and-concurrency) in all cases.\n\nWe strongly recommend that you only use debug mode as part of testing your initial Orb integration. Once you're ready to switch to production, disable debug mode to take advantage of improved performance and maximal throughput.\n\n#### Example: ingestion response with `debug=true`\n\n```json\n{\n  \"debug\": {\n    \"duplicate\": [], \n    \"ingested\": [\n      \"B7E83HDMfJPAunXW\",\n      \"SJs5DQJ3TnwSqEZE\",\n      \"8SivfDsNKwCeAXim\"\n    ]\n  }, \n  \"validation_failed\": []\n}\n```\n\n#### Example: ingestion response with `debug=false`\n\n```json\n{\n  \"validation_failed\": []\n}\n```",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "",
                                "type": "object",
                                "x-examples": {},
                                "properties": {
                                    "events": {
                                        "type": "array",
                                        "uniqueItems": true,
                                        "minItems": 1,
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "idempotency_key": {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "description": "A unique value, generated by the client, that is used to de-duplicate events. Exactly one event with a given idempotency key will be ingested, which allows for safe request retries."
                                                },
                                                "external_customer_id": {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "description": "An alias for the Orb customer, whose mapping is specified when creating the customer"
                                                },
                                                "customer_id": {
                                                    "type": "string",
                                                    "description": "The Orb Customer identifier"
                                                },
                                                "event_name": {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "description": "A name to meaningfully identify the action or event type."
                                                },
                                                "properties": {
                                                    "type": "object",
                                                    "description": "A dictionary of custom properties. Values in this dictionary must be numeric, boolean, or strings. Nested dictionaries are disallowed.",
                                                    "minProperties": 1
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "description": "An ISO 8601 format date with no timezone offset (i.e. UTC). This should represent the time that usage was recorded, and is particularly important to attribute usage to a given billing period.",
                                                    "example": "2020-12-09T16:09:53Z"
                                                }
                                            },
                                            "required": [
                                                "idempotency_key",
                                                "event_name",
                                                "properties",
                                                "timestamp"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "events"
                                ]
                            },
                            "examples": {
                                "Successful Ingestion": {
                                    "value": {
                                        "events": [
                                            {
                                                "customer_id": "6urAfP3eqHso3a2k",
                                                "event_name": "payment_processed",
                                                "timestamp": "2022-05-11T21:33:13.1652304793Z",
                                                "idempotency_key": "fQp2wSmK7CF9oPcu",
                                                "properties": {
                                                    "amount": 100
                                                }
                                            },
                                            {
                                                "customer_id": "6urAfP3eqHso3a2k",
                                                "event_name": "payment_processed",
                                                "timestamp": "2022-05-11T21:33:13.1652304793Z",
                                                "idempotency_key": "8h5rSNYgYj5ngws7",
                                                "properties": {
                                                    "amount": 100
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "Event"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ],
                            "default": "false"
                        },
                        "in": "query",
                        "name": "debug",
                        "description": "Flag to enable additional debug information in the endpoint response"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "backfill_id",
                        "description": "If this ingestion request is part of a backfill, this parameter ties the ingested events to the backfill"
                    }
                ]
            },
            "parameters": []
        },
        "/customers": {
            "get": {
                "summary": "List customers",
                "tags": [
                    "Customer"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "",
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "data": [
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-04-02T07:16:00+00:00",
                                                    "email": "sujay-api-test-2@test.com",
                                                    "external_customer_id": "sujay-api-test-2",
                                                    "id": "J6j5TtH7NeKDmCKM",
                                                    "name": "sujay-api-test 2",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-04-02T07:02:18+00:00",
                                                    "email": "sujay-api-creation-test@gmail.com",
                                                    "external_customer_id": "sujay-api-creation-test",
                                                    "id": "3c7ye996r6oaQAHW",
                                                    "name": "sujay api creation test",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-31T23:55:59+00:00",
                                                    "email": "test@test.com",
                                                    "external_customer_id": null,
                                                    "id": "KbNRQQ3uRjwqVHCo",
                                                    "name": "Child plan Creation test",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-31T23:23:39+00:00",
                                                    "email": "sujay-harrison-non-first-bcd-test@gmail.com",
                                                    "external_customer_id": "sujay-harrison-non-first-bcd-test",
                                                    "id": "i9WqeaKzZCnvdYpk",
                                                    "name": "sujay-harrison-non-first-bcd-test",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-31T21:35:10+00:00",
                                                    "email": "kshitijsujay-test2@gmail.com",
                                                    "external_customer_id": "kshitijsujay-test2",
                                                    "id": "k76RFwfcyuykWRsA",
                                                    "name": "kshitijsujay test2",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-31T21:31:16+00:00",
                                                    "email": "sujaykshitij@test.com",
                                                    "external_customer_id": "sujaykshitij-test",
                                                    "id": "2oKpTtSxcWby4NPf",
                                                    "name": "sujaykshitij test",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-31T16:35:15+00:00",
                                                    "email": "future-sujay@gmail.com",
                                                    "external_customer_id": "future-sujay",
                                                    "id": "muaLnSH3W9HShrwi",
                                                    "name": "Future Sujay",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-31T06:41:11+00:00",
                                                    "email": "sujay-non-first@bcd.test",
                                                    "external_customer_id": "sujay-non-first-bcd-test",
                                                    "id": "EoYFThcx8PL7PbaU",
                                                    "name": "Sujay NonFirst BCD Test",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-25T23:06:26+00:00",
                                                    "email": "real@test.com",
                                                    "external_customer_id": "real-in-arrear-test",
                                                    "id": "WwioHRm6xKBJZFc8",
                                                    "name": "The Real In-Arrear Test",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-25T23:00:47+00:00",
                                                    "email": "sujay-real-in-arrear@test.com",
                                                    "external_customer_id": "sujay-real-in-arrear",
                                                    "id": "bXY2QtivPUMTZoXn",
                                                    "name": "Sujay-Real In Arrear Test",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-25T22:54:32+00:00",
                                                    "email": "sujay-inarrear@sujay.com",
                                                    "external_customer_id": "sujay-inarrear",
                                                    "id": "2i9uPdxE9CD7Xhof",
                                                    "name": "Sujay InArrear Test",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-25T17:51:23+00:00",
                                                    "email": "sujay-minimum@sujay.com",
                                                    "external_customer_id": "sujay-minimum",
                                                    "id": "f54AJtLCjZmpRx8P",
                                                    "name": "SujayMinimumTest",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-23T22:36:11+00:00",
                                                    "email": "dupe@dupe.com",
                                                    "external_customer_id": "sujay-sub-test",
                                                    "id": "6gzTmS44o2sdU5bN",
                                                    "name": "Sujay KBCreateSubDupe Test",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-22T21:33:12+00:00",
                                                    "email": "test@test.com",
                                                    "external_customer_id": "sujay-same-day-cancel",
                                                    "id": "RLBMpizTWSs8r97N",
                                                    "name": "Sujay SameDay Immediate",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-22T01:54:44+00:00",
                                                    "email": "testcustomer@withorb.com",
                                                    "external_customer_id": null,
                                                    "id": "bvvZyrTycYQ7F4eq",
                                                    "name": "Test customer in trial",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-21T23:58:55+00:00",
                                                    "email": "sujay@immediatecancel.com",
                                                    "external_customer_id": "sujayimmediate",
                                                    "id": "aRkBNCZ8b8Raj5BR",
                                                    "name": "Sujay Immediate Cancel Test",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-08T23:05:20+00:00",
                                                    "email": "team@withorb.com",
                                                    "external_customer_id": null,
                                                    "id": "6Cq3WrLP3uwgTbCC",
                                                    "name": "Hourly Deductions QA",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-04T22:27:16+00:00",
                                                    "email": "harrison@withorb.com",
                                                    "external_customer_id": null,
                                                    "id": "WJpamEbeScjbTb2i",
                                                    "name": "Trial Customer",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-03-02T21:27:02+00:00",
                                                    "email": "team@withorb.com",
                                                    "external_customer_id": null,
                                                    "id": "WDZ7iFWY2nT37s3q",
                                                    "name": "Test Cancel And Create",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": {
                                                        "city": "San Jose",
                                                        "country": "US",
                                                        "line1": "2910 Cryptocon Way",
                                                        "line2": null,
                                                        "postal_code": null,
                                                        "state": "CA"
                                                    },
                                                    "timezone": "America/Los_Angeles"
                                                },
                                                {
                                                    "billing_address": null,
                                                    "created_at": "2022-02-25T18:37:35+00:00",
                                                    "email": "harrison@withorb.com",
                                                    "external_customer_id": "no-sub-update",
                                                    "id": "CZ67xXX252NYUmha",
                                                    "name": "Update Customer",
                                                    "payment_provider": null,
                                                    "payment_provider_id": null,
                                                    "shipping_address": null,
                                                    "timezone": "America/Los_Angeles"
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "bqyABXeP3c6aTi6S"
                                            }
                                        }
                                    },
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 0,
                                            "items": {
                                                "$ref": "#/components/schemas/Customer"
                                            },
                                            "readOnly": true
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "required": [
                                                "has_more",
                                                "next_cursor"
                                            ],
                                            "properties": {
                                                "has_more": {
                                                    "type": "boolean"
                                                },
                                                "next_cursor": {
                                                    "type": "string",
                                                    "minLength": 1
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "pagination_metadata"
                                    ]
                                }
                            }
                        }
                    }
                },
                "operationId": "get-customers",
                "description": "\n\nThis endpoint returns a list of all customers for an account. The list of customers is ordered starting from the most recently created customer. This endpoint follows Orb's [standardized pagination format](../docs/Pagination.md).\n\nSee [Customer](../reference/Orb-API.json/components/schemas/Customer) for an overview of the customer model."
            },
            "post": {
                "summary": "Create customer",
                "operationId": "post-customers",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-examples": {
                                    "example-1": {
                                        "name": "Moon Microsystems, Inc.",
                                        "email": "larry@moon.com",
                                        "timezone": "America/New_York",
                                        "payment_provider_id": "cus_81fz3febyT2iMk",
                                        "payment_provider": "stripe"
                                    }
                                },
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "The full name of the customer"
                                    },
                                    "email": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "A valid customer email, to be used for invoicing and notifications."
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "A timezone identifier from the IANA timezone database, such as \"America/Los_Angeles\". This defaults to your account's timezone if not set. This cannot be changed after customer creation.",
                                        "example": "Etc/UTC",
                                        "default": "UTC"
                                    },
                                    "payment_provider_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 1,
                                        "description": "The ID of this customer in an external payments solution, such as Stripe. This is used for creating charges or invoices in the external system via Orb."
                                    },
                                    "payment_provider": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 1,
                                        "enum": [
                                            "quickbooks",
                                            "bill.com",
                                            "stripe_charge",
                                            "stripe_invoice"
                                        ],
                                        "default": null,
                                        "description": "This is used for creating charges or invoices in an external system via Orb. When not in test mode:\n- the connection must first be configured in the Orb webapp. \n- if the provider is an invoicing provider (`stripe_invoice`, `quickbooks`, `bill.com`), any product mappings must first be configured with the Orb team."
                                    },
                                    "external_customer_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "An optional user-defined ID for this customer resource, used throughout the system as an alias for this Customer. Use this field to identify a customer by an existing identifier in your system."
                                    },
                                    "shipping_address": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "The customer's shipping address; all fields in the address are optional. Note that downstream tax calculations are based on the shipping address.",
                                        "additionalProperties": false,
                                        "properties": {
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string",
                                                "description": "Two-letter country code (ISO 3166-1 alpha-2).",
                                                "example": "US"
                                            },
                                            "line1": {
                                                "type": "string"
                                            },
                                            "line2": {
                                                "type": "string"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "description": "ZIP or postal code"
                                            },
                                            "state": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "billing_address": {
                                        "type": [
                                            "object",
                                            "null"
                                        ],
                                        "description": "The customer's billing address; all fields in the address are optional. This address appears on customer invoices.",
                                        "additionalProperties": false,
                                        "properties": {
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string",
                                                "description": "Two-letter country code (ISO 3166-1 alpha-2).",
                                                "example": "US"
                                            },
                                            "line1": {
                                                "type": "string"
                                            },
                                            "line2": {
                                                "type": "string"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "description": "ZIP or postal code"
                                            },
                                            "state": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "currency": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "An ISO 4217 currency string used for the customer's invoices and balance. If not set at creation time, will be set at subscription creation time."
                                    },
                                    "tax_id": {
                                        "$ref": "#/components/schemas/Customer-tax-id",
                                        "description": "The tax ID details used to display on the customer's invoice."
                                    },
                                    "auto_collection": {
                                        "type": "boolean",
                                        "description": "Used to determine if invoices for this customer will automatically attempt to charge a saved payment method, if available. This parameter defaults to `True` when a payment provider is provided on customer creation."
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "x-stoplight": {
                                            "id": "op3oopgpybpoh"
                                        },
                                        "description": "User-specified key value pairs, often useful for referencing internal resources or IDs. Returned as-is in the customer resource."
                                    }
                                },
                                "required": [
                                    "name",
                                    "email"
                                ]
                            },
                            "examples": {
                                "example-1": {
                                    "value": {
                                        "name": "string",
                                        "email": "string",
                                        "timezone": "Etc/UTC",
                                        "payment_provider_id": "string",
                                        "payment_provider": "stripe",
                                        "external_customer_id": "string",
                                        "shipping_address": {
                                            "city": "string",
                                            "country": "US",
                                            "line1": "string",
                                            "line2": "string",
                                            "postal_code": "string",
                                            "state": "string"
                                        },
                                        "billing_address": {
                                            "city": "string",
                                            "country": "US",
                                            "line1": "string",
                                            "line2": "string",
                                            "postal_code": "string",
                                            "state": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "Customer"
                ],
                "description": "This operation is used to create an Orb customer, who is party to the core billing relationship. See [Customer](../reference/Orb-API.json/components/schemas/Customer) for an overview of the customer resource.\n\nThis endpoint is critical in the following Orb functionality:\n* Automated charges can be configured by setting `payment_provider` and `payment_provider_id` to automatically issue invoices\n* [Customer ID Aliases](../docs/Customer-ID-Aliases.md) can be configured by setting `external_customer_id`\n* [Timezone localization](../docs/Timezone-localization.md) can be configured on a per-customer basis by setting the `timezone` parameter"
            },
            "parameters": []
        },
        "/customers/{customer_id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "customer_id",
                    "in": "path",
                    "required": true,
                    "description": "Orb customer ID"
                }
            ],
            "put": {
                "summary": "Update customer",
                "operationId": "put-customers-customer_id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint can be used to update the `payment_provider`, `payment_provider_id`, `name`, `email`, `email_delivery`, `auto_collection`, `shipping_address`, and `billing_address` of an existing customer.\n\nOther fields on a customer are currently immutable.",
                "tags": [
                    "Customer"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "The external payments or invoicing solution connected to this customer.",
                                "properties": {
                                    "payment_provider": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "This is used for creating charges or invoices in an external system via Orb. When not in test mode:\n- the connection must first be configured in the Orb webapp. \n- if the provider is an invoicing provider (`stripe_invoice`, `quickbooks`, `bill.com`), any product mappings must first be configured with the Orb team.",
                                        "enum": [
                                            "stripe_invoice",
                                            "quickbooks",
                                            "bill.com",
                                            "stripe_charge"
                                        ]
                                    },
                                    "payment_provider_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "The ID of this customer in an external payments solution, such as Stripe. This is used for creating charges or invoices in the external system via Orb."
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "A valid customer email, to be used for invoicing and notifications."
                                    },
                                    "billing_address": {
                                        "type": [
                                            "null",
                                            "object"
                                        ],
                                        "description": "The customer's billing address; all fields in the address are optional. This address appears on customer invoices.",
                                        "properties": {
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string",
                                                "description": "Two-letter country code (ISO 3166-1 alpha-2).",
                                                "example": "US"
                                            },
                                            "line1": {
                                                "type": "string"
                                            },
                                            "line2": {
                                                "type": "string"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "description": "ZIP or postal code"
                                            },
                                            "state": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "shipping_address": {
                                        "type": [
                                            "null",
                                            "object"
                                        ],
                                        "description": "The customer's shipping address; all fields in the address are optional. Note that downstream tax calculations are based on the shipping address.",
                                        "properties": {
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string",
                                                "description": "Two-letter country code (ISO 3166-1 alpha-2).",
                                                "example": "US"
                                            },
                                            "line1": {
                                                "type": "string"
                                            },
                                            "line2": {
                                                "type": "string"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "description": "ZIP or postal code"
                                            },
                                            "state": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "tax_id": {
                                        "$ref": "#/components/schemas/Customer-tax-id",
                                        "description": "The tax ID details used to display on the customer's invoice."
                                    },
                                    "auto_collection": {
                                        "type": "boolean",
                                        "description": "Auto collection behavior determines whether the payment method will automatically be charged for issued invoices. This field cannot be updated to `True` if the customer does not have a payment provider linked."
                                    },
                                    "email_delivery": {
                                        "type": "boolean",
                                        "description": "Determines whether Orb will send automated emails to this customer. This setting is superseded by the account-wide email setting for email delivery."
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "x-stoplight": {
                                            "id": "cxl5qnbtfp9su"
                                        },
                                        "description": "User-specified key value pairs, often useful for referencing internal resources or IDs. Returned as-is in the customer resource."
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                }
            },
            "get": {
                "summary": "Retrieve a customer",
                "operationId": "get-customers-customer_id",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                },
                                "examples": {
                                    "example-1": {
                                        "value": {
                                            "id": "UFHPn8Es9sctYH5k",
                                            "name": "Moon Microsystems, Inc.",
                                            "email": "larry@moon.com",
                                            "timezone": "America/New_York",
                                            "payment_provider_id": "cus_81fz2febyT2iMk",
                                            "payment_provider": "stripe",
                                            "created_at": "2021-07-30T17:10:08.000000"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint is used to fetch customer details given an identifier. If the `Customer` is in the process of being deleted, only the properties `id` and `deleted: true` will be returned.\n\nSee the [Customer resource](Orb-API.json/components/schemas/Customer) for a full discussion of the Customer model.\n",
                "tags": [
                    "Customer"
                ]
            },
            "delete": {
                "summary": "Delete a customer",
                "operationId": "delete-customers-customer_id",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "description": "This performs a deletion of this customer, its subscriptions, and its invoices. This operation is irreversible. Note that this is a _soft_ deletion, but the data will be inaccessible through the API and Orb dashboard. For hard-deletion, please reach out to the Orb team directly.\n\n**Note**: This operation happens asynchronously and can be expected to take a few minutes to propagate to related resources. However, querying for the customer on subsequent GET requests while deletion is in process will reflect its deletion with a `deleted: true` property. Once the customer deletion has been fully processed, the customer will not be returned in the API.",
                "tags": [
                    "Customer"
                ]
            }
        },
        "/ping": {
            "get": {
                "summary": "Check availability",
                "tags": [
                    "Availability"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "",
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "string",
                                            "minLength": 1
                                        }
                                    },
                                    "required": [
                                        "response"
                                    ],
                                    "x-examples": {
                                        "example-1": {
                                            "response": "pong"
                                        }
                                    }
                                },
                                "examples": {
                                    "Successful ping response": {
                                        "value": {
                                            "response": "pong"
                                        }
                                    },
                                    "Invalid authorization": {
                                        "value": {
                                            "code": "authorization_header_invalid",
                                            "description": "Invalid API Key"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-ping",
                "description": "This endpoint allows you to test your connection to the Orb API and check the validity of your API key, passed in the `Authorization` header. This is particularly useful for checking that your environment is set up properly, and is a great choice for connectors and integrations.\n\nThis API does not have any side-effects or return any Orb resources.",
                "parameters": []
            }
        },
        "/customers/{customer_id}/credits": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "customer_id",
                    "in": "path",
                    "required": true,
                    "description": "The Orb Customer ID"
                }
            ],
            "get": {
                "summary": "Retrieve credit balance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "",
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "data": [
                                                {
                                                    "balance": 1.472228333333333,
                                                    "expiry_date": null,
                                                    "id": "Pqe5m4sACcZRHjaw",
                                                    "per_unit_cost_basis": null
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": false,
                                                "next_cursor": null
                                            }
                                        }
                                    },
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 0,
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "balance": {
                                                        "type": "number",
                                                        "description": "Remaining credits in this block"
                                                    },
                                                    "expiry_date": {
                                                        "type": [
                                                            "null",
                                                            "string"
                                                        ],
                                                        "description": "An ISO 8601 format date with a timezone offset that represents when this block of credits is no longer usable.",
                                                        "example": "2022-12-28T08:00:00+00:00",
                                                        "format": "date-time"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "minLength": 1
                                                    },
                                                    "per_unit_cost_basis": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "How much, in USD, a customer paid for a single credit in this block"
                                                    }
                                                },
                                                "required": [
                                                    "balance",
                                                    "expiry_date",
                                                    "id",
                                                    "per_unit_cost_basis"
                                                ]
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "required": [
                                                "has_more"
                                            ],
                                            "properties": {
                                                "has_more": {
                                                    "type": "boolean"
                                                },
                                                "next_cursor": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "pagination_metadata"
                                    ]
                                },
                                "examples": {
                                    "Example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "balance": 5,
                                                    "expiry_date": "2021-12-05T00:00:00+00:00",
                                                    "id": "jdus8ldncms4g7js",
                                                    "per_unit_cost_basis": "0.20"
                                                },
                                                {
                                                    "balance": 10,
                                                    "expiry_date": null,
                                                    "id": "8fdu10odp13fjncD",
                                                    "per_unit_cost_basis": null
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-customers-customer_id-credits",
                "description": "This [paginated endpoint](../docs/Pagination.md) can be used to fetch the current state of credit balance for the specified `customer_id`.\n\nOrb keeps track of credit balances in _credit blocks_, where each block is optionally associated with an `expiry_date`. Each time credits are added, a new credit block is created. Credits which do not expire have an `expiry_date` of `null`. To aid in revenue recognition, credit blocks can optionally have a `per_unit_cost_basis`, to indicate how much in USD a customer paid for a single credit in a block.\n\nOrb only returns _unexpired_ credit blocks in this response. For credits that have already expired, you can view this deduction from the customer's balance in the [Credit Ledger](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1credits~1ledger/get) response.",
                "tags": [
                    "Credits"
                ]
            }
        },
        "/customers/{external_customer_id}/credits": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "external_customer_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "Retrieve credit balance by external customer ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "",
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "data": [
                                                {
                                                    "balance": 1.472228333333333,
                                                    "expiry_date": null,
                                                    "id": "Pqe5m4sACcZRHjaw",
                                                    "per_unit_cost_basis": null
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": false,
                                                "next_cursor": null
                                            }
                                        }
                                    },
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 0,
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "balance": {
                                                        "type": "number",
                                                        "description": "Remaining credits in this block"
                                                    },
                                                    "expiry_date": {
                                                        "type": [
                                                            "null",
                                                            "string"
                                                        ],
                                                        "description": "An ISO 8601 format date with a timezone offset that represents when this block of credits is no longer usable.",
                                                        "example": "2022-12-28T08:00:00+00:00",
                                                        "format": "date-time"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "minLength": 1
                                                    },
                                                    "per_unit_cost_basis": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "description": "How much, in USD, a customer paid for a single credit in this block"
                                                    }
                                                },
                                                "required": [
                                                    "balance",
                                                    "expiry_date",
                                                    "id",
                                                    "per_unit_cost_basis"
                                                ]
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "required": [
                                                "has_more"
                                            ],
                                            "properties": {
                                                "has_more": {
                                                    "type": "boolean"
                                                },
                                                "next_cursor": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "pagination_metadata"
                                    ]
                                },
                                "examples": {
                                    "Example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "balance": 5,
                                                    "expiry_date": "2021-12-05T00:00:00+00:00",
                                                    "id": "jdus8ldncms4g7js",
                                                    "per_unit_cost_basis": "0.20"
                                                },
                                                {
                                                    "balance": 10,
                                                    "expiry_date": null,
                                                    "id": "8fdu10odp13fjncD",
                                                    "per_unit_cost_basis": null
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-customers-external_customer_id-credits",
                "description": "This endpoint's resource and semantics exactly mirror [Retrieve credit balance](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1credits/get) but operates on an [external customer ID](../docs/Customer-ID-Aliases.md) rather than an Orb issued identifier.",
                "tags": [
                    "Credits"
                ]
            }
        },
        "/customers/{customer_id}/costs": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "customer_id",
                    "in": "path",
                    "required": true,
                    "description": "The Orb Customer ID"
                }
            ],
            "get": {
                "summary": "View customer costs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "",
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "data": [
                                                {
                                                    "balance": 1.472228333333333,
                                                    "expiry_date": null,
                                                    "id": "Pqe5m4sACcZRHjaw",
                                                    "per_unit_cost_basis": null
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": false,
                                                "next_cursor": null
                                            }
                                        }
                                    },
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 0,
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "subtotal": {
                                                        "type": "string",
                                                        "description": "Total costs for the timeframe, excluding minimums and discounts."
                                                    },
                                                    "total": {
                                                        "type": "string",
                                                        "description": "Total costs for the timeframe, including minimums and discounts."
                                                    },
                                                    "timeframe_start": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "timeframe_end": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "per_price_costs": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "description": "Price's contributions for the timeframe, excluding any transforms (minimums and discounts).",
                                                            "properties": {
                                                                "subtotal": {
                                                                    "type": "string",
                                                                    "description": "Price's contributions for the timeframe, excluding any minimums and discounts."
                                                                },
                                                                "total": {
                                                                    "type": "string",
                                                                    "description": "Price's contributions for the timeframe, including any minimums and discounts."
                                                                },
                                                                "price": {
                                                                    "$ref": "#/components/schemas/Price"
                                                                },
                                                                "price_groups": {
                                                                    "type": "array",
                                                                    "description": "If a `group_by` attribute is passed in, array of costs per `grouping_key`, `grouping_value` or `secondary_grouping_key`, `secondary_grouping_value`.",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "grouping_key": {
                                                                                "type": "string",
                                                                                "description": "Grouping key to break down a single price's costs"
                                                                            },
                                                                            "grouping_value": {
                                                                                "type": "string"
                                                                            },
                                                                            "secondary_grouping_key": {
                                                                                "type": "string",
                                                                                "description": "If the price is a matrix price, this is the second dimension key"
                                                                            },
                                                                            "secondary_grouping_value": {
                                                                                "type": "string"
                                                                            },
                                                                            "total": {
                                                                                "type": "string",
                                                                                "description": "Total costs for this group for the timeframe. Note that this does not account for any minimums or discounts."
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "grouping_key",
                                                                            "grouping_value",
                                                                            "total"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "required": [
                                                                "price_groups"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "subtotal",
                                                    "total",
                                                    "timeframe_start",
                                                    "timeframe_end",
                                                    "per_price_costs"
                                                ]
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "pagination_metadata"
                                    ]
                                },
                                "examples": {
                                    "Example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "subtotal": "50.00",
                                                    "total": "100.00",
                                                    "timeframe_start": "2023-05-01T00:00:00Z",
                                                    "timeframe_end": "2023-05-02T00:00:00Z",
                                                    "per_price_costs": [
                                                        {
                                                            "subtotal": "23.00",
                                                            "total": "50.00",
                                                            "price": {
                                                                "billable_metric": {
                                                                    "id": "dUmCTVBzan14PeDs"
                                                                },
                                                                "cadence": "monthly",
                                                                "created_at": "2021-07-18T15:45:03.0000+00:00",
                                                                "id": "RtpDt57Uug2mJeNK",
                                                                "model_type": "unit",
                                                                "name": "Usage Fee",
                                                                "unit_config": {
                                                                    "unit_amount": "100.00"
                                                                },
                                                                "plan_phase_order": null
                                                            },
                                                            "price_groups": [
                                                                {
                                                                    "grouping_key": "cluster",
                                                                    "grouping_value": "us-east-1",
                                                                    "total": "15"
                                                                },
                                                                {
                                                                    "grouping_key": "cluster",
                                                                    "grouping_value": "us-west-2",
                                                                    "total": "2"
                                                                },
                                                                {
                                                                    "grouping_key": "cluster",
                                                                    "grouping_value": "ap-south-1",
                                                                    "total": "6"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-customer-costs",
                "description": "This endpoint is used to fetch a day-by-day snapshot of a customer's costs in Orb, calculated by applying pricing information to the underlying usage (see the [subscription usage endpoint](../reference/Orb-API.json/paths/~1subscriptions~1{subscription_id}~1usage/get) to fetch usage per metric, in usage units rather than a currency). \n\nThis endpoint can be leveraged for internal tooling and to provide a more transparent billing experience for your end users:\n\n1. Understand the cost breakdown per line item historically and in real-time for the current billing period. \n2. Provide customer visibility into how different services are contributing to the overall invoice with a per-day timeseries (as compared to the [upcoming invoice](../reference/Orb-API.json/paths/~1invoices~1upcoming/get) resource, which represents a snapshot for the current period).\n3. Assess how minimums and discounts affect your customers by teasing apart costs directly as a result of usage, as opposed to minimums and discounts at the plan and price level.\n4. Gain insight into key customer health metrics, such as the percent utilization of the minimum committed spend.\n\n## Fetching subscriptions\nBy default, this endpoint fetches the currently active subscription for the customer, and returns cost information for the subscription's current billing period, broken down by each participating price. If there are no currently active subscriptions, this will instead default to the most recently active subscription or return an empty series if none are found. For example, if your plan charges for compute hours, job runs, and data syncs, then this endpoint would provide a daily breakdown of your customer's cost for each of those axes.\n\nIf timeframe bounds are specified, Orb fetches all subscriptions that were active in that timeframe. If two subscriptions overlap on a single day, costs from each price will be summed, and prices for both subscriptions will be included in the breakdown.\n\n\n## Prepaid plans\nFor plans that include prices which deduct credits rather than accrue in-arrears charges in a billable currency, this endpoint will return the total deduction amount, in credits, for the specified timeframe. \n\n\n## Cumulative subtotals and totals\n\nSince the subtotal and total must factor in any billing-period level discounts and minimums, it's most meaningful to consider costs relative to the start of the subscription's billing period. As a result, by default this endpoint returns cumulative totals since the beginning of the billing period. In particular, the `timeframe_start` of a returned timeframe window is *always* the beginning of the billing period and `timeframe_end` is incremented one day at a time to build the result.\n\nA customer that uses a few API calls a day but has a minimum commitment might exhibit the following pattern for their subtotal and total in the first few days of the month. Here, we assume that each API call is $2.50, the customer's plan has a monthly minimum of $50 for this price, and that the subscription's billing period bounds are aligned to the first of the month:\n\n| timeframe_start | timeframe_end | Cumulative usage | Subtotal | Total (incl. commitment)  |\n| -----------| ----------- | ----------- | ----------- |----------- |\n| 2023-02-01 | 2023-02-02 | 9 | $22.50 | $50.00 |\n| 2023-02-01 | 2023-02-03 | 19 | $47.50 | $50.00 |\n| 2023-02-01 | 2023-02-04 | 20 | $50.00 | $50.00 |\n| 2023-02-01 | 2023-02-05 | 28 | $70.00 | $70.00 |\n| 2023-02-01 | 2023-02-06 | 36 | $90.00 | $90.00 |\n\n\n### Periodic values\nWhen the query parameter `view_mode=periodic` is specified, Orb will return an incremental day-by-day view of costs. In this case, there will always be a one-day difference between `timeframe_start` and `timeframe_end` for the timeframes returned. This is a transform on top of the cumulative costs, calculated by taking the difference of each timeframe with the last. Note that in the above example, the `Total` value would be 0 for the second two data points, since the minimum commitment has not yet been hit and each day is not contributing anything to the total cost.\n\n## Timeframe bounds\nIf no timeframe bounds are specified, the response will default to the current billing period for the customer's subscription. For subscriptions that have ended, this will be the billing period when they were last active. If the subscription starts or ends within the timeframe, the response will only include windows where the subscription is active.\n \nAs noted above, `timeframe_start` for a given cumulative datapoint is always the beginning of the billing period, and `timeframe_end` is incremented one day at a time to construct the response. When a timeframe is passed in that is not aligned to the current subscription's billing period, the response will contain cumulative totals from multiple billing periods.\n\nSuppose the queried customer has a subscription aligned to the 15th of every month. If this endpoint is queried with the date range `2023-06-01` - `2023-07-01`, the first data point will represent about half a billing period's worth of costs, accounting for accruals from the start of the billing period and inclusive of the first day of the timeframe (`timeframe_start = 2023-05-15 00:00:00`, `timeframe_end = 2023-06-02 00:00:00`)\n\n| datapoint index | timeframe_start | timeframe_end |\n| ----------- | -----------| ----------- |\n| 0 | 2023-05-15 | 2023-06-02 |\n| 1 | 2023-05-15 | 2023-06-03 |\n| 2 | ... | ... |\n| 3 | 2023-05-15 | 2023-06-14 |\n| 4 | 2023-06-15 | 2023-06-16 |\n| 5 | 2023-06-15 | 2023-06-17 |\n| 6 | ... | ... |\n| 7 | 2023-06-15 | 2023-07-01 |\n\nYou can see this sliced timeframe visualized [here](https://i.imgur.com/TXhYgme.png).\n\n## Grouping by custom attributes\nIn order to view costs grouped by a specific _attribute_ that each event is tagged with (i.e. `cluster`), you can additionally specify a `group_by` key. The `group_by` key denotes the event property on which to group.\n\nWhen returning grouped costs, a separate `price_group` object in the `per_price_costs` array is returned for each value of the `group_by` key present in your events. The `subtotal` value of the `per_price_costs` object is the sum of each `price_group`'s total. \n\nOrb expects events will contain values in the `properties` dictionary that correspond to the `group_by` key specified. By default, Orb will return a `null` group (i.e. events that match the metric but do not have the key set). Currently, it is only possible to view costs grouped by a single attribute at a time.\n\n### Matrix prices\nWhen a price uses matrix pricing, it's important to view costs grouped by those matrix dimensions. Orb will return `price_groups` with the `grouping_key` and `secondary_grouping_key` based on the matrix price definition, for each `grouping_value` and `secondary_grouping_value` available.\n",
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2022-02-01T05:00:00Z"
                        },
                        "in": "query",
                        "name": "timeframe_start",
                        "description": "Costs returned are inclusive of `timeframe_start`."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "example": "2022-03-01T05:00:00Z"
                        },
                        "in": "query",
                        "name": "timeframe_end",
                        "description": "Costs returned are exclusive of `timeframe_end`."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "periodic",
                                "cumulative"
                            ],
                            "default": "cumulative"
                        },
                        "in": "query",
                        "name": "view_mode",
                        "description": "Controls whether Orb returns cumulative costs since the start of the billing period, or incremental day-by-day costs. If your customer has minimums or discounts, it's strongly recommended that you use the default cumulative behavior."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "group_by",
                        "description": "Groups per-price costs by the key provided."
                    }
                ]
            }
        },
        "/customers/external_customer_id/{external_customer_id}/costs": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "external_customer_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View customer costs by external customer ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "",
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "data": [
                                                {
                                                    "balance": 1.472228333333333,
                                                    "expiry_date": null,
                                                    "id": "Pqe5m4sACcZRHjaw",
                                                    "per_unit_cost_basis": null
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": false,
                                                "next_cursor": null
                                            }
                                        }
                                    },
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 0,
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "subtotal": {
                                                        "type": "string",
                                                        "description": "Total costs for the timeframe, excluding minimums and discounts."
                                                    },
                                                    "total": {
                                                        "type": "string",
                                                        "description": "Total costs for the timeframe, including minimums and discounts."
                                                    },
                                                    "timeframe_start": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "timeframe_end": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "per_price_costs": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "description": "Price's contributions for the timeframe, excluding any transforms (minimums and discounts).",
                                                            "properties": {
                                                                "subtotal": {
                                                                    "type": "string",
                                                                    "description": "Price's contributions for the timeframe, excluding any minimums and discounts."
                                                                },
                                                                "total": {
                                                                    "type": "string",
                                                                    "description": "Price's contributions for the timeframe, including any minimums and discounts."
                                                                },
                                                                "price": {
                                                                    "$ref": "#/components/schemas/Price"
                                                                },
                                                                "price_groups": {
                                                                    "type": "array",
                                                                    "description": "If a `group_by` attribute is passed in, array of costs per `grouping_key`, `grouping_value` or `secondary_grouping_key`, `secondary_grouping_value`.",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "grouping_key": {
                                                                                "type": "string",
                                                                                "description": "Grouping key to break down a single price's costs"
                                                                            },
                                                                            "grouping_value": {
                                                                                "type": "string"
                                                                            },
                                                                            "secondary_grouping_key": {
                                                                                "type": "string",
                                                                                "description": "If the price is a matrix price, this is the second dimension key"
                                                                            },
                                                                            "secondary_grouping_value": {
                                                                                "type": "string"
                                                                            },
                                                                            "total": {
                                                                                "type": "string",
                                                                                "description": "Total costs for this group for the timeframe. Note that this does not account for any minimums or discounts."
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "grouping_key",
                                                                            "grouping_value",
                                                                            "total"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "required": [
                                                                "price_groups"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "subtotal",
                                                    "total",
                                                    "timeframe_start",
                                                    "timeframe_end",
                                                    "per_price_costs"
                                                ]
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "pagination_metadata"
                                    ]
                                },
                                "examples": {
                                    "example-1": {
                                        "value": {
                                            "data": [
                                                {
                                                    "subtotal": "50.00",
                                                    "total": "100.00",
                                                    "timeframe_start": "2023-05-01T00:00:00Z",
                                                    "timeframe_end": "2023-05-02T00:00:00Z",
                                                    "per_price_costs": [
                                                        {
                                                            "subtotal": "23.00",
                                                            "total": "50.00",
                                                            "price": {
                                                                "billable_metric": {
                                                                    "id": "dUmCTVBzan14PeDs"
                                                                },
                                                                "cadence": "monthly",
                                                                "created_at": "2021-07-18T15:45:03.0000+00:00",
                                                                "id": "RtpDt57Uug2mJeNK",
                                                                "model_type": "unit",
                                                                "name": "Usage Fee",
                                                                "unit_config": {
                                                                    "unit_amount": "100.00"
                                                                },
                                                                "plan_phase_order": null
                                                            },
                                                            "price_groups": [
                                                                {
                                                                    "grouping_key": "cluster",
                                                                    "grouping_value": "us-east-1",
                                                                    "total": "15"
                                                                },
                                                                {
                                                                    "grouping_key": "cluster",
                                                                    "grouping_value": "us-west-2",
                                                                    "total": "2"
                                                                },
                                                                {
                                                                    "grouping_key": "cluster",
                                                                    "grouping_value": "ap-south-1",
                                                                    "total": "6"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-customer-costs",
                "description": "This endpoint's resource and semantics exactly mirror [View customer costs](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1costs/get) but operates on an [external customer ID](../docs/Customer-ID-Aliases.md) rather than an Orb issued identifier.",
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2022-02-01T05:00:00Z"
                        },
                        "in": "query",
                        "name": "timeframe_start",
                        "description": "Costs returned are inclusive of `timeframe_start`."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "example": "2022-03-01T05:00:00Z"
                        },
                        "in": "query",
                        "name": "timeframe_end",
                        "description": "Costs returned are exclusive of `timeframe_end`."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "periodic",
                                "cumulative"
                            ],
                            "default": "cumulative"
                        },
                        "in": "query",
                        "name": "view_mode",
                        "description": "Controls whether Orb returns cumulative costs since the start of the billing period, or incremental day-by-day costs. If your customer has minimums or discounts, it's strongly recommended that you use the default cumulative behavior."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "group_by",
                        "description": "Groups per-price costs by the key provided."
                    }
                ]
            }
        },
        "/customers/{customer_id}/credits/ledger": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "customer_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View credits ledger",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "",
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "data": [
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:17:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "9adqfA7J7ddBkBJR",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "176710f7-5805-4f58-b7d6-075219cc1303",
                                                    "id": "552fa4e94c3136df",
                                                    "ledger_sequence_number": 276263,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 146
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:17:42+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "akEtc9NR8ZYiHBUh",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 146,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "15cc9146662e039b",
                                                    "ledger_sequence_number": 276262,
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:16:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "QFCG8zYHBmAR6CKr",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "4eb9d4acec49e3bd",
                                                    "ledger_sequence_number": 276261,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:16:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "YYtesfp4WFssCxfA",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "d366a268-4ff1-437c-b2c8-8c06ac57197e",
                                                    "id": "87d2e7d79520c7c2",
                                                    "ledger_sequence_number": 276260,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:15:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "XGefAv8kBAJyc5VR",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "3b8ff9f70d80a2ce",
                                                    "ledger_sequence_number": 276259,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:15:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "KUr8wWtVeQbEnbTv",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "57e5a2a6-6754-481a-aee0-ac855fa9ccdb",
                                                    "id": "5620cf601d57a57f",
                                                    "ledger_sequence_number": 276258,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:14:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "QuguTSutyti7GrSG",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "e6830cda-d1b3-4e6d-a320-3e85a3ac3fea",
                                                    "id": "8ca45b541b09adfd",
                                                    "ledger_sequence_number": 276257,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 146
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:14:42+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "BWEzgfHcniDZsXb6",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 146,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "146a70707b4bb2a7",
                                                    "ledger_sequence_number": 276256,
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:13:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "N5hbKRWWAoqwmUbC",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "f3179bbaae38df38",
                                                    "ledger_sequence_number": 276255,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:13:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "hyLWazu4XdomEY2E",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "b9efb1c1-86e4-40bd-ad45-30b732e2de29",
                                                    "id": "3e65b669fde09881",
                                                    "ledger_sequence_number": 276254,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:12:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "ZwodVk8WYJZs8fbn",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "14e780fa7e3cbaa8",
                                                    "ledger_sequence_number": 276253,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:12:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "PdpW88cfXRPgVyJK",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "023b8916-6b78-4933-b183-e6fd0f400ccf",
                                                    "id": "aa5e4a385e02e91a",
                                                    "ledger_sequence_number": 276252,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:11:44+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "ZGcpQzBNZZTp4ZT8",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "31fe7ab2-8160-4867-99f5-d22798941169",
                                                    "id": "3850f841fefa9282",
                                                    "ledger_sequence_number": 276251,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 146
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:11:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "E2G99sVowjFHZLek",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 146,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "5549eab977aeb3db",
                                                    "ledger_sequence_number": 276250,
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:10:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "Gb69LXhk96eT8sRX",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "928082907d8c9613",
                                                    "ledger_sequence_number": 276249,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:10:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "mvhEtg6F9LQqqSHj",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "51cf1b7a-5bcf-4993-99cf-fb78b6cf1f2a",
                                                    "id": "da9ec35d2609d865",
                                                    "ledger_sequence_number": 276248,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:09:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "Ldoft3KRyfXCWKfE",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "dc60ba7ec949eaa2",
                                                    "ledger_sequence_number": 276247,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:09:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "ZurJFrCRMUmjEmTk",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "cb7baef5-d3b2-4f84-8f50-2c6e43ab3e43",
                                                    "id": "3582b00141532425",
                                                    "ledger_sequence_number": 276246,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:08:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "cDKGeb7CTBAC797X",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "fe17161e482ec187",
                                                    "ledger_sequence_number": 276245,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:08:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "ZhuvN9xkXtNQm8HW",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "fc26d067-eb6a-45d3-be5f-ed97bac6ebf0",
                                                    "id": "2ff712cf297c2b06",
                                                    "ledger_sequence_number": 276244,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": 276243
                                            }
                                        }
                                    },
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "items": {
                                                "$ref": "#/components/schemas/Credit-ledger-entry"
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "required": [
                                                "has_more",
                                                "next_cursor"
                                            ],
                                            "properties": {
                                                "has_more": {
                                                    "type": "boolean"
                                                },
                                                "next_cursor": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "pagination_metadata"
                                    ]
                                },
                                "examples": {
                                    "Increment example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "amount": 5,
                                                    "created_at": "2021-11-28T05:47:08+00:00",
                                                    "credit_block": {
                                                        "expiry_date": "2022-03-15T00:00:00+00:00",
                                                        "id": "cjd9s0wodlspdmv2",
                                                        "per_unit_cost_basis": "0.20"
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "external-customer-id",
                                                        "id": "UFHPn8Es9sctYH5k"
                                                    },
                                                    "description": "Spring promotion",
                                                    "ending_balance": 15,
                                                    "entry_status": "committed",
                                                    "entry_type": "increment",
                                                    "id": "J83fdo09iklop2da",
                                                    "ledger_sequence_number": 12,
                                                    "starting_balance": 10
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    },
                                    "Automatic deduction example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "amount": 4,
                                                    "created_at": "2021-11-28T05:47:08+00:00",
                                                    "credit_block": {
                                                        "expiry_date": "2022-03-15T00:00:00+00:00",
                                                        "id": "cjd9s0wodlspdmv2",
                                                        "per_unit_cost_basis": "0.20"
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "external-customer-id",
                                                        "id": "UFHPn8Es9sctYH5k"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 10,
                                                    "entry_status": "committed",
                                                    "entry_type": "decrement",
                                                    "event_id": "b4b23dc4-50df-11ec-bf63-0242ac130002",
                                                    "id": "97s4cQaFNSdKMnV8",
                                                    "ledger_sequence_number": 13,
                                                    "price_id": "7uhde3qdfKil0pod",
                                                    "starting_balance": 14
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    },
                                    "Expiration change example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "amount": 3,
                                                    "created_at": "2021-11-28T05:47:08+00:00",
                                                    "credit_block": {
                                                        "expiry_date": "2022-03-15T00:00:00+00:00",
                                                        "id": "cjd9s0wodlspdmv2",
                                                        "per_unit_cost_basis": "0.20"
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "external-customer-id",
                                                        "id": "UFHPn8Es9sctYH5k"
                                                    },
                                                    "description": "Extending trial",
                                                    "ending_balance": 14,
                                                    "entry_status": "committed",
                                                    "entry_type": "expiration_change",
                                                    "id": "97s4cQaFNSdKMnV8",
                                                    "ledger_sequence_number": 14,
                                                    "starting_balance": 14
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    },
                                    "Credit expiry example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "amount": 4,
                                                    "created_at": "2021-11-28T00:01:00+00:00",
                                                    "credit_block": {
                                                        "expiry_date": "2022-03-15T00:00:00+00:00",
                                                        "id": "cjd9s0wodlspdmv2",
                                                        "per_unit_cost_basis": "0.20"
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "external-customer-id",
                                                        "id": "UFHPn8Es9sctYH5k"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 10,
                                                    "entry_status": "committed",
                                                    "entry_type": "credit_block_expiry",
                                                    "id": "97s4cQaFNSdKMnV8",
                                                    "ledger_sequence_number": 15,
                                                    "starting_balance": 14
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-customers-customer_id-credits-ledger",
                "description": "The credits ledger provides _auditing_ functionality over Orb's credits system with a list of actions that have taken place to modify a customer's credit balance. This [paginated endpoint](../docs/Pagination.md) lists these entries, starting from the most recent ledger entry.\n\nMore details on using Orb's real-time credit feature are [here](../docs/Pre-paid-plans.md).\n\nThere are four major types of modifications to credit balance, detailed below.\n\n## Increment\nCredits (which optionally expire on a future date) can be added via the API ([Add Ledger Entry](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1credits~1ledger_entry/post)). The ledger entry for such an action will always contain the total eligible starting and ending balance for the customer at the time the entry was added to the ledger. \n\n## Decrement\n\nDeductions can occur as a result of an API call to create a ledger entry (see [Add Ledger Entry](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1credits~1ledger_entry/post)), or automatically as a result of incurring usage. Both ledger entries present the `decrement` entry type.\n\nAs usage for a customer is reported into Orb, credits may be deducted according to the customer's plan configuration. An automated deduction of this type will result in a ledger entry, also with a starting and ending balance. In order to provide better tracing capabilities for automatic deductions, Orb always associates each automatic deduction with the `event_id` at the time of ingestion, used to pinpoint _why_ credit deduction took place and to ensure that credits are never deducted without an associated usage event. \n\nBy default, Orb uses an algorithm that automatically deducts from the *soonest expiring credit block* first in order to ensure that all credits are utilized appropriately. As an example, if trial credits with an expiration date of 2 weeks from now are present for a customer, they will be used before any deductions take place from a non-expiring credit block. \n\nIf there are multiple blocks with the same expiration date, Orb will deduct from the block with the *lower cost basis* first (ex. trial credits with a $0 cost basis before paid credits with a $5.00 cost basis). \n\nIt's also possible for a single usage event's deduction to _span_ credit blocks. In this case, Orb will deduct from the next block, ending at the credit block which consists of unexpiring credits. Each of these deductions will lead to a _separate_ ledger entry, one per credit block that is deducted from. By default, the customer's total credit balance in Orb can be negative as a result of a decrement. \n\n## Expiration change\n\nThe expiry of credits can be changed as a result of the API (See [Add Ledger Entry](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1credits~1ledger_entry/post)). This will create a ledger entry that specifies the balance as well as the initial and target expiry dates. \n\nNote that for this entry type, `starting_balance` will equal `ending_balance`, and the `amount` represents the balance transferred. The credit block linked to the ledger entry is the source credit block from which there was an expiration change.\n\n\n## Credits expiry\n\nWhen a set of credits expire on pre-set expiration date, the customer's balance automatically reflects this change and adds an entry to the ledger indicating this event. Note that credit expiry should always happen close to a date boundary in the customer's timezone.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "increment",
                                "decrement",
                                "expiration_change",
                                "credit_block_expiry"
                            ]
                        },
                        "in": "query",
                        "name": "entry_type",
                        "description": "Filter to a single type of ledger entry"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "in": "query",
                        "name": "minimum_amount",
                        "description": "Filter to ledger entries that affect at least this amount"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "committed",
                                "pending"
                            ]
                        },
                        "in": "query",
                        "name": "entry_status",
                        "description": "Filters to a single status of ledger entry"
                    }
                ],
                "tags": [
                    "Credits"
                ]
            }
        },
        "/customers/{external_customer_id}/credits/ledger": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "external_customer_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View credits ledger by external customer ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "",
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "data": [
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:17:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "9adqfA7J7ddBkBJR",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "176710f7-5805-4f58-b7d6-075219cc1303",
                                                    "id": "552fa4e94c3136df",
                                                    "ledger_sequence_number": 276263,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 146
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:17:42+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "akEtc9NR8ZYiHBUh",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 146,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "15cc9146662e039b",
                                                    "ledger_sequence_number": 276262,
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:16:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "QFCG8zYHBmAR6CKr",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "4eb9d4acec49e3bd",
                                                    "ledger_sequence_number": 276261,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:16:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "YYtesfp4WFssCxfA",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "d366a268-4ff1-437c-b2c8-8c06ac57197e",
                                                    "id": "87d2e7d79520c7c2",
                                                    "ledger_sequence_number": 276260,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:15:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "XGefAv8kBAJyc5VR",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "3b8ff9f70d80a2ce",
                                                    "ledger_sequence_number": 276259,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:15:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "KUr8wWtVeQbEnbTv",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "57e5a2a6-6754-481a-aee0-ac855fa9ccdb",
                                                    "id": "5620cf601d57a57f",
                                                    "ledger_sequence_number": 276258,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:14:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "QuguTSutyti7GrSG",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "e6830cda-d1b3-4e6d-a320-3e85a3ac3fea",
                                                    "id": "8ca45b541b09adfd",
                                                    "ledger_sequence_number": 276257,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 146
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:14:42+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "BWEzgfHcniDZsXb6",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 146,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "146a70707b4bb2a7",
                                                    "ledger_sequence_number": 276256,
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:13:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "N5hbKRWWAoqwmUbC",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "f3179bbaae38df38",
                                                    "ledger_sequence_number": 276255,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:13:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "hyLWazu4XdomEY2E",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "b9efb1c1-86e4-40bd-ad45-30b732e2de29",
                                                    "id": "3e65b669fde09881",
                                                    "ledger_sequence_number": 276254,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:12:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "ZwodVk8WYJZs8fbn",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "14e780fa7e3cbaa8",
                                                    "ledger_sequence_number": 276253,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:12:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "PdpW88cfXRPgVyJK",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "023b8916-6b78-4933-b183-e6fd0f400ccf",
                                                    "id": "aa5e4a385e02e91a",
                                                    "ledger_sequence_number": 276252,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:11:44+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "ZGcpQzBNZZTp4ZT8",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "31fe7ab2-8160-4867-99f5-d22798941169",
                                                    "id": "3850f841fefa9282",
                                                    "ledger_sequence_number": 276251,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 146
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:11:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "E2G99sVowjFHZLek",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 146,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "5549eab977aeb3db",
                                                    "ledger_sequence_number": 276250,
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:10:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "Gb69LXhk96eT8sRX",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "928082907d8c9613",
                                                    "ledger_sequence_number": 276249,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:10:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "mvhEtg6F9LQqqSHj",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "51cf1b7a-5bcf-4993-99cf-fb78b6cf1f2a",
                                                    "id": "da9ec35d2609d865",
                                                    "ledger_sequence_number": 276248,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:09:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "Ldoft3KRyfXCWKfE",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "dc60ba7ec949eaa2",
                                                    "ledger_sequence_number": 276247,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:09:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "ZurJFrCRMUmjEmTk",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "cb7baef5-d3b2-4f84-8f50-2c6e43ab3e43",
                                                    "id": "3582b00141532425",
                                                    "ledger_sequence_number": 276246,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:08:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "cDKGeb7CTBAC797X",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 145,
                                                    "entry_status": "pending",
                                                    "entry_type": "increment",
                                                    "id": "fe17161e482ec187",
                                                    "ledger_sequence_number": 276245,
                                                    "starting_balance": 144
                                                },
                                                {
                                                    "amount": 1,
                                                    "created_at": "2022-05-02T04:08:43+00:00",
                                                    "credit_block": {
                                                        "expiry_date": null,
                                                        "id": "ZhuvN9xkXtNQm8HW",
                                                        "per_unit_cost_basis": null
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "creditsqa_beta_monitor",
                                                        "id": "4QYWy9UbDY8yXKKd"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 144,
                                                    "entry_status": "pending",
                                                    "entry_type": "decrement",
                                                    "event_id": "fc26d067-eb6a-45d3-be5f-ed97bac6ebf0",
                                                    "id": "2ff712cf297c2b06",
                                                    "ledger_sequence_number": 276244,
                                                    "price_id": "LUrV7Ha6soPcJLzQ",
                                                    "starting_balance": 145
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": 276243
                                            }
                                        }
                                    },
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "items": {
                                                "$ref": "#/components/schemas/Credit-ledger-entry"
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "required": [
                                                "has_more",
                                                "next_cursor"
                                            ],
                                            "properties": {
                                                "has_more": {
                                                    "type": "boolean"
                                                },
                                                "next_cursor": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "pagination_metadata"
                                    ]
                                },
                                "examples": {
                                    "Increment example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "amount": 5,
                                                    "created_at": "2021-11-28T05:47:08+00:00",
                                                    "credit_block": {
                                                        "expiry_date": "2022-03-15T00:00:00+00:00",
                                                        "id": "cjd9s0wodlspdmv2",
                                                        "per_unit_cost_basis": "0.20"
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "external-customer-id",
                                                        "id": "UFHPn8Es9sctYH5k"
                                                    },
                                                    "description": "Spring promotion",
                                                    "ending_balance": 15,
                                                    "entry_status": "committed",
                                                    "entry_type": "increment",
                                                    "id": "J83fdo09iklop2da",
                                                    "ledger_sequence_number": 12,
                                                    "starting_balance": 10
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    },
                                    "Automatic deduction example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "amount": 4,
                                                    "created_at": "2021-11-28T05:47:08+00:00",
                                                    "credit_block": {
                                                        "expiry_date": "2022-03-15T00:00:00+00:00",
                                                        "id": "cjd9s0wodlspdmv2",
                                                        "per_unit_cost_basis": "0.20"
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "external-customer-id",
                                                        "id": "UFHPn8Es9sctYH5k"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 10,
                                                    "entry_status": "committed",
                                                    "entry_type": "decrement",
                                                    "event_id": "b4b23dc4-50df-11ec-bf63-0242ac130002",
                                                    "id": "97s4cQaFNSdKMnV8",
                                                    "ledger_sequence_number": 13,
                                                    "price_id": "7uhde3qdfKil0pod",
                                                    "starting_balance": 14
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    },
                                    "Expiration change example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "amount": 3,
                                                    "created_at": "2021-11-28T05:47:08+00:00",
                                                    "credit_block": {
                                                        "expiry_date": "2022-03-15T00:00:00+00:00",
                                                        "id": "cjd9s0wodlspdmv2",
                                                        "per_unit_cost_basis": "0.20"
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "external-customer-id",
                                                        "id": "UFHPn8Es9sctYH5k"
                                                    },
                                                    "description": "Extending trial",
                                                    "ending_balance": 14,
                                                    "entry_status": "committed",
                                                    "entry_type": "expiration_change",
                                                    "id": "97s4cQaFNSdKMnV8",
                                                    "ledger_sequence_number": 14,
                                                    "starting_balance": 14
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    },
                                    "Credit expiry example": {
                                        "value": {
                                            "data": [
                                                {
                                                    "amount": 4,
                                                    "created_at": "2021-11-28T00:01:00+00:00",
                                                    "credit_block": {
                                                        "expiry_date": "2022-03-15T00:00:00+00:00",
                                                        "id": "cjd9s0wodlspdmv2",
                                                        "per_unit_cost_basis": "0.20"
                                                    },
                                                    "customer": {
                                                        "external_customer_id": "external-customer-id",
                                                        "id": "UFHPn8Es9sctYH5k"
                                                    },
                                                    "description": null,
                                                    "ending_balance": 10,
                                                    "entry_status": "committed",
                                                    "entry_type": "credit_block_expiry",
                                                    "id": "97s4cQaFNSdKMnV8",
                                                    "ledger_sequence_number": 15,
                                                    "starting_balance": 14
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-customers-external_customer_id-credits-ledger",
                "description": "This endpoint's resource and semantics exactly mirror [View credits ledger](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1credits~1ledger/get) but operates on an [external customer ID](../docs/Customer-ID-Aliases.md) rather than an Orb issued identifier.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "increment",
                                "decrement",
                                "expiration_change",
                                "credit_block_expiry"
                            ]
                        },
                        "in": "query",
                        "name": "entry_type",
                        "description": "Filter to a single type of ledger entry"
                    },
                    {
                        "schema": {
                            "type": "number"
                        },
                        "in": "query",
                        "name": "minimum_amount",
                        "description": "Filter to ledger entries that affect at least this amount"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "committed",
                                "pending"
                            ]
                        },
                        "in": "query",
                        "name": "entry_status",
                        "description": "Filters to a single status of ledger entry"
                    }
                ],
                "tags": [
                    "Credits"
                ]
            }
        },
        "/customers/{customer_id}/credits/ledger_entry": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "customer_id",
                    "in": "path",
                    "required": true
                }
            ],
            "post": {
                "summary": "Add credit ledger entry",
                "operationId": "post-customers-customer_id-credits-ledger_entry",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credit-ledger-entry"
                                },
                                "examples": {
                                    "Increment example": {
                                        "value": {
                                            "amount": 100,
                                            "created_at": "2022-05-05T17:17:06+00:00",
                                            "credit_block": {
                                                "expiry_date": "2022-12-28T08:00:00+00:00",
                                                "id": "8EiAAQWdytmsV95s",
                                                "per_unit_cost_basis": "0.20"
                                            },
                                            "customer": {
                                                "external_customer_id": "external-customer-id",
                                                "id": "9VJGi3JckeMWqjpP"
                                            },
                                            "description": "Purchased 100 credits",
                                            "ending_balance": 100,
                                            "entry_type": "increment",
                                            "id": "Nk7TXB8BTMM9j8Q2",
                                            "starting_balance": 0,
                                            "entry_status": "pending",
                                            "ledger_sequence_number": 1
                                        }
                                    },
                                    "Decrement example": {
                                        "value": {
                                            "amount": 20,
                                            "created_at": "2022-05-05T17:17:06+00:00",
                                            "credit_block": {
                                                "expiry_date": "2022-12-28T08:00:00+00:00",
                                                "id": "8EiAAQWdytmsV95s",
                                                "per_unit_cost_basis": "0.20"
                                            },
                                            "customer": {
                                                "external_customer_id": "external-customer-id",
                                                "id": "9VJGi3JckeMWqjpP"
                                            },
                                            "description": "Removing excess credits",
                                            "ending_balance": 80,
                                            "entry_type": "decrement",
                                            "id": "oK893rfghd38hjcN",
                                            "starting_balance": 100,
                                            "entry_status": "pending",
                                            "ledger_sequence_number": 2
                                        }
                                    },
                                    "Expiration change example": {
                                        "value": {
                                            "amount": 10,
                                            "created_at": "2022-05-05T18:17:06+00:00",
                                            "credit_block": {
                                                "expiry_date": "2022-12-28T08:00:00+00:00",
                                                "id": "8EiAAQWdytmsV95s",
                                                "per_unit_cost_basis": "0.20"
                                            },
                                            "customer": {
                                                "external_customer_id": "external-customer-id",
                                                "id": "9VJGi3JckeMWqjpP"
                                            },
                                            "description": "Extending credit validity",
                                            "ending_balance": 80,
                                            "entry_type": "expiration_change",
                                            "id": "8UJhe6yhcE4fH3jD",
                                            "starting_balance": 80,
                                            "entry_status": "pending",
                                            "ledger_sequence_number": 3
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint allows you to create a new ledger entry for a specified customer's balance. This can be used to increment balance, deduct credits, and change the expiry date of existing credits.\n\n## Effects of adding a ledger entry\n1. After calling this endpoint, [Fetch Credit Balance](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1credits/get) will return a credit block that represents the changes (i.e. balance changes or transfers).\n2. A ledger entry will be added to the credits ledger for this customer, and therefore returned in the [View Credits Ledger](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1credits~1ledger/get) response as well as serialized in the response to this request. In the case of deductions without a specified block, multiple ledger entries may be created if the deduction spans credit blocks.\n3. If `invoice_settings` is specified, an invoice will be created that reflects the cost of the credits (based on `amount` and `per_unit_cost_basis`).\n\n## Adding credits\nAdding credits is done by creating an entry of type `increment`. This requires the caller to specify a number of credits as well as an optional expiry date in `YYYY-MM-DD` format. Orb also recommends specifying a description to assist with auditing. When adding credits, the caller can also specify a cost basis per-credit, to indicate how much in USD a customer paid for a single credit in a block. This can later be used for revenue recognition.\n\nThe following snippet illustrates a sample request body to increment credits which will expire in January of 2022.\n\n```json\n{\n  \"entry_type\": \"increment\",\n  \"amount\": 100,\n  \"expiry_date\": \"2022-12-28\",\n  \"per_unit_cost_basis\": \"0.20\",\n  \"description\": \"Purchased 100 credits\"\n}\n```\n\nNote that by default, Orb will always first increment any _negative_ balance in existing blocks before adding the remaining amount to the desired credit block.\n\n### Invoicing for credits\nBy default, Orb manipulates the credit ledger but does not charge for credits. However, if you pass `invoice_settings` in the body of this request, Orb will also generate a one-off invoice for the customer for the credits pre-purchase. Note that you _must_ provide the `per_unit_cost_basis`, since the total charges on the invoice are calculated by multiplying the cost basis with the number of credit units added.\n\n## Deducting Credits\nOrb allows you to deduct credits from a customer by creating an entry of type `decrement`. Orb matches the algorithm for [Automatic Deductions](Orb-API.json/paths/~1customers~1{customer_id}~1credits~1ledger/get#decrement) for determining which credit blocks to decrement from. In the case that the deduction leads to multiple ledger entries, the response from this endpoint will be the final deduction. Orb also optionally allows specifying a description to assist with auditing.\n\nThe following snippet illustrates a sample request body to decrement credits.\n\n```json\n{\n  \"entry_type\": \"decrement\",\n  \"amount\": 20,\n  \"description\": \"Removing excess credits\"\n}\n```\n\n## Changing credits expiry\nIf you'd like to change when existing credits expire, you should create a ledger entry of type `expiration_change`. For this entry, the required parameter `expiry_date` identifies the _originating_ block, and the required parameter `target_expiry_date` identifies when the transferred credits should now expire. A new credit block will be created with expiry date `target_expiry_date`, with the same cost basis data as the original credit block, if present.\n\nNote that the balance of the block with the given `expiry_date` must be at least equal to the desired transfer amount determined by the `amount` parameter.\n\nThe following snippet illustrates a sample request body to extend the expiration date of credits by one year:\n\n```json\n{\n  \"entry_type\": \"expiration_change\",\n  \"amount\": 10,\n  \"expiry_date\": \"2022-12-28\",\n  \"block_id\": \"UiUhFWeLHPrBY4Ad\",\n  \"target_expiry_date\": \"2023-12-28\",\n  \"description\": \"Extending credit validity\"\n}\n```",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "description": "The number of credits to effect. Note that this is required for increment or decrement operations."
                                    },
                                    "entry_type": {
                                        "type": "string",
                                        "enum": [
                                            "increment",
                                            "decrement",
                                            "expiration_change"
                                        ]
                                    },
                                    "expiry_date": {
                                        "type": "string",
                                        "example": "2023-01-01",
                                        "description": "A future date (specified in YYYY-MM-DD format) that denotes when this credit balance should expire.\n\n",
                                        "format": "date"
                                    },
                                    "target_expiry_date": {
                                        "type": "string",
                                        "description": "A future date (specified in YYYY-MM-DD) used for `expiration_change`",
                                        "example": "2023-02-01",
                                        "format": "date"
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "Optional metadata that can be specified when adding ledger results via the API. For example, this can be used to note an increment refers to trial credits, or for noting corrections as a result of an incident, etc."
                                    },
                                    "per_unit_cost_basis": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "Can only be specified when `entry_type=increment`. How much, in USD, a customer paid for a single credit in this block"
                                    },
                                    "block_id": {
                                        "type": "string",
                                        "description": "The ID of the block affected by an `expiration_change`"
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "description": "User-specified key/value pairs for the ledger entry resource."
                                    },
                                    "invoice_settings": {
                                        "type": "object",
                                        "description": "Passing `invoice_settings` automatically generates an invoice for the newly added credits. If `invoice_settings` is passed, you must specify `per_unit_cost_basis`, as the calculation of the invoice total is done on that basis.",
                                        "properties": {
                                            "auto_collection": {
                                                "type": "boolean",
                                                "description": "Whether the credits purchase invoice should auto collect with the customer's saved payment method."
                                            },
                                            "net_terms": {
                                                "type": "number",
                                                "description": "The net terms determines the difference between the invoice date and the issue date for the invoice. If you intend the invoice to be due on issue, set this to 0."
                                            },
                                            "memo": {
                                                "type": "string",
                                                "description": "An optional memo to display on the invoice."
                                            }
                                        },
                                        "required": [
                                            "auto_collection",
                                            "net_terms"
                                        ]
                                    }
                                },
                                "required": [
                                    "entry_type"
                                ]
                            },
                            "examples": {
                                "Increment example": {
                                    "value": {
                                        "amount": 100,
                                        "entry_type": "increment",
                                        "expiry_date": "2022-12-28",
                                        "per_unit_cost_basis": "0.20",
                                        "description": "Purchased 100 credits",
                                        "metadata": {
                                            "record_id": "rec_123"
                                        }
                                    }
                                },
                                "Decrement example": {
                                    "value": {
                                        "amount": 20,
                                        "entry_type": "decrement",
                                        "description": "Removing excess credits"
                                    }
                                },
                                "Expiration change example": {
                                    "value": {
                                        "amount": 10,
                                        "entry_type": "expiration_change",
                                        "expiry_date": "2022-12-28",
                                        "target_expiry_date": "2023-12-28",
                                        "description": "Extending credit validity"
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "Credits"
                ]
            }
        },
        "/customers/{external_customer_id}/credits/ledger_entry": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "external_customer_id",
                    "in": "path",
                    "required": true
                }
            ],
            "post": {
                "summary": "Add credit ledger entry by external customer ID",
                "operationId": "post-customers-external_customer_id-credits-ledger_entry",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Credit-ledger-entry"
                                },
                                "examples": {
                                    "Increment example": {
                                        "value": {
                                            "amount": 100,
                                            "created_at": "2022-05-05T17:17:06+00:00",
                                            "credit_block": {
                                                "expiry_date": "2022-12-28T08:00:00+00:00",
                                                "id": "8EiAAQWdytmsV95s",
                                                "per_unit_cost_basis": "0.20"
                                            },
                                            "customer": {
                                                "external_customer_id": "external-customer-id",
                                                "id": "9VJGi3JckeMWqjpP"
                                            },
                                            "description": "Purchased 100 credits",
                                            "ending_balance": 100,
                                            "entry_type": "increment",
                                            "id": "Nk7TXB8BTMM9j8Q2",
                                            "starting_balance": 0,
                                            "entry_status": "pending",
                                            "ledger_sequence_number": 1
                                        }
                                    },
                                    "Decrement example": {
                                        "value": {
                                            "amount": 20,
                                            "created_at": "2022-05-05T17:17:06+00:00",
                                            "credit_block": {
                                                "expiry_date": "2022-12-28T08:00:00+00:00",
                                                "id": "8EiAAQWdytmsV95s",
                                                "per_unit_cost_basis": "0.20"
                                            },
                                            "customer": {
                                                "external_customer_id": "external-customer-id",
                                                "id": "9VJGi3JckeMWqjpP"
                                            },
                                            "description": "Removing excess credits",
                                            "ending_balance": 80,
                                            "entry_type": "decrement",
                                            "id": "oK893rfghd38hjcN",
                                            "starting_balance": 100,
                                            "entry_status": "pending",
                                            "ledger_sequence_number": 2
                                        }
                                    },
                                    "Expiration change example": {
                                        "value": {
                                            "amount": 10,
                                            "created_at": "2022-05-05T18:17:06+00:00",
                                            "credit_block": {
                                                "expiry_date": "2022-12-28T08:00:00+00:00",
                                                "id": "8EiAAQWdytmsV95s",
                                                "per_unit_cost_basis": "0.20"
                                            },
                                            "customer": {
                                                "external_customer_id": "external-customer-id",
                                                "id": "9VJGi3JckeMWqjpP"
                                            },
                                            "description": "Extending credit validity",
                                            "ending_balance": 80,
                                            "entry_type": "expiration_change",
                                            "id": "8UJhe6yhcE4fH3jD",
                                            "starting_balance": 80,
                                            "entry_status": "pending",
                                            "ledger_sequence_number": 3
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint's resource and semantics exactly mirror [Add credit ledger entry](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1credits~1ledger_entry/post) but operates on an [external customer ID](../docs/Customer-ID-Aliases.md) rather than an Orb issued identifier.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "description": "The number of credits to effect. Note that this is required for increment or decrement operations."
                                    },
                                    "entry_type": {
                                        "type": "string",
                                        "enum": [
                                            "increment",
                                            "decrement",
                                            "expiration_change"
                                        ]
                                    },
                                    "expiry_date": {
                                        "type": "string",
                                        "example": "2023-01-01",
                                        "description": "A future date (specified in YYYY-MM-DD format) that denotes when this credit balance should expire.\n\n",
                                        "format": "date"
                                    },
                                    "target_expiry_date": {
                                        "type": "string",
                                        "description": "A future date (specified in YYYY-MM-DD) used for `expiration_change`",
                                        "example": "2023-02-01",
                                        "format": "date"
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "Optional metadata that can be specified when adding ledger results via the API. For example, this can be used to note an increment refers to trial credits, or for noting corrections as a result of an incident, etc."
                                    },
                                    "per_unit_cost_basis": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "Can only be specified when `entry_type=increment`. How much, in USD, a customer paid for a single credit in this block"
                                    },
                                    "block_id": {
                                        "type": "string",
                                        "description": "The ID of the block affected by an `expiration_change`"
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "description": "User-specified key/value pairs for the ledger entry resource."
                                    },
                                    "invoice_settings": {
                                        "type": "object",
                                        "description": "Passing `invoice_settings` automatically generates an invoice for the newly added credits. If `invoice_settings` is passed, you must specify `per_unit_cost_basis`, as the calculation of the invoice total is done on that basis.",
                                        "properties": {
                                            "auto_collection": {
                                                "type": "boolean",
                                                "description": "Whether the credits purchase invoice should auto collect with the customer's saved payment method."
                                            },
                                            "net_terms": {
                                                "type": "number",
                                                "description": "The net terms determines the difference between the invoice date and the issue date for the invoice. If you intend the invoice to be due on issue, set this to 0."
                                            },
                                            "memo": {
                                                "type": "string",
                                                "description": "An optional memo to display on the invoice."
                                            }
                                        },
                                        "required": [
                                            "auto_collection",
                                            "net_terms"
                                        ]
                                    }
                                },
                                "required": [
                                    "entry_type"
                                ]
                            },
                            "examples": {
                                "Increment example": {
                                    "value": {
                                        "amount": 100,
                                        "entry_type": "increment",
                                        "expiry_date": "2022-12-28",
                                        "per_unit_cost_basis": "0.20",
                                        "description": "Purchased 100 credits",
                                        "metadata": {
                                            "record_id": "rec_123"
                                        }
                                    }
                                },
                                "Decrement example": {
                                    "value": {
                                        "amount": 20,
                                        "entry_type": "decrement",
                                        "description": "Removing excess credits"
                                    }
                                },
                                "Expiration change example": {
                                    "value": {
                                        "amount": 10,
                                        "entry_type": "expiration_change",
                                        "expiry_date": "2022-12-28",
                                        "target_expiry_date": "2023-12-28",
                                        "description": "Extending credit validity"
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "Credits"
                ]
            }
        },
        "/invoices": {
            "get": {
                "summary": "List invoices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Invoice"
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-invoices",
                "description": "This endpoint returns a list of all [`Invoice`](../reference/Orb-API.json/components/schemas/Invoice)s for an account in a list format. \n\nThe list of invoices is ordered starting from the most recently issued invoice date. The response also includes [`pagination_metadata`](../docs/Pagination.md), which lets the caller retrieve the next page of results if they exist.\n\nBy default, this only returns invoices that are `issued`, `paid`, or `synced`.",
                "tags": [
                    "Invoice"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "subscription_id",
                        "description": "Filter by a specific subscription"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "customer_id",
                        "description": "Filter by a specific customer (cannot be used with `external_customer_id`)"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "external_customer_id",
                        "description": "Filter by a specific customer (cannot be used with `customer_id`)"
                    },
                    {
                        "schema": {},
                        "in": "query",
                        "name": "status",
                        "description": "Filter to invoices of a particular status (`draft`, `issued`, `paid`, `void`, `synced`); this param can be used to filter to a single status (`?status=\"draft\"`) or a set of statuses (`?status[]=paid&status[]=void`)"
                    }
                ]
            }
        },
        "/invoices/{invoice_id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "invoice_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "Retrieve an Invoice",
                "tags": [
                    "Invoice"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    }
                },
                "operationId": "get-invoice-invoice_id",
                "description": "This endpoint is used to fetch an [`Invoice`](../reference/Orb-API.json/components/schemas/Invoice) given an identifier.",
                "parameters": []
            }
        },
        "/invoices/upcoming": {
            "get": {
                "summary": "Retrieve upcoming invoice",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Upcoming Invoice"
                                }
                            }
                        }
                    }
                },
                "operationId": "get-invoices-upcoming",
                "description": "This endpoint can be used to fetch the [`Upcoming Invoice`](../reference/Orb-API.json/components/schemas/Upcoming%20Invoice) for the current billing period given a subscription.",
                "tags": [
                    "Invoice"
                ],
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "subscription_id",
                        "required": true
                    }
                ]
            }
        },
        "/subscriptions": {
            "get": {
                "summary": "List subscriptions",
                "tags": [
                    "Subscription"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Subscription"
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-subscriptions",
                "description": "This endpoint returns a list of all subscriptions for an account as a [paginated](../docs/Pagination.md) list, ordered starting from the most recently created subscription. For a full discussion of the subscription resource, see [Subscription](../reference/Orb-API.json/components/schemas/Subscription).\n\nSubscriptions can be filtered to a single customer by passing in the `customer_id` query parameter or the `external_customer_id` query parameter. ",
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "customer_id"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "external_customer_id"
                    }
                ]
            },
            "post": {
                "summary": "Create subscription",
                "operationId": "post-subscriptions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    }
                },
                "description": "A subscription represents the purchase of a plan by a customer. The customer is identified by either the `customer_id` or the `external_customer_id`, and exactly one of these fields must be provided.\n\nBy default, subscriptions begin on the day that they're created and renew automatically for each billing cycle at the cadence that's configured in the plan definition.\n\nThe default configuration for subscriptions in Orb is **In-advance billing** and **Beginning of month alignment** (see [Subscription](../reference/Orb-API.json/components/schemas/Subscription) for more details).\n\nIn order to change the alignment behavior, Orb also supports billing subscriptions on the day of the month they are created. If `align_billing_with_subscription_start_date = true` is specified, subscriptions have billing cycles that are aligned with their `start_date`. For example, a subscription that begins on January 15th will have a billing cycle from January 15th to February 15th. Every subsequent billing cycle will continue to start and invoice on the 15th.\n\nIf the \"day\" value is greater than the number of days in the month, the next billing cycle will start at the end of the month. For example, if the start_date is January 31st, the next billing cycle will start on February 28th.\n\nIf a customer was created with a currency, Orb only allows subscribing the customer to a plan with a matching `invoicing_currency`. If the customer does not have a currency set, on subscription creation, we set the customer's currency to be the `invoicing_currency` of the plan.\n\n## Price overrides\n\nPrice overrides are used to update some or all prices in a plan for the specific subscription being created. This is useful when a new customer has negotiated one or more different prices for a specific plan than the plan's default prices. Any type of price can be overridden, if the correct data is provided. The billable metric, cadence, type, and name of a price can not be overridden.\n\n\nTo override prices, provide a list of objects with the key `price_overrides`. The price object in the list of overrides is expected to contain the existing price id, the `model_type` and config value in the format below. The specific numerical values can be updated, but the config value and `model_type` must match the existing price that is being overridden\n\n### Request format for price overrides\n\nOrb supports a few different pricing models out of the box. The `model_type` field determines the key for the configuration object that is present.\n\n### Unit pricing\n\nWith unit pricing, each unit costs a fixed amount.\n\n```json\n{\n    ...\n    \"id\": \"price_id\",\n    \"model_type\": \"unit\",\n    \"unit_config\": {\n       \"unit_amount\": \"0.50\"\n    }\n    ...\n}\n```\n\n### Tiered pricing\n\nIn tiered pricing, the cost of a given unit depends on the tier range that it falls into, where each tier range is defined by an upper and lower bound. For example, the first ten units may cost $0.50 each and all units thereafter may cost $0.10 each. Tiered prices can be overridden with a new number of tiers or new values for `first_unit`, `last_unit`, or `unit_amount`.\n\n```json\n{\n    ...\n    \"id\": \"price_id\",\n    \"model_type\": \"tiered\",\n    \"tiered_config\": {\n        \"tiers\": [ \n           {\n                \"first_unit\":\"1\",\n                \"last_unit\": \"10\",\n                \"unit_amount\": \"0.50\"\n            },\n            {\n                \"first_unit\": \"10\",\n                \"last_unit\": null,\n                \"unit_amount\": \"0.10\"\n            }\n        ]\n    }\n    ...\n}\n```\n\n### Bulk pricing\n\nBulk pricing applies when the number of units determine the cost of _all_ units. For example, if you've bought less than 10 units, they may each be $0.50 for a total of $5.00. Once you've bought more than 10 units, all units may now be priced at $0.40 (i.e. 101 units total would be $40.40). Bulk prices can be overridden with a new number of tiers or new values for `maximum_units`, or `unit_amount`.\n\n```json\n{\n    ...\n    \"id\": \"price_id\",\n    \"model_type\": \"bulk\",\n    \"bulk_config\": {\n        \"tiers\": [ \n            {\n                \"maximum_units\": \"10\",\n                \"unit_amount\": \"0.50\"\n            },\n            {\n                \"maximum_units\": \"1000\",\n                \"unit_amount\": \"0.40\"\n            }\n          ]\n    }\n    ...\n}\n```\n### Package pricing\n\n```json\n{\n    ...\n    \"id\": \"price_id\",\n    \"model_type\": \"package\",\n    \"package_config\": {\n       \"package_amount\": \"0.80\",\n       \"package_size\": 10\n    }\n    ...\n }\n ```\n### BPS pricing\n\nBPS pricing specifies a per-event (e.g. per-payment) rate in one hundredth of a percent (the number of basis points to charge), as well as a cap per event to assess. For example, this would allow you to assess a fee of 0.25% on every payment you process, with a maximum charge of $25 per payment.\n\n```json\n{\n    ...\n    \"id\": \"price_id\"\n    \"model_type\": \"bps\",\n    \"bps_config\": {\n       \"bps\": 125,\n       \"per_event_cap\": \"11.00\"\n    }\n    ...\n }\n```\n### Bulk BPS pricing\n\nBulk BPS pricing specifies BPS parameters in a tiered manner, dependent on the total quantity across all events. Similar to bulk pricing, the BPS parameters of a given event depends on the tier range that the billing period falls into. Each tier range is defined by an upper and lower bound. For example, after $1.5M of payment volume is reached, each individual payment may have a lower cap or a smaller take-rate.\n\n```json\n{\n    ...\n    \"id\": \"price_id\"\n    \"model_type\": \"bulk_bps\",\n    \"bulk_bps_config\": {\n        \"tiers\": [ \n           {\n                \"minimum_amount\": \"0.00\",\n                \"maximum_amount\": \"1000000.00\",\n                \"bps\": 125,\n                \"per_event_cap\": \"19.00\"\n           },\n          {\n                \"minimum_amount\":\"1000000.00\",\n                \"maximum_amount\": null,\n                \"bps\": 115,\n                \"per_event_cap\": \"4.00\"\n            }\n        ]\n    }\n    ...\n }\n```\n### Tiered BPS pricing\nTiered BPS pricing specifies BPS parameters in a graduated manner, where an event's applicable parameter is a function of its marginal addition to the period total. Similar to tiered pricing, the BPS parameters of a given event depends on the tier range that it falls into, where each tier range is defined by an upper and lower bound. For example, the first few payments may have a 0.8 BPS take-rate and all payments after a specific volume may incur a take-rate of 0.5 BPS each.\n\n```json\n{\n    ...\n    \"id\": \"price_id\"\n    \"model_type\": \"tiered_bps\",\n    \"tiered_bps_config\": {\n        \"tiers\": [ \n           {\n                \"minimum_amount\": \"0.00\",\n                \"maximum_amount\": \"1000000.00\",\n                \"bps\": 125,\n                \"per_event_cap\": \"19.00\"\n           },\n          {\n                \"minimum_amount\":\"1000000\",\n                \"maximum_amount\": null,\n                \"bps\": 115,\n                \"per_event_cap\": \"4.00\"\n            }\n        ]\n    }\n    ...\n }\n```\n### Matrix pricing\nMatrix pricing defines a set of unit prices in a one or two-dimensional matrix. `dimensions` defines the two event property values evaluated in this pricing model. In a one-dimensional matrix, the second value is `null`. Every configuration has a list of `matrix_values` which give the unit prices for specified property values. In a one-dimensional matrix, the matrix values will have `dimension_values` where the second value of the pair is null. If an event does not match any of the dimension values in the matrix, it will resort to the `default_unit_amount`.\n```json\n...\n\"model_type\": \"matrix\"\n\"matrix_config\": {\n    \"default_unit_amount\": \"3.00\",\n    \"dimensions\": [\n        \"cluster_name\",\n        \"region\"\n    ],\n    \"matrix_values\": [\n        {\n            \"dimension_values\": [\n                \"alpha\",\n                \"west\"\n            ],\n            \"unit_amount\": \"2.00\"\n        },\n        ...\n    ]\n}\n...\n```\n\n### Fixed fees\nFixed fees follow unit pricing, and also have an additional parameter `fixed_price_quantity` that indicates how many of a fixed fee that should be applied for a subscription. This parameter defaults to 1. \n\n```json\n{\n    ...\n    \"id\": \"price_id\",\n    \"model_type\": \"unit\",\n    \"unit_config\": {\n       \"unit_amount\": \"2.00\"\n    },\n    \"fixed_price_quantity\": 3.0\n    ...\n}\n```\n\n## Minimums and maximums\nMinimums and maximums, much like price overrides, can be useful when a new customer has negotiated a new or different minimum or maximum spend cap than the default for the plan. Minimums and maximums can be added to either a price or a plan. If a minimum or maximum exists for a price or plan and null is provided for the override on creation, then there will be no minimum or maximum on the new subscription. If no minimum or maximum is provided, then the default plan values will be used, if they exist.\n\nTo add a minimum for a specific price, add `minimum_amount` to the specific price in the `price_overrides` object. To add a minimum to a plan, add `minimum_amount` to the base object. The value for `minimum_amount` should be a string with the minimum dollar amount in decimal format.\n\nTo add a maximum for a specific price, add `maximum_amount` to the specific price in the `price_overrides` object. To add a maximum to a plan, add `maximum_amount` to the base object. The value for `maximum_amount` should be a string with the maximum dollar amount in decimal format.\n\n### Minimum override example\n\nPrice minimum override example:\n\n```json\n{\n    ...\n    \"id\": \"price_id\",\n    \"model_type\": \"unit\",\n    \"unit_config\": {\n        \"unit_amount\": \"0.50\"\n    },\n    \"minimum_amount\": \"100.00\"\n    ...\n}\n```\n\n\nPlan minimum override example:\n\n```json\n{\n    \"customer_id\": \"customer_id\",\n    \"plan_id\": \"plan_id\",\n    \"minimum_amount\": \"1000.00\",\n    \"price_overrides\": [ ... ]\n    ...\n}\n```\n\nRemoving an existing minimum example\n```json\n{\n    ...\n    \"id\": \"price_id\",\n    \"model_type\": \"unit\",\n    \"unit_config\": {\n        \"unit_amount\": \"0.50\"\n    },\n    \"minimum_amount\": null\n    ...\n}\n```\n\nUsing the plan's minimum example\n```json\n{\n    ...\n    \"id\": \"price_id\",\n    \"model_type\": \"unit\",\n    \"unit_config\": {\n        \"unit_amount\": \"0.50\"\n    },\n    ...\n}\n```\n\n## Discounts\nDiscounts, like price overrides, can be useful when a new customer has negotiated a new or custom discount than the default for the plan. Discounts can be added to either a price or a plan, and a single plan or price can have at most one discount. If a discount exists for a price or a plan and a null discount is provided on creation, then there will be no discount on the new subscription.\n\nTo add a discount for a specific price, add `discount` to the price in the `price_overrides` object. To add a discount to a plan, add `discount` to the base object. \nDiscount should be a dictionary of the format:\n```json\n{\n  \"discount_type\": \"amount\" | \"percentage\" | \"usage\", \n  \"amount_discount\": string, \n  \"percentage_discount\": string,\n  \"usage_discount\": string\n}\n```\nwhere either `amount_discount`, `percentage_discount`, or `usage_discount` is provided.\n\nThe `usage` type discount can only be created on individual prices and not on the plan.\n\nPrice discount example\n```json\n{\n  ...\n  \"id\": \"price_id\",\n  \"model_type\": \"unit\",\n  \"unit_config\": {\n      \"unit_amount\": \"0.50\"\n  },\n  \"discount\": {\"discount_type\": \"amount\", \"amount_discount\": \"175\"},\n}\n```\n\nPlan discount example\n```json\n{\n    \"customer_id\": \"customer_id\",\n    \"plan_id\": \"plan_id\",\n    \"discount\": {\"discount_type\": \"percentage\", \"percentage_discount\": \"12.5\"},\n    \"price_overrides\": [ ... ]\n    ...\n}\n```\n\nRemoving an existing discount example\n```json\n{\n    \"customer_id\": \"customer_id\",\n    \"plan_id\": \"plan_id\",\n    \"discount\": null,\n    \"price_overrides\": [ ... ]\n    ...\n}\n```\n\nUsing the plan's discount example\n```json\n{\n    ...\n    \"id\": \"price_id\",\n    \"model_type\": \"unit\",\n    \"unit_config\": {\n        \"unit_amount\": \"0.50\"\n    },\n    ...\n}\n```",
                "tags": [
                    "Subscription"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "customer_id": {
                                        "type": "string",
                                        "description": "The ID of the customer to subscribe.",
                                        "example": "97DPcZE9hxsbb9Y9"
                                    },
                                    "external_customer_id": {
                                        "type": "string",
                                        "description": "The external ID of the customer to subscribe, as an alternate to passing the `customer_id`."
                                    },
                                    "plan_id": {
                                        "type": "string",
                                        "description": "The plan that the given customer should be subscribed to. The plan determines the pricing and cadence of the subscription.",
                                        "example": "ZMwNQefe7J3ecf7W"
                                    },
                                    "external_plan_id": {
                                        "type": "string",
                                        "description": "The external ID of the plan, which can be used in place of the `plan_id`."
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "The date that Orb should start billing for the subscription, localized to the customer's timezone. If this is not provided, this defaults to the current date in the customer's timezone.",
                                        "example": "2022-01-01"
                                    },
                                    "external_marketplace": {
                                        "type": "string",
                                        "description": "Optionally provide the name of the external marketplace that the subscription is attached to.",
                                        "example": "google",
                                        "enum": [
                                            "google",
                                            "aws",
                                            "azure"
                                        ]
                                    },
                                    "external_marketplace_reporting_id": {
                                        "type": "string",
                                        "description": "The reporting ID to associate this subscription with the external marketplace. Required if external_marketplace is specified.",
                                        "example": "project_number:983410661111"
                                    },
                                    "price_overrides": {
                                        "description": "Optionally provide a list of overrides for prices on the plan",
                                        "type": "array",
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "description": "Tiered price override",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "description": "price_id",
                                                            "example": "2dbSXs47wDkmtEME"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "tiered"
                                                            ],
                                                            "example": "tiered"
                                                        },
                                                        "tiered_config": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tiers": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "first_unit": {
                                                                                "type": "string",
                                                                                "example": "0"
                                                                            },
                                                                            "last_unit": {
                                                                                "type": "string",
                                                                                "example": "10"
                                                                            },
                                                                            "unit_amount": {
                                                                                "type": "string",
                                                                                "example": "2.5"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "dvev1yk6ibh7a"
                                                            }
                                                        },
                                                        "discount": {
                                                            "type": "object",
                                                            "x-sl-internally-excluded": true,
                                                            "x-sl-error-message": "You do not have permission to view this reference"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type",
                                                        "tiered_config"
                                                    ]
                                                },
                                                {
                                                    "description": "Unit price override",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "unit"
                                                            ],
                                                            "example": "unit"
                                                        },
                                                        "unit_config": {
                                                            "type": "object",
                                                            "required": [
                                                                "unit_amount"
                                                            ],
                                                            "properties": {
                                                                "unit_amount": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "a6gjj3ja292kv"
                                                            }
                                                        },
                                                        "discount": {
                                                            "type": "object",
                                                            "x-sl-internally-excluded": true,
                                                            "x-sl-error-message": "You do not have permission to view this reference"
                                                        },
                                                        "fixed_price_quantity": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type",
                                                        "unit_config"
                                                    ]
                                                },
                                                {
                                                    "description": "Bulk price override",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "bulk"
                                                            ],
                                                            "example": "bulk"
                                                        },
                                                        "bulk_config": {
                                                            "type": "object",
                                                            "required": [
                                                                "tiers"
                                                            ],
                                                            "properties": {
                                                                "tiers": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "maximum_units": {
                                                                                "type": "string"
                                                                            },
                                                                            "unit_amount": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "maximum_units",
                                                                            "unit_amount"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "6jsz9lus7rcab"
                                                            }
                                                        },
                                                        "discount": {
                                                            "type": "object",
                                                            "x-sl-internally-excluded": true,
                                                            "x-sl-error-message": "You do not have permission to view this reference"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type",
                                                        "bulk_config"
                                                    ]
                                                },
                                                {
                                                    "description": "Package price override",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "package"
                                                            ],
                                                            "example": "package"
                                                        },
                                                        "package_config": {
                                                            "type": "object",
                                                            "required": [
                                                                "package_amount",
                                                                "package_size"
                                                            ],
                                                            "properties": {
                                                                "package_amount": {
                                                                    "type": "string"
                                                                },
                                                                "package_size": {
                                                                    "type": "number"
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "mlbqle0otgdvi"
                                                            }
                                                        },
                                                        "discount": {
                                                            "type": "object",
                                                            "x-sl-internally-excluded": true,
                                                            "x-sl-error-message": "You do not have permission to view this reference"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type",
                                                        "package_config"
                                                    ]
                                                },
                                                {
                                                    "additionalProperties": false,
                                                    "description": "BPS price override",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "bps"
                                                            ],
                                                            "example": "bps"
                                                        },
                                                        "bps_config": {
                                                            "type": "object",
                                                            "required": [
                                                                "bps",
                                                                "per_unit_maximum"
                                                            ],
                                                            "properties": {
                                                                "bps": {
                                                                    "type": "number"
                                                                },
                                                                "per_unit_maximum": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_maount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "i4huilel6y90a"
                                                            }
                                                        },
                                                        "discount": {
                                                            "type": "object",
                                                            "x-sl-internally-excluded": true,
                                                            "x-sl-error-message": "You do not have permission to view this reference"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type",
                                                        "bps_config"
                                                    ]
                                                },
                                                {
                                                    "description": "Bulk BPS price override",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "bulk_bps"
                                                            ],
                                                            "example": "bulk_bps"
                                                        },
                                                        "bulk_bps_config": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tiers": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "maximum_amount": {
                                                                                "type": "string"
                                                                            },
                                                                            "bps": {
                                                                                "type": "number"
                                                                            },
                                                                            "per_unit_maximum": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "maximum_amount",
                                                                            "bps",
                                                                            "per_unit_maximum"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "jj9yclazlarb2"
                                                            }
                                                        },
                                                        "discount": {
                                                            "type": "object",
                                                            "x-sl-internally-excluded": true,
                                                            "x-sl-error-message": "You do not have permission to view this reference"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type"
                                                    ]
                                                },
                                                {
                                                    "description": "Tiered BPS price override",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "tiered_bps"
                                                            ],
                                                            "example": "tiered_bps"
                                                        },
                                                        "tiered_bps_config": {
                                                            "type": "object",
                                                            "required": [
                                                                "tiers"
                                                            ],
                                                            "properties": {
                                                                "tiers": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "minimum_amount": {
                                                                                "type": "string"
                                                                            },
                                                                            "maximum_amount": {
                                                                                "type": "string"
                                                                            },
                                                                            "bps": {
                                                                                "type": "number"
                                                                            },
                                                                            "per_unit_maximum": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "minimum_amount",
                                                                            "maximum_amount",
                                                                            "bps",
                                                                            "per_unit_maximum"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "31ryt4us9iayd"
                                                            }
                                                        },
                                                        "discount": {
                                                            "type": "object",
                                                            "x-sl-internally-excluded": true,
                                                            "x-sl-error-message": "You do not have permission to view this reference"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type",
                                                        "tiered_bps_config"
                                                    ]
                                                }
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "align_billing_with_subscription_start_date": {
                                        "type": "boolean",
                                        "description": "Align billing periods with the subscription's start_date. If this is not provided, this defaults to aligning billing periods with the start of the month."
                                    },
                                    "minimum_amount": {
                                        "type": "string",
                                        "description": "The subscription's override minimum amount for the plan.",
                                        "example": "1.23"
                                    },
                                    "maximum_amount": {
                                        "type": "string",
                                        "description": "The subscription's override maximum amount for the plan.",
                                        "example": "1.23",
                                        "x-stoplight": {
                                            "id": "l3hbv9wxf9fgy"
                                        }
                                    },
                                    "phase_overrides": {
                                        "type": "array",
                                        "description": "Optionally provide a list of minimum amount or discount overrides for phases on the plan.",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "order": {
                                                    "type": "number",
                                                    "description": "The phase order that is being modified."
                                                },
                                                "minimum_amount": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The new minimum amount for the phase. Providing `null` will clear the existing minimum, if it exists."
                                                },
                                                "maximum_amount": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "The new minimum amount for the phase. Providing `null` will clear the existing minimum, if it exists.",
                                                    "x-stoplight": {
                                                        "id": "gdtv144wrf750"
                                                    }
                                                },
                                                "discount": {
                                                    "$ref": "#/components/schemas/Discount"
                                                }
                                            }
                                        }
                                    },
                                    "net_terms": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 0,
                                        "description": "The net terms of a subscription determine when a subscription's invoice is due relative to its issue date. Whereas a net terms of 0 signifies \"due on issue\", a net terms of 30 can be used to provide the customer one month to pay the invoice. By default, the subscription defaults to the plan's net terms configuration."
                                    },
                                    "auto_collection": {
                                        "type": "boolean",
                                        "description": "Used to determine whether Orb will attempt to automatically charge the payment method on file for the customer corresponding to this subscription. If not provided, the property on the corresponding customer will be honored."
                                    },
                                    "default_invoice_memo": {
                                        "type": "string",
                                        "description": "Invoices for this subscription will populate with this memo. When not set, the plan-level setting for memo will be used."
                                    },
                                    "coupon_redemption_code": {
                                        "type": "string",
                                        "description": "Redemption code to be used for this subscription. If the coupon cannot be found by its redemption code, or cannot be redeemed, an error response will be returned and the plan change will not be scheduled."
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "x-stoplight": {
                                            "id": "yb3s8c14u5p70"
                                        },
                                        "description": "User-specified key value pairs, often useful for referencing internal resources or IDs. Returned as-is in the subscription resource."
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "properties": {}
                            }
                        }
                    },
                    "description": ""
                }
            },
            "parameters": []
        },
        "/subscriptions/{subscription_id}/usage": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "subscription_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View subscription usage",
                "tags": [
                    "Subscription"
                ],
                "responses": {},
                "operationId": "get-subscriptions-subscription_id-usage",
                "description": "This endpoint is used to fetch a subscription's usage in Orb. Especially when combined with optional query parameters, this endpoint is a powerful way to build visualizations on top of Orb's event data and metrics.\n\nWith no query parameters specified, this endpoint returns usage for the subscription's _current billing period_ across each billable metric that participates in the subscription. Usage quantities returned are the result of evaluating the metric definition for the entirety of the customer's billing period.\n\n### Default response shape\n\nOrb returns a `data` array with an object corresponding to each billable metric. Nested within this object is a `usage` array which has a `quantity` value and a corresponding `timeframe_start` and `timeframe_end`.  The `quantity` value represents the calculated usage value for the billable metric over the specified timeframe (inclusive of the `timeframe_start` timestamp and exclusive of the `timeframe_end` timestamp).\n\nOrb will include _every_ window in the response starting from the beginning of the billing period, even when there were no events (and therefore no usage) in the window. This increases the size of the response but prevents the caller from filling in gaps and handling cumbersome time-based logic.\n\nThe query parameters in this endpoint serve to override this behavior and provide some key functionality, as listed below. Note that this functionality can also be used _in conjunction_ with each other, e.g. to display grouped usage on a custom timeframe.\n\n## Custom timeframe\n\nIn order to view usage for a custom timeframe rather than the current billing period, specify a `timeframe_start` and `timeframe_end`. This will calculate quantities for usage incurred between timeframe_start (inclusive) and timeframe_end (exclusive), i.e. `[timeframe_start, timeframe_end)`.\n\nNote:\n- These timestamps must be specified in ISO 8601 format and UTC timezone, e.g. `2022-02-01T05:00:00Z`.\n- Both parameters must be specified if either is specified.\n\n## Grouping by custom attributes\nIn order to view a single metric grouped by a specific _attribute_ that each event is tagged with (e.g. `cluster`), you must additionally specify a `billable_metric_id` and a `group_by` key. The `group_by` key denotes the event property on which to group. \n\nWhen returning grouped usage, only usage for `billable_metric_id` is  returned, and a separate object in the `data` array is returned for each value of the `group_by` key present in your events. The `quantity` value is the result of evaluating the billable metric for events filtered to a single value of the `group_by` key.\n\nOrb expects that events that match the billable metric will contain values in the `properties` dictionary that correspond to the `group_by` key specified. By default, Orb will not return a `null` group (i.e. events that match the metric but do not have the key set). Currently, it is only possible to view usage grouped by a single attribute at a time.\n\nThe following example shows usage for an \"API Requests\" billable metric grouped by `region`. Note the extra `metric_group` dictionary in the response, which provides metadata about the group:\n\n```json\n{\n  \"data\": [\n    {\n      \"usage\": [\n        {\n          \"quantity\": 0.19291,\n          \"timeframe_start\": \"2021-10-01T07:00:00Z\",\n          \"timeframe_end\": \"2021-10-02T07:00:00Z\",\n        },\n        ...\n      ],\n      “metric_group”: {\n         “property_key”: “region”,\n         “property_value”: “asia/pacific”\n      },\n      \"billable_metric\": {\n        \"id\": \"Fe9pbpMk86xpwdGB\",\n        \"name\": \"API Requests\"\n       },\n      \"view_mode\": \"periodic\"\n    },\n    ...\n  ]\n}\n```\n\n## Windowed usage\nThe `granularity` parameter can be used to _window_ the usage `quantity` value into periods. When not specified, usage is returned for the entirety of the time range. \n\nWhen `granularity = day` is specified with a timeframe longer than a day, Orb will return a `quantity` value for each full day between `timeframe_start` and `timeframe_end`. Note that the days are demarcated by the _customer's local midnight_.\n\nFor example, with `timeframe_start = 2022-02-01T05:00:00Z`, `timeframe_end = 2022-02-04T01:00:00Z` and `granularity=day`, the following windows will be returned for a customer in the `America/Los_Angeles` timezone since local midnight is `08:00` UTC:\n- `[2022-02-01T05:00:00Z, 2022-02-01T08:00:00Z)`\n- `[2022-02-01T08:00:00, 2022-02-02T08:00:00Z)`\n- `[2022-02-02T08:00:00, 2022-02-03T08:00:00Z)`\n- `[2022-02-03T08:00:00, 2022-02-04T01:00:00Z)`\n\n```json\n{\n    \"data\": [\n        {\n            \"billable_metric\": {\n                \"id\": \"Q8w89wjTtBdejXKsm\",\n                \"name\": \"API Requests\"\n            },\n            \"usage\": [\n                {\n                    \"quantity\": 0,\n                    \"timeframe_end\": \"2022-02-01T08:00:00+00:00\",\n                    \"timeframe_start\": \"2022-02-01T05:00:00+00:00\"\n                },\n                {\n                    \"quantity\": 0,\n                    \"timeframe_end\": \"2022-02-02T08:00:00+00:00\",\n                    \"timeframe_start\": \"2022-02-01T08:00:00+00:00\"\n                },\n                {\n                    \"quantity\": 0,\n                    \"timeframe_end\": \"2022-02-03T08:00:00+00:00\",\n                    \"timeframe_start\": \"2022-02-02T08:00:00+00:00\"\n                },\n                {\n                    \"quantity\": 0,\n                    \"timeframe_end\": \"2022-02-04T01:00:00+00:00\",\n                    \"timeframe_start\": \"2022-02-03T08:00:00+00:00\"\n                }\n            ],\n            \"view_mode\": \"periodic\"\n        },\n        ...\n    ]\n}\n```\n\n## Decomposable vs. non-decomposable metrics\nBillable metrics fall into one of two categories: decomposable and non-decomposable. A decomposable billable metric, such as a sum or a count, can be displayed and aggregated across arbitrary timescales. On the other hand, a non-decomposable metric is not meaningful when only a slice of the billing window is considered. \n\nAs an example, if we have a billable metric that's defined to count unique users, displaying a graph of unique users for each day is not representative of the billable metric value over the month (days could have an overlapping set of 'unique' users). Instead, what's useful for any given day is the number of unique users in the billing period so far, which are the _cumulative_ unique users.\n\nAccordingly, this endpoint returns treats these two types of metrics differently when `group_by` is specified:\n- Decomposable metrics can be grouped by any event property.\n- Non-decomposable metrics can only be grouped by the corresponding price's invoice grouping key. If no invoice grouping key is present, the metric does not support `group_by`.\n\n## Matrix prices\nWhen a billable metric is attached to a price that uses matrix pricing, it's important to view usage grouped by those matrix dimensions. In this case, use the query parameters `first_dimension_key`, `first_dimension_value` and `second_dimension_key`, `second_dimension_value` while filtering to a specific `billable_metric_id`. \n\nFor example, if your compute metric has a separate unit price (i.e. a matrix pricing model) per `region` and `provider`, your request might provide the following parameters:\n\n- `first_dimension_key`: `region`\n- `first_dimension_value`: `us-east-1` \n- `second_dimension_key`: `provider`\n- `second_dimension_value`: `aws`",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "day"
                            ]
                        },
                        "in": "query",
                        "name": "granularity",
                        "description": "This determines the windowing of usage reporting."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2022-02-02T05:00:00Z"
                        },
                        "in": "query",
                        "name": "timeframe_start",
                        "description": "Usage returned is _inclusive_ of `timeframe_start`"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2022-02-02T05:00:00Z"
                        },
                        "in": "query",
                        "name": "timeframe_end",
                        "description": "Usage returned is _exclusive_ of `timeframe_end`"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "billable_metric_id",
                        "description": "When specified in conjunction with `group_by`, this parameter filters usage to a single billable metric. Note that both `group_by` and `billable_metric_id` must be specific together."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "group_by",
                        "description": "When specified in conjunction with `billable_metric_id`, this parameter groups by the key provided. Note that both `group_by` and `billable_metric_id` must be specific together."
                    },
                    {
                        "schema": {
                            "type": "string",
                            "enum": [
                                "periodic",
                                "cumulative"
                            ]
                        },
                        "in": "query",
                        "name": "view_mode",
                        "description": "`periodic` returns usage for each window (configured by `granularity`) and `cumulative` returns the usage since the beginning of the billing period. The default is `periodic`."
                    }
                ]
            }
        },
        "/subscriptions/{subscription_id}/costs": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "subscription_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View subscription costs",
                "tags": [
                    "Subscription"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "",
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "data": [
                                                {
                                                    "balance": 1.472228333333333,
                                                    "expiry_date": null,
                                                    "id": "Pqe5m4sACcZRHjaw",
                                                    "per_unit_cost_basis": null
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": false,
                                                "next_cursor": null
                                            }
                                        }
                                    },
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 0,
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "subtotal": {
                                                        "type": "string",
                                                        "description": "Total costs for the timeframe, excluding any minimums and discounts."
                                                    },
                                                    "total": {
                                                        "type": "string",
                                                        "description": "Total costs for the timeframe, including any minimums and discounts."
                                                    },
                                                    "timeframe_start": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "timeframe_end": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "per_price_costs": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "description": "Price's contributions for the timeframe, excluding any transforms (minimums and discounts).",
                                                            "properties": {
                                                                "subtotal": {
                                                                    "type": "string",
                                                                    "description": "Price's contributions for the timeframe, excluding any minimums and discounts."
                                                                },
                                                                "total": {
                                                                    "type": "string",
                                                                    "description": "Price's contributions for the timeframe, including minimums and discounts."
                                                                },
                                                                "price": {
                                                                    "$ref": "#/components/schemas/Price"
                                                                },
                                                                "price_groups": {
                                                                    "type": "array",
                                                                    "description": "If a `group_by` attribute is passed in, array of costs per `grouping_key`, `grouping_value` or `secondary_grouping_key`, `secondary_grouping_value`.",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "grouping_key": {
                                                                                "type": "string",
                                                                                "description": "Grouping key to break down a single price's costs"
                                                                            },
                                                                            "grouping_value": {
                                                                                "type": "string"
                                                                            },
                                                                            "secondary_grouping_key": {
                                                                                "type": "string",
                                                                                "description": "If the price is a matrix price, this is the second dimension key"
                                                                            },
                                                                            "secondary_grouping_value": {
                                                                                "type": "string"
                                                                            },
                                                                            "total": {
                                                                                "type": "string",
                                                                                "description": "Total costs for this group for the timeframe. Note that this does not account for any minimums or discounts."
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "grouping_key",
                                                                            "grouping_value",
                                                                            "total"
                                                                        ]
                                                                    }
                                                                }
                                                            },
                                                            "required": [
                                                                "price_groups"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "subtotal",
                                                    "total",
                                                    "timeframe_start",
                                                    "timeframe_end",
                                                    "per_price_costs"
                                                ]
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "pagination_metadata"
                                    ]
                                },
                                "examples": {
                                    "example-1": {
                                        "value": {
                                            "data": [
                                                {
                                                    "subtotal": "50.00",
                                                    "total": "100.00",
                                                    "timeframe_start": "2023-05-01T00:00:00Z",
                                                    "timeframe_end": "2023-05-02T00:00:00Z",
                                                    "per_price_costs": [
                                                        {
                                                            "subtotal": "23.00",
                                                            "total": "50.00",
                                                            "price": {
                                                                "billable_metric": {
                                                                    "id": "dUmCTVBzan14PeDs"
                                                                },
                                                                "cadence": "monthly",
                                                                "created_at": "2021-07-18T15:45:03.0000+00:00",
                                                                "id": "RtpDt57Uug2mJeNK",
                                                                "model_type": "unit",
                                                                "name": "Usage Fee",
                                                                "unit_config": {
                                                                    "unit_amount": "100.00"
                                                                },
                                                                "plan_phase_order": null
                                                            },
                                                            "price_groups": [
                                                                {
                                                                    "grouping_key": "cluster",
                                                                    "grouping_value": "us-east-1",
                                                                    "total": "15"
                                                                },
                                                                {
                                                                    "grouping_key": "cluster",
                                                                    "grouping_value": "us-west-2",
                                                                    "total": "2"
                                                                },
                                                                {
                                                                    "grouping_key": "cluster",
                                                                    "grouping_value": "ap-south-1",
                                                                    "total": "6"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": true,
                                                "next_cursor": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-subscriptions-subscription_id-usage",
                "description": "This endpoint is used to fetch a day-by-day snapshot of a subscription's costs in Orb, calculated by applying pricing information to the underlying usage (see the [subscription usage endpoint](../reference/Orb-API.json/paths/~1subscriptions~1{subscription_id}~1usage/get) to fetch usage per metric, in usage units rather than a currency). \n\n\nThe semantics of this endpoint exactly mirror those of [fetching a customer's costs](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1costs/get). Use this endpoint to limit your analysis of costs to a specific subscription for the customer (e.g. to de-aggregate costs when a customer's subscription has started and stopped on the same day).",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2022-02-02T05:00:00Z"
                        },
                        "in": "query",
                        "name": "timeframe_start",
                        "description": "Revenue returned is _inclusive_ of `timeframe_start`"
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2022-02-02T05:00:00Z"
                        },
                        "in": "query",
                        "name": "timeframe_end",
                        "description": "Revenue returned is _exclusive_ of `timeframe_end`"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "view_mode",
                        "description": "Controls whether Orb returns cumulative costs since the start of the billing period, or incremental day-by-day costs. If your customer has minimums or discounts, it's strongly recommended that you use the default cumulative behavior."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "group_by",
                        "description": "Groups per-price costs by the key provided."
                    }
                ],
                "x-internal": false
            }
        },
        "/subscriptions/{subscription_id}/cancel": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "subscription_id",
                    "in": "path",
                    "required": true
                }
            ],
            "post": {
                "summary": "Cancel subscription",
                "operationId": "post-subscriptions-subscription_id-cancel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    }
                },
                "parameters": [],
                "description": "This endpoint can be used to cancel an existing subscription. It returns the serialized subscription object with an `end_date` parameter that signifies when the subscription will transition to an ended state.\n\nThe body parameter `cancel_option` determines the cancellation behavior. Orb supports three cancellation options: \n\n- `end_of_subscription_term`: stops the subscription from auto-renewing. Subscriptions that have been cancelled with this option can still incur charges for the remainder of their term:\n    - Issuing this cancellation request for a monthly subscription will keep the subscription active until the start of the subsequent month, and potentially issue an invoice for any usage charges incurred in the intervening period.\n    - Issuing this cancellation request for a quarterly subscription will keep the subscription active until the end of the quarter and potentially issue an invoice for any usage charges incurred in the intervening period.\n    - Issuing this cancellation request for a yearly subscription will keep the subscription active for the full year. For example, a yearly subscription starting on 2021-11-01 and cancelled on 2021-12-08 will remain active until 2022-11-01 and potentially issue charges in the intervening months for any recurring monthly usage charges in its plan.\n    - **Note**: If a subscription's plan contains prices with difference cadences, the end of term date will be determined by the largest cadence value. For example, cancelling end of term for a subscription with a quarterly fixed fee with a monthly usage fee will result in the subscription ending at the end of the quarter.\n\n- `immediate`: ends the subscription immediately, setting the `end_date` to the current time:\n  - Subscriptions that have been cancelled with this option will be invoiced immediately. This invoice will include any usage fees incurred in the billing period up to the cancellation, along with any prorated recurring fees for the billing period, if applicable. \n  - **Note**: If the subscription has a recurring fee that was paid in-advance, the prorated amount for the remaining time period will be added to the [customer's balance](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1balance_transactions/get) upon immediate cancellation. However, if the customer is ineligible to use the customer balance, the subscription cannot be cancelled immediately.\n  \n- `requested_date`: ends the subscription on a specified date, which requires a `cancellation_date` to be passed in. If no timezone is provided, the customer's timezone is used.  For example, a subscription starting on January 1st with a monthly price can be set to be cancelled on the first of any month after January 1st (e.g. March 1st, April 1st, May 1st). A subscription with multiple prices with different cadences defines the \"term\" to be the highest cadence of the prices.\n\n\nUpcoming subscriptions are only eligible for immediate cancellation, which will set the `end_date` equal to the `start_date` upon cancellation.\n\n## Backdated cancellations\nOrb allows you to cancel a subscription in the past as long as there are no paid invoices between the `requested_date` and the current time. If the cancellation is after the latest issued invoice, Orb will generate a balance refund for the current period. If the cancellation is before the most recently issued invoice, Orb will void the intervening invoice and generate a new one based on the new dates for the subscription. See the section on [cancellation behaviors](../docs/Subscription-management.md#cancellation-behaviors).",
                "tags": [
                    "Subscription"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "cancel_option": {
                                        "type": "string",
                                        "description": "Determines the timing of subscription cancellation",
                                        "enum": [
                                            "immediate",
                                            "end_of_subscription_term",
                                            "requested_date"
                                        ],
                                        "example": "immediate"
                                    },
                                    "cancellation_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2017-07-21T17:32:28Z",
                                        "description": "The date that the cancellation should take effect. This parameter can only be passed if the `cancel_option` is `requested_date`."
                                    }
                                },
                                "required": [
                                    "cancel_option"
                                ]
                            }
                        }
                    },
                    "description": ""
                }
            }
        },
        "/subscriptions/{subscription_id}/schedule_plan_change": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "subscription_id",
                    "in": "path",
                    "required": true
                }
            ],
            "post": {
                "summary": "Schedule plan change",
                "operationId": "post-subscriptions-subscription_id-schedule_plan_change",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint can be used to change the plan on an existing subscription. It returns the serialized updated subscription object.\n\nThe body parameter `change_option` determines the timing of the plan change. Orb supports three options: \n\n- `end_of_subscription_term`: changes the plan at the end of the existing plan's term.\n    - Issuing this plan change request for a monthly subscription will keep the existing plan active until the start of the subsequent month, and potentially issue an invoice for any usage charges incurred in the intervening period.\n    - Issuing this plan change request for a yearly subscription will keep the existing plan active for the full year.\n\n- `immediate`: changes the plan immediately. Subscriptions that have their plan changed with this option will be invoiced immediately. This invoice will include any usage fees incurred in the billing period up to the change, along with any prorated recurring fees for the billing period, if applicable.\n\n- `requested_date`: changes the plan on the requested date (`change_date`). If no timezone is provided, the customer's timezone is used. The `change_date` body parameter is required if this option is chosen.\n\nNote that one of `plan_id` or `external_plan_id` is required in the request body for this operation.\n\n## Price overrides, minimums, and maximums\nPrice overrides are used to update some or all prices in the target plan. Minimums and maximums, much like price overrides, can be useful when a new customer has negotiated a new or different minimum commitment or maximum spend cap than the default for the plan. The request format for price overrides, minimums, and maximums are the same as those in [subscription creation](Orb-API.json/paths/~1subscriptions/post).\n\n## Prorations for in-advance fees\nBy default, Orb calculates the prorated difference in any fixed fees when making a plan change, adjusting the customer balance as needed. For details on this behavior, [Subscription management](../docs/Subscription-management.md#prorations-for-in-advance-fees).",
                "tags": [
                    "Subscription"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "plan_id": {
                                        "type": "string",
                                        "description": "The plan that the given subscription should be switched to. Note that either this property or `external_plan_id` must be specified.",
                                        "example": "ZMwNQefe7J3ecf7W"
                                    },
                                    "external_plan_id": {
                                        "type": "string",
                                        "description": "The external_plan_id of the plan that the given subscription should be switched to. Note that either this property or `plan_id` must be specified.",
                                        "example": "ZMwNQefe7J3ecf7W"
                                    },
                                    "change_option": {
                                        "type": "string",
                                        "enum": [
                                            "requested_date",
                                            "end_of_subscription_term",
                                            "immediate"
                                        ],
                                        "description": "Determines the timing of the plan change"
                                    },
                                    "change_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "The date that the plan change should take effect. This parameter can only be passed if the `change_option` is `requested_date`.",
                                        "example": "2017-07-21T17:32:28Z"
                                    },
                                    "align_billing_with_plan_change_date": {
                                        "type": "boolean",
                                        "description": "Reset billing periods to be aligned with the plan change’s effective date."
                                    },
                                    "price_overrides": {
                                        "description": "Optionally provide a list of overrides for prices on the plan",
                                        "type": "array",
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "description": "Tiered price override",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "description": "price_id",
                                                            "example": "mqBkze6HoCwL4ytV"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "tiered"
                                                            ],
                                                            "example": "tiered"
                                                        },
                                                        "tiered_config": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tiers": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "first_unit": {
                                                                                "type": "string",
                                                                                "example": "0"
                                                                            },
                                                                            "last_unit": {
                                                                                "type": "string",
                                                                                "example": "10"
                                                                            },
                                                                            "unit_amount": {
                                                                                "type": "string",
                                                                                "example": "2.5"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "qux7kmd2nosjz"
                                                            }
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type",
                                                        "tiered_config"
                                                    ]
                                                },
                                                {
                                                    "description": "Unit price override",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "unit"
                                                            ],
                                                            "example": "unit"
                                                        },
                                                        "unit_config": {
                                                            "type": "object",
                                                            "required": [
                                                                "unit_amount"
                                                            ],
                                                            "properties": {
                                                                "unit_amount": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "vwqj2n591lhl4"
                                                            }
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type",
                                                        "unit_config"
                                                    ]
                                                },
                                                {
                                                    "description": "Bulk price override",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "bulk"
                                                            ],
                                                            "example": "bulk"
                                                        },
                                                        "bulk_config": {
                                                            "type": "object",
                                                            "required": [
                                                                "tiers"
                                                            ],
                                                            "properties": {
                                                                "tiers": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "maximum_units": {
                                                                                "type": "string"
                                                                            },
                                                                            "unit_amount": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "maximum_units",
                                                                            "unit_amount"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "7ghh1ii67wig9"
                                                            }
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type",
                                                        "bulk_config"
                                                    ]
                                                },
                                                {
                                                    "description": "Package price override",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "package"
                                                            ],
                                                            "example": "package"
                                                        },
                                                        "package_config": {
                                                            "type": "object",
                                                            "required": [
                                                                "unit_amount",
                                                                "num_units"
                                                            ],
                                                            "properties": {
                                                                "unit_amount": {
                                                                    "type": "string"
                                                                },
                                                                "num_units": {
                                                                    "type": "number"
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "ahxaoauj4fgpg"
                                                            }
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type",
                                                        "package_config"
                                                    ]
                                                },
                                                {
                                                    "additionalProperties": false,
                                                    "description": "BPS price override",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "bps"
                                                            ],
                                                            "example": "bps"
                                                        },
                                                        "bps_config": {
                                                            "type": "object",
                                                            "required": [
                                                                "bps",
                                                                "per_unit_maximum"
                                                            ],
                                                            "properties": {
                                                                "bps": {
                                                                    "type": "number"
                                                                },
                                                                "per_unit_maximum": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "gfxnc03iz5c1n"
                                                            }
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type",
                                                        "bps_config"
                                                    ]
                                                },
                                                {
                                                    "description": "Bulk BPS price override",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "bulk_bps"
                                                            ],
                                                            "example": "bulk_bps"
                                                        },
                                                        "bulk_bps_config": {
                                                            "type": "object",
                                                            "properties": {
                                                                "tiers": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "maximum_amount": {
                                                                                "type": "string"
                                                                            },
                                                                            "bps": {
                                                                                "type": "number"
                                                                            },
                                                                            "per_unit_maximum": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "maximum_amount",
                                                                            "bps",
                                                                            "per_unit_maximum"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "aq237rycvn4et"
                                                            }
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type"
                                                    ]
                                                },
                                                {
                                                    "description": "Tiered BPS price override",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "model_type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "tiered_bps"
                                                            ],
                                                            "example": "tiered_bps"
                                                        },
                                                        "tiered_bps_config": {
                                                            "type": "object",
                                                            "required": [
                                                                "tiers"
                                                            ],
                                                            "properties": {
                                                                "tiers": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "minimum_amount": {
                                                                                "type": "string"
                                                                            },
                                                                            "maximum_amount": {
                                                                                "type": "string"
                                                                            },
                                                                            "bps": {
                                                                                "type": "number"
                                                                            },
                                                                            "per_unit_maximum": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "minimum_amount",
                                                                            "maximum_amount",
                                                                            "bps",
                                                                            "per_unit_maximum"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "minimum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override minimum amount for this price.",
                                                            "example": "1.23"
                                                        },
                                                        "maximum_amount": {
                                                            "type": "string",
                                                            "description": "The subscription's override maximum amount for this price.",
                                                            "example": "1.23",
                                                            "x-stoplight": {
                                                                "id": "dg4v2708k0n4o"
                                                            }
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "model_type",
                                                        "tiered_bps_config"
                                                    ]
                                                }
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "minimum_amount": {
                                        "type": "string",
                                        "description": "The subscription's override minimum amount for the plan.",
                                        "example": "1.23"
                                    },
                                    "maximum_amount": {
                                        "type": "string",
                                        "description": "The subscription's override maximum amount for the plan.",
                                        "example": "1.23",
                                        "x-stoplight": {
                                            "id": "m1y2ltsz37w05"
                                        }
                                    },
                                    "coupon_redemption_code": {
                                        "type": "string",
                                        "description": "Redemption code to be used for this subscription. If the coupon cannot be found by its redemption code, or cannot be redeemed, an error response will be returned and the plan change will not be scheduled."
                                    }
                                },
                                "required": [
                                    "change_option"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription_id}/unschedule_pending_plan_changes": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "subscription_id",
                    "in": "path",
                    "required": true
                }
            ],
            "post": {
                "summary": "Unschedule pending plan changes",
                "operationId": "post-subscriptions-subscription_id-unschedule_pending_plan_changes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint can be used to unschedule any pending plan changes on an existing subscription.",
                "tags": [
                    "Subscription"
                ]
            }
        },
        "/subscriptions/{subscription_id}/unschedule_cancellation": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "subscription_id",
                    "in": "path",
                    "required": true
                }
            ],
            "post": {
                "summary": "Unschedule pending cancellation",
                "operationId": "post-subscriptions-subscription_id-unschedule_pending_cancellation",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint can be used to unschedule any pending cancellations for a subscription. \n\nTo be eligible, the subscription must currently be active and have a future cancellation (\"Auto-renew turned off\"). This operation will turn on auto-renew, ensuring that the subscription does not end at the currently scheduled cancellation time.",
                "tags": [
                    "Subscription"
                ]
            }
        },
        "/subscriptions/{subscription_id}/update_fixed_fee_quantity": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "subscription_id",
                    "in": "path",
                    "required": true
                }
            ],
            "post": {
                "summary": "Update fixed fee quantity",
                "operationId": "post-subscriptions-subscription_id-update-fixed-fee-quantity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint can be used to update the quantity for a fixed fee.\n\nTo be eligible, the subscription must currently be active and the price specified must be a fixed fee (not usage-based). This operation will immediately update the quantity for the fee, or if a `effective_date` is passed in, will update the quantity on the requested date at midnight in the customer's timezone. \n\nIn order to change the fixed fee quantity as of the next draft invoice for this subscription, pass `change_option=upcoming_invoice` without an `effective_date` specified.\n\nIf the fee is an in-advance fixed fee, it will also issue an immediate invoice for the difference for the remainder of the billing period.",
                "tags": [
                    "Subscription"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "price_id": {
                                        "type": "string",
                                        "description": "Price for which the quantity should be updated. Must be a fixed fee."
                                    },
                                    "quantity": {
                                        "type": "number"
                                    },
                                    "effective_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "The date that the quantity change should take effect, localized to the customer's timezone. If this parameter is not passed in, the quantity change is effective immediately.",
                                        "example": "\"2022-12-21\""
                                    },
                                    "change_option": {
                                        "type": "string",
                                        "x-stoplight": {
                                            "id": "exiyopgavm7qn"
                                        },
                                        "enum": [
                                            "immediate",
                                            "upcoming_invoice",
                                            "effective_date"
                                        ],
                                        "example": "effective_date",
                                        "description": "Determines when the change takes effect. Note that if `effective_date` is specified, this defautls to `effective_date`. Otherwise, this defaults to `immediate` unless it's explicitly set to `upcoming_invoice."
                                    }
                                },
                                "required": [
                                    "price_id",
                                    "quantity"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription_id}/schedule": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "subscription_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "View subscription schedule",
                "tags": [
                    "Subscription"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "start_date": {
                                                        "type": "string",
                                                        "example": "2022-05-12T07:00:00+00:00",
                                                        "format": "date-time"
                                                    },
                                                    "end_date": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "format": "date-time",
                                                        "example": "2022-06-12T07:00:00+00:00"
                                                    },
                                                    "plan": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "m2t5akQeh2obwxeU"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Example plan"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-subscriptions-subscription_id-schedule",
                "description": "This endpoint returns a [paginated](../docs/Pagination.md) list of all plans associated with a subscription along with their start and end dates. This list contains the subscription's initial plan along with past and future plan changes."
            }
        },
        "/plans/{plan_id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "plan_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "Retrieve a plan",
                "tags": [
                    "Plan"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plan"
                                }
                            }
                        }
                    }
                },
                "operationId": "get-plans-plan_id",
                "description": "This endpoint is used to fetch [plan](../reference/Orb-API.json/components/schemas/Plan) details given a plan identifier. It returns information about the prices included in the plan and their configuration, as well as the product that the plan is attached to.\n\n## Serialized prices\nOrb supports a few different pricing models out of the box. Each of these models is serialized differently in a given [Price](../reference/Orb-API.json/components/schemas/Price) object. The `model_type` field determines the key for the configuration object that is present. A detailed explanation of price types can be found in the [Price schema](../reference/Orb-API.json/components/schemas/Price). \n\n## Phases\nOrb supports plan phases, also known as contract ramps. For plans with phases, the serialized prices refer to all prices across all phases."
            }
        },
        "/plans/external_plan_id/{external_plan_id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "external_plan_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "Retrieve a plan by external plan ID",
                "tags": [
                    "Plan"
                ],
                "responses": {},
                "operationId": "get-plans-plan_id",
                "description": "This endpoint is used to fetch [plan](../reference/Orb-API.json/components/schemas/Plan) details given an external_plan_id identifier. It returns information about the prices included in the plan and their configuration, as well as the product that the plan is attached to.\n\n## Serialized prices\nOrb supports a few different pricing models out of the box. Each of these models is serialized differently in a given [Price](../reference/Orb-API.json/components/schemas/Price) object. The `model_type` field determines the key for the configuration object that is present. A detailed explanation of price types can be found in the [Price schema](../reference/Orb-API.json/components/schemas/Price). ",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Plan"
                            }
                        }
                    }
                }
            }
        },
        "/plans": {
            "get": {
                "summary": "List plans",
                "tags": [
                    "Plan"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Plan"
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-plans",
                "description": "This endpoint returns a list of all [plans](../reference/Orb-API.json/components/schemas/Plan) for an account in a list format. \n\nThe list of plans is ordered starting from the most recently created plan. The response also includes [`pagination_metadata`](../docs/Pagination.md), which lets the caller retrieve the next page of results if they exist.\n"
            }
        },
        "/customers/{customer_id}/usage": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "customer_id",
                    "in": "path",
                    "required": true
                }
            ],
            "patch": {
                "summary": "Amend customer usage",
                "operationId": "patch-customers-customer_id-usage",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "duplicate": [],
                                            "ingested": [
                                                "ac4cc0fa-bc08-475e-9bb5-3699a3b76636",
                                                "d799bc09-5a8d-4fee-bd2c-7073d239f035"
                                            ]
                                        }
                                    },
                                    "properties": {
                                        "duplicate": {
                                            "type": "array",
                                            "description": "An array of strings, corresponding to idempotency_key's marked as duplicates (previously ingested)",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "ingested": {
                                            "type": "array",
                                            "description": "An array of strings, corresponding to idempotency_key's which were successfully ingested.",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Successful Amendment": {
                                        "value": {}
                                    },
                                    "Bad Request - timestamp out of interval": {
                                        "value": {
                                            "status": 400,
                                            "title": "Request validation did not succeed.",
                                            "type": "https://docs.billwithorb.com/reference/error-responses#400-request-validation-errors",
                                            "validation_errors": [
                                                {
                                                    "idempotency_key": "df0ec302-6b3f-48c3-9021-820c69342a7c",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "7e5e0742-a849-4bd5-b485-a6ec93b92225",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "status": 400,
                                            "title": "Request validation did not succeed.",
                                            "type": "https://docs.billwithorb.com/reference/error-responses#400-request-validation-errors",
                                            "validation_errors": [
                                                {
                                                    "idempotency_key": "df0ec302-6b3f-48c3-9021-820c69342a7c",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "7e5e0742-a849-4bd5-b485-a6ec93b92225",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "dc991ebb-f819-43ea-b3c6-597a21d523d4",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "506eca27-32bc-4377-9eed-154488922318",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "96fb4939-fb36-4a85-9499-7dabbd0a178d",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "2c712860-e131-45f4-a828-4181096edf2a",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "a2167c53-75c7-4c92-9ca3-5511e119e6b3",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "0eb9cde3-8e8d-4898-aa78-fdaa47108c94",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "b581f2ee-5151-4b10-8abb-c41a86f63a3b",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "728012e4-7466-4cf0-b978-d31e84dacdfd",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "description": "HTTP Code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "Error message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "\"https://docs.billwithorb.com/reference/error-responses#400-request-validation-errors\""
                                        },
                                        "validation_errors": {
                                            "type": "array",
                                            "description": "Contains all failing validation events.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "idempotency_key": {
                                                        "type": "string"
                                                    },
                                                    "validation_errors": {
                                                        "type": "array",
                                                        "description": "An array of strings corresponding to each validation failure",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "[\"Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end.\"]"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "title",
                                        "type",
                                        "validation_errors"
                                    ]
                                },
                                "examples": {
                                    "Bad Request - timestamp out of interval": {
                                        "value": {
                                            "status": 400,
                                            "title": "Request validation did not succeed.",
                                            "type": "https://docs.billwithorb.com/reference/error-responses#400-request-validation-errors",
                                            "validation_errors": [
                                                {
                                                    "idempotency_key": "df0ec302-6b3f-48c3-9021-820c69342a7c",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "7e5e0742-a849-4bd5-b485-a6ec93b92225",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint is used to amend usage within a timeframe for a customer that has an active subscription.\n\nThis endpoint will mark _all_ existing events within `[timeframe_start, timeframe_end)` as _ignored_  for billing  purposes, and Orb will only use the _new_ events passed in the body of this request as the source of truth for that timeframe moving forwards. Note that a given time period can be amended any number of times, so events can be overwritten in subsequent calls to this endpoint.\n\nThis is a powerful and audit-safe mechanism to retroactively change usage data in cases where you need to:\n- decrease historical usage consumption because of degraded service availability in your systems\n- account for gaps from your usage reporting mechanism\n- make point-in-time fixes for specific event records, while retaining the original time of usage and associated metadata\n\nThis amendment API is designed with two explicit goals:\n1. Amendments are **always audit-safe**. The amendment process will still retain original events in the timeframe, though they will be ignored for billing calculations. For auditing and data fidelity purposes, Orb never overwrites or permanently deletes ingested usage data.\n2. Amendments always preserve data **consistency**. In other words, either an amendment is fully processed by the system (and the new events for the timeframe are honored rather than the existing ones) or the amendment request fails. To maintain this important property, Orb prevents _partial event ingestion_ on this endpoint.\n\n\n## Response semantics\n - Either all events are ingested successfully, or all fail to ingest (returning a `4xx` or `5xx` response code).\n- Any event that fails schema validation will lead to a `4xx` response. In this case, to maintain data consistency, Orb will not ingest any events and will also not deprecate existing events in the time period.\n- You can assume that the amendment is successful on receipt of a `2xx` response.While a successful response from this endpoint indicates that the new events have been ingested, updating usage totals happens asynchronously and may be delayed by a few minutes. \n\nAs emphasized above, Orb will never show an inconsistent state (e.g. in invoice previews or dashboards); either it will show the existing state (before the amendment) or the new state (with new events in the requested timeframe).\n\n\n## Sample request body\n\n```json\n{\n\t\"events\": [{\n\t\t\"event_name\": \"payment_processed\",\n\t\t\"timestamp\": \"2022-03-24T07:15:00Z\",\n\t\t\"properties\": {\n\t\t\t\"amount\": 100\n\t\t}\n\t}, {\n\t\t\"event_name\": \"payment_failed\",\n\t\t\"timestamp\": \"2022-03-24T07:15:00Z\",\n\t\t\"properties\": {\n\t\t\t\"amount\": 100\n\t\t}\n\t}]\n}\n```\n\n## Request Validation\n- The `timestamp` of each event reported must fall within the bounds of `timeframe_start` and `timeframe_end`. As with ingestion, all timestamps must be sent in ISO8601 format with UTC timezone offset.\n\n- Orb **does not accept an `idempotency_key`** with each event in this endpoint, since the entirety of the event list must be ingested to ensure consistency. On retryable errors, you should retry the request in its entirety, and assume that the amendment operation has not succeeded until receipt of a `2xx`.\n\n- Both `timeframe_start` and `timeframe_end` must be timestamps in the past. Furthermore, Orb will generally validate that the `timeframe_start` and `timeframe_end` fall within the customer's _current_ subscription billing period. However, Orb does allow amendments while in the grace period of the previous billing period; in this instance, the timeframe can start before the current period.\n\n\n## API Limits\nNote that Orb does not currently enforce a hard rate-limit for API usage or a maximum request payload size. Similar to the event ingestion API, this API is architected for high-throughput ingestion. It is also safe to _programmatically_ call this endpoint if your system can automatically detect a need for historical amendment.\n\nIn order to overwrite timeframes with a very large number of events, we suggest using multiple calls with small adjacent (e.g. every hour) timeframes.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2022-05-11T17:46:20Z"
                        },
                        "in": "query",
                        "name": "timeframe_start",
                        "description": "This bound is inclusive (i.e. events with this timestamp onward, inclusive will be updated)",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2022-05-11T17:46:20Z"
                        },
                        "in": "query",
                        "name": "timeframe_end",
                        "description": "This bound is exclusive (i.e. events before this timestamp will be updated)",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-examples": {
                                    "example-1": {
                                        "events": [
                                            {
                                                "event_name": "payment_processed",
                                                "timestamp": "2022-03-24T07:15:00Z",
                                                "properties": {
                                                    "amount": 100
                                                }
                                            },
                                            {
                                                "event_name": "payment_failed",
                                                "timestamp": "2022-03-24T07:15:00Z",
                                                "properties": {
                                                    "amount": 100
                                                }
                                            }
                                        ]
                                    }
                                },
                                "properties": {
                                    "events": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "event_name": {
                                                    "type": "string",
                                                    "description": "A name to meaningfully identify the action or event type."
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "description": "An ISO 8601 format date with no timezone offset (i.e. UTC). This should represent the time that usage was recorded, and is particularly important to attribute usage to a given billing period."
                                                },
                                                "properties": {
                                                    "type": "object",
                                                    "description": "A dictionary of custom properties. Values in this dictionary must be numeric, boolean, or strings. Nested dictionaries are disallowed."
                                                }
                                            },
                                            "required": [
                                                "event_name",
                                                "timestamp",
                                                "properties"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "events"
                                ]
                            },
                            "examples": {
                                "Successful Amendment": {
                                    "value": {
                                        "events": [
                                            {
                                                "event_name": "payment_processed",
                                                "timestamp": "2022-03-24T07:15:00Z",
                                                "properties": {
                                                    "amount": 100
                                                }
                                            },
                                            {
                                                "event_name": "payment_failed",
                                                "timestamp": "2022-03-24T07:15:00Z",
                                                "properties": {
                                                    "amount": 100
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "Customer"
                ]
            }
        },
        "/customers/external_customer_id/{external_customer_id}/usage": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "external_customer_id",
                    "in": "path",
                    "required": true
                }
            ],
            "patch": {
                "summary": "Amend customer usage by external ID",
                "operationId": "patch-customers-customer_id-usage",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "duplicate": [],
                                            "ingested": [
                                                "ac4cc0fa-bc08-475e-9bb5-3699a3b76636",
                                                "d799bc09-5a8d-4fee-bd2c-7073d239f035"
                                            ]
                                        }
                                    },
                                    "properties": {
                                        "duplicate": {
                                            "type": "array",
                                            "description": "An array of strings, corresponding to idempotency_key's marked as duplicates (previously ingested)",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "ingested": {
                                            "type": "array",
                                            "description": "An array of strings, corresponding to idempotency_key's which were successfully ingested.",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "Successful Amendment": {
                                        "value": {}
                                    },
                                    "Bad Request - timestamp out of interval": {
                                        "value": {
                                            "status": 400,
                                            "title": "Request validation did not succeed.",
                                            "type": "https://docs.billwithorb.com/reference/error-responses#400-request-validation-errors",
                                            "validation_errors": [
                                                {
                                                    "idempotency_key": "df0ec302-6b3f-48c3-9021-820c69342a7c",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "7e5e0742-a849-4bd5-b485-a6ec93b92225",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "x-examples": {
                                        "example-1": {
                                            "status": 400,
                                            "title": "Request validation did not succeed.",
                                            "type": "https://docs.billwithorb.com/reference/error-responses#400-request-validation-errors",
                                            "validation_errors": [
                                                {
                                                    "idempotency_key": "df0ec302-6b3f-48c3-9021-820c69342a7c",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "7e5e0742-a849-4bd5-b485-a6ec93b92225",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "dc991ebb-f819-43ea-b3c6-597a21d523d4",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "506eca27-32bc-4377-9eed-154488922318",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "96fb4939-fb36-4a85-9499-7dabbd0a178d",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "2c712860-e131-45f4-a828-4181096edf2a",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "a2167c53-75c7-4c92-9ca3-5511e119e6b3",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "0eb9cde3-8e8d-4898-aa78-fdaa47108c94",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "b581f2ee-5151-4b10-8abb-c41a86f63a3b",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "728012e4-7466-4cf0-b978-d31e84dacdfd",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "description": "HTTP Code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "Error message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "\"https://docs.billwithorb.com/reference/error-responses#400-request-validation-errors\""
                                        },
                                        "validation_errors": {
                                            "type": "array",
                                            "description": "Contains all failing validation events.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "idempotency_key": {
                                                        "type": "string"
                                                    },
                                                    "validation_errors": {
                                                        "type": "array",
                                                        "description": "An array of strings corresponding to each validation failure",
                                                        "items": {
                                                            "type": "string",
                                                            "example": "[\"Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end.\"]"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "title",
                                        "type",
                                        "validation_errors"
                                    ]
                                },
                                "examples": {
                                    "Bad Request - timestamp out of interval": {
                                        "value": {
                                            "status": 400,
                                            "title": "Request validation did not succeed.",
                                            "type": "https://docs.billwithorb.com/reference/error-responses#400-request-validation-errors",
                                            "validation_errors": [
                                                {
                                                    "idempotency_key": "df0ec302-6b3f-48c3-9021-820c69342a7c",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                },
                                                {
                                                    "idempotency_key": "7e5e0742-a849-4bd5-b485-a6ec93b92225",
                                                    "validation_errors": [
                                                        "Event timestamp 2022-05-11T17:46:41+00:00 must be at or after timeframe_start and before timeframe_end."
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint's resource and semantics exactly mirror [Amend customer usage](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1usage/patch) but operates on an [external customer ID](../docs/Customer-ID-Aliases.md) rather than an Orb issued identifier.",
                "parameters": [
                    {
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2022-05-11T17:46:20Z"
                        },
                        "in": "query",
                        "name": "timeframe_start",
                        "description": "This bound is inclusive (i.e. events with this timestamp onward, inclusive will be updated)",
                        "required": true
                    },
                    {
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2022-05-11T17:46:20Z"
                        },
                        "in": "query",
                        "name": "timeframe_end",
                        "description": "This bound is exclusive (i.e. events before this timestamp will be updated)",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-examples": {
                                    "example-1": {
                                        "events": [
                                            {
                                                "event_name": "payment_processed",
                                                "timestamp": "2022-03-24T07:15:00Z",
                                                "properties": {
                                                    "amount": 100
                                                }
                                            },
                                            {
                                                "event_name": "payment_failed",
                                                "timestamp": "2022-03-24T07:15:00Z",
                                                "properties": {
                                                    "amount": 100
                                                }
                                            }
                                        ]
                                    }
                                },
                                "properties": {
                                    "events": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "event_name": {
                                                    "type": "string",
                                                    "description": "A name to meaningfully identify the action or event type."
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "description": "An ISO 8601 format date with no timezone offset (i.e. UTC). This should represent the time that usage was recorded, and is particularly important to attribute usage to a given billing period."
                                                },
                                                "properties": {
                                                    "type": "object",
                                                    "description": "A dictionary of custom properties. Values in this dictionary must be numeric, boolean, or strings. Nested dictionaries are disallowed."
                                                }
                                            },
                                            "required": [
                                                "event_name",
                                                "timestamp",
                                                "properties"
                                            ]
                                        }
                                    }
                                },
                                "required": [
                                    "events"
                                ]
                            },
                            "examples": {
                                "Successful Amendment": {
                                    "value": {
                                        "events": [
                                            {
                                                "event_name": "payment_processed",
                                                "timestamp": "2022-03-24T07:15:00Z",
                                                "properties": {
                                                    "amount": 100
                                                }
                                            },
                                            {
                                                "event_name": "payment_failed",
                                                "timestamp": "2022-03-24T07:15:00Z",
                                                "properties": {
                                                    "amount": 100
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "Customer"
                ]
            }
        },
        "/events/search": {
            "post": {
                "summary": "Search events",
                "operationId": "post-events-search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "An array of events matching the specified search_criteria. If no events match, this array will be empty.",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    }
                                },
                                "examples": {
                                    "Events found": {
                                        "value": {
                                            "data": [
                                                {
                                                    "customer_id": "6urAfP3eqHso3a2k",
                                                    "event_name": "payment_processed",
                                                    "timestamp": "2022-05-11T21:33:13.1652304793Z",
                                                    "idempotency_key": "fQp2wSmK7CF9oPcu",
                                                    "properties": {
                                                        "amount": 100
                                                    }
                                                },
                                                {
                                                    "customer_id": "6urAfP3eqHso3a2k",
                                                    "event_name": "payment_processed",
                                                    "timestamp": "2022-05-11T21:33:13.1652304793Z",
                                                    "idempotency_key": "8h5rSNYgYj5ngws7",
                                                    "properties": {
                                                        "amount": 100
                                                    }
                                                }
                                            ],
                                            "pagination_metadata": {
                                                "has_more": false,
                                                "next_cursor": null
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint returns a filtered set of events for an account in a [paginated list format](../docs/Pagination.md). \n\nNote that this is a `POST` endpoint rather than a `GET` endpoint because it employs a JSON body for search criteria rather than query parameters, allowing for a more flexible search syntax.\n\nNote that a search criteria _must_ be specified. Currently, Orb supports the following criteria:\n- `event_ids`: This is an explicit array of IDs to filter by. Note that an event's ID is the `idempotency_key` that was originally used for ingestion.\n- `invoice_id`: This is an issued Orb invoice ID (see also [List Invoices](../reference/Orb-API.json/paths/~1invoices/get)). Orb will fetch all events that were used to calculate the invoice. In the common case, this will be a list of events whose `timestamp` property falls within the billing period specified by the invoice.\n\nBy default, Orb does not return _deprecated_ events in this endpoint.\n\nBy default, Orb will not throw a `404` if no events matched, Orb will return an empty array for `data` instead.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "invoice_id": {
                                        "type": "string",
                                        "description": "This is an issued Orb invoice ID (see also List Invoices). Orb will fetch all events that were used to calculate the invoice. In the common case, this will be a list of events whose timestamp property falls within the billing period specified by the invoice."
                                    },
                                    "event_ids": {
                                        "type": "array",
                                        "description": "This is an explicit array of IDs to filter by. Note that an event's ID is the idempotency_key that was originally used for ingestion. Values in this array will be treated case sensitively.",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "examples": {
                                "Search request by event_ids": {
                                    "value": {
                                        "event_ids": [
                                            "fQp2wSmK7CF9oPcu",
                                            "8h5rSNYgYj5ngws7"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/customers/external_customer_id/{external_customer_id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "external_customer_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "Retrieve a customer by external ID",
                "tags": [
                    "Customer"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    }
                },
                "operationId": "get-customers-external_customer_id-external_customer_id",
                "description": "This endpoint is used to fetch customer details given an `external_customer_id` (see [Customer ID Aliases](../docs/Customer-ID-Aliases.md)).\n\nNote that the resource and semantics of this endpoint exactly mirror [Get Customer](Orb-API.json/paths/~1customers/get)."
            },
            "put": {
                "summary": "Update a customer by external ID",
                "operationId": "put-customers-external_customer_id-external_customer_id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint is used to update customer details given an `external_customer_id` (see [Customer ID Aliases](../docs/Customer-ID-Aliases.md)).\n\nNote that the resource and semantics of this endpoint exactly mirror [Update Customer](Orb-API.json/paths/~1customers~1{customer_id}/put).",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "payment_provider": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "enum": [
                                            "quickbooks",
                                            "stripe_charge",
                                            "stripe_invoice",
                                            "bill.com"
                                        ],
                                        "description": "This is used for creating charges or invoices in an external system via Orb. When not in test mode:\n- the connection must first be configured in the Orb webapp. \n- if the provider is an invoicing provider (`stripe_invoice`, `quickbooks`, `bill.com`), any product mappings must first be configured with the Orb team."
                                    },
                                    "payment_provider_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "description": "The ID of this customer in an external payments solution, such as Stripe. This is used for creating charges or invoices in the external system via Orb."
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "billing_address": {
                                        "type": [
                                            "null",
                                            "object"
                                        ],
                                        "description": "The customer's billing address; all fields in the address are optional. This address appears on customer invoices.",
                                        "properties": {
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string",
                                                "description": "Two-letter country code (ISO 3166-1 alpha-2).",
                                                "example": "US"
                                            },
                                            "line1": {
                                                "type": "string"
                                            },
                                            "line2": {
                                                "type": "string"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "description": "ZIP or postal code"
                                            },
                                            "state": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "shipping_address": {
                                        "type": [
                                            "null",
                                            "object"
                                        ],
                                        "description": "The customer's shipping address; all fields in the address are optional. Note that downstream tax calculations are based on the shipping address.",
                                        "properties": {
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string",
                                                "description": "Two-letter country code (ISO 3166-1 alpha-2).",
                                                "example": "US"
                                            },
                                            "line1": {
                                                "type": "string"
                                            },
                                            "line2": {
                                                "type": "string"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "description": "ZIP or postal code"
                                            },
                                            "state": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Customer"
                ]
            }
        },
        "/events/{event_id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string",
                        "example": "fQp2wSmK7CF9oPcu"
                    },
                    "name": "event_id",
                    "in": "path",
                    "required": true,
                    "description": "Identical to the `idempotency_key` provided on event ingestion. Uniquely identifies an event in the system."
                }
            ],
            "put": {
                "summary": "Amend single event",
                "operationId": "put-events-event_id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "amended": {
                                            "type": "string",
                                            "description": "event_id of the amended event, if successfully ingested"
                                        }
                                    }
                                },
                                "examples": {
                                    "example-1": {
                                        "value": {
                                            "amended": "fQp2wSmK7CF9oPcu"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "description": "HTTP Code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "Error message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "\"https://docs.billwithorb.com/reference/error-responses#400-request-validation-errors\""
                                        },
                                        "validation_errors": {
                                            "type": "array",
                                            "description": "An array of strings corresponding to the validation failures",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint is used to amend a single usage event with a given `event_id`. `event_id` refers to the `idempotency_key` passed in during ingestion. The event will maintain its existing `event_id` after the amendment.\n\nThis endpoint will mark the existing event as ignored, and Orb will only use the new event passed in the body of this request as the source of truth for that `event_id`. Note that a single event can be amended any number of times, so the same event can be overwritten in subsequent calls to this endpoint, or overwritten using the [Amend customer usage](../reference/Orb-API.json/paths/~1customers~1{customer_id}~1usage/patch) endpoint. Only a single event with a given `event_id` will be considered the source of truth at any given time.\n\nThis is a powerful and audit-safe mechanism to retroactively update a single event in cases where you need to:\n* update an event with new metadata as you iterate on your pricing model\n* update an event based on the result of an external API call (ex. call to a payment gateway succeeded or failed)\n\nThis amendment API is always audit-safe. The process will still retain the original event, though it will be ignored for billing calculations. For auditing and data fidelity purposes, Orb never overwrites or permanently deletes ingested usage data.\n\n## Request validation\n* The `timestamp` of the new event must match the `timestamp` of the existing event already ingested. As with ingestion, all timestamps must be sent in ISO8601 format with UTC timezone offset.\n* The `customer_id` or `external_customer_id` of the new event must match the `customer_id` or `external_customer_id` of the existing event already ingested. Exactly one of `customer_id` and `external_customer_id` should be specified, and similar to ingestion, the ID must identify a Customer resource within Orb. Unlike ingestion, for event amendment, we strictly enforce that the Customer must be in the Orb system, even during the initial integration period. We do not allow updating the `Customer` an event is associated with.\n* Orb does not accept an `idempotency_key` with the event in this endpoint, since this request is by design idempotent. On retryable errors, you should retry the request and assume the amendment operation has not succeeded until receipt of a 2xx. \n* The event's `timestamp` must fall within the customer's current subscription's billing period, or within the grace period of the customer's current subscription's previous billing period.",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "x-examples": {
                                    "example-1": {
                                        "customer_id": "AwkijnfK9DMk9pzm",
                                        "event_name": "users",
                                        "timestamp": "2022-05-23T18:35:10Z",
                                        "properties": {
                                            "event": 89
                                        }
                                    }
                                },
                                "properties": {
                                    "external_customer_id": {
                                        "type": "string",
                                        "description": "An alias for the Orb customer, whose mapping is specified when creating the customer",
                                        "minLength": 1
                                    },
                                    "customer_id": {
                                        "type": "string",
                                        "description": "The Orb Customer identifier"
                                    },
                                    "event_name": {
                                        "type": "string",
                                        "description": "A name to meaningfully identify the action or event type."
                                    },
                                    "timestamp": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "An ISO 8601 format date with no timezone offset (i.e. UTC). This should represent the time that usage was recorded, and is particularly important to attribute usage to a given billing period.",
                                        "example": "2020-12-09T16:09:53Z",
                                        "minLength": 1
                                    },
                                    "properties": {
                                        "type": "object",
                                        "description": "A dictionary of custom properties. Values in this dictionary must be numeric, boolean, or strings. Nested dictionaries are disallowed."
                                    }
                                },
                                "required": [
                                    "event_name",
                                    "timestamp",
                                    "properties"
                                ]
                            },
                            "examples": {
                                "example-1": {
                                    "value": {
                                        "customer_id": "6urAfP3eqHso3a2k",
                                        "event_name": "payment_processed",
                                        "timestamp": "2020-12-09T16:09:53Z",
                                        "properties": {
                                            "amount": 100
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/events/{event_id}/deprecate": {
            "parameters": [
                {
                    "schema": {
                        "type": "string",
                        "example": "fQp2wSmK7CF9oPcu"
                    },
                    "name": "event_id",
                    "in": "path",
                    "required": true,
                    "description": "Identical to the `idempotency_key` provided on event ingestion. Uniquely identifies an event in the system."
                }
            ],
            "put": {
                "summary": "Deprecate single event",
                "operationId": "put-events-event_id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "deprecated": {
                                            "type": "string",
                                            "description": "event_id of the deprecated event, if successfully updated"
                                        }
                                    }
                                },
                                "examples": {
                                    "example-1": {
                                        "value": {
                                            "deprecated": "fQp2wSmK7CF9oPcu"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "description": "HTTP Code"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "Error message"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "\"https://docs.billwithorb.com/reference/error-responses#400-request-validation-errors\""
                                        },
                                        "validation_errors": {
                                            "type": "array",
                                            "description": "An array of strings corresponding to the validation failures",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint is used to deprecate a single usage event with a given `event_id`. `event_id` refers to the `idempotency_key` passed in during ingestion. \n\nThis endpoint will mark the existing event as ignored. Note that if you attempt to re-ingest an event with the same `event_id` as a deprecated event, Orb will return an error.\n\nThis is a powerful and audit-safe mechanism to retroactively deprecate a single event in cases where you need to:\n* no longer bill for an event that was improperly reported\n* no longer bill for an event based on the result of an external API call (ex. call to a payment gateway failed and the user should not be billed)\n\nIf you want to only change specific properties of an event, but keep the event as part of the billing calculation, use the [Amend single event](../reference/Orb-API.json/paths/~1events~1{event_id}/put) endpoint instead.\n\nThis API is always audit-safe. The process will still retain the deprecated event, though it will be ignored for billing calculations. For auditing and data fidelity purposes, Orb never overwrites or permanently deletes ingested usage data.\n\n## Request validation\n* Orb does not accept an `idempotency_key` with the event in this endpoint, since this request is by design idempotent. On retryable errors, you should retry the request and assume the deprecation operation has not succeeded until receipt of a 2xx. \n* The event's `timestamp` must fall within the customer's current subscription's billing period, or within the grace period of the customer's current subscription's previous billing period. Orb does not allow deprecating events for billing periods that have already invoiced customers.\n* The `customer_id` or the `external_customer_id` of the original event ingestion request must identify a Customer resource within Orb, even if this event was ingested during the initial integration period. We do not allow deprecating events for customers not in the Orb system.",
                "parameters": [],
                "tags": [
                    "Event"
                ]
            }
        },
        "/customers/{customer_id}/balance_transactions": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "customer_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "Get customer balance transactions",
                "tags": [
                    "Customer"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Customer-balance-transaction"
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-customers-customer_id-balance_transactions",
                "description": "# The customer balance\n\nThe customer balance is an amount in the customer's currency, which Orb automatically applies to subsequent invoices. This balance can be adjusted manually via Orb's webapp on the customer details page. You can use this balance to provide a fixed mid-period credit to the customer. Commonly, this is done due to system downtime/SLA violation, or an adhoc adjustment discussed with the customer.\n\nIf the balance is a positive value at the time of invoicing, it represents that the customer has credit that should be used to offset the amount due on the next issued invoice. In this case, Orb will automatically reduce the next invoice by the balance amount, and roll over any remaining balance if the invoice is fully discounted.\n\nIf the balance is a negative value at the time of invoicing, Orb will increase the invoice's amount due with a positive adjustment, and reset the balance to 0.\n\nThis endpoint retrieves all customer balance transactions in reverse chronological order for a single customer, providing a complete audit trail of all adjustments and invoice applications.\n\n## Eligibility\n\nThe customer balance can only be applied to invoices or adjusted manually if invoices are not synced to a separate invoicing provider. If a payment gateway such as Stripe is used, the balance will be applied to the invoice before forwarding payment to the gateway."
            },
            "post": {
                "summary": "Create a customer balance transaction",
                "operationId": "post-customers-customer_id-balance_transactions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer-balance-transaction"
                                }
                            }
                        }
                    }
                },
                "description": "Creates an immutable balance transaction that updates the customer's balance and returns back the newly created [transaction](../reference/Orb-API.json/components/schemas/Customer-balance-transaction).",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "string",
                                        "example": "1.00",
                                        "minLength": 1
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "increment",
                                            "decrement"
                                        ]
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "An optional description that can be specified around this entry."
                                    }
                                },
                                "required": [
                                    "amount",
                                    "type"
                                ]
                            },
                            "examples": {
                                "Example 1": {
                                    "value": {
                                        "amount": "1.00",
                                        "type": "increment",
                                        "description": "Adjustment to the customer balance"
                                    }
                                }
                            }
                        }
                    },
                    "description": ""
                },
                "tags": [
                    "Customer"
                ]
            }
        },
        "/subscriptions/{subscription_id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "subscription_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "Retrieve a subscription",
                "tags": [
                    "Subscription"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    }
                },
                "operationId": "get-subscriptions-subscription_id",
                "description": "This endpoint is used to fetch a [Subscription](../reference/Orb-API.json/components/schemas/Subscription) given an identifier."
            }
        },
        "/invoices/{invoice_id}/void": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "invoice_id",
                    "in": "path",
                    "required": true
                }
            ],
            "post": {
                "summary": "Void an invoice",
                "operationId": "post-invoices-invoice_id-void",
                "description": "This endpoint allows an invoice's status to be set the `void` status. This can only be done to invoices that are in the `issued` status.\n\nIf the associated invoice has used the customer balance to change the amount due, the customer balance operation will be reverted. For example, if the invoice used $10 of customer balance, that amount will be added back to the customer balance upon voiding.",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "tags": [
                    "Invoice"
                ]
            }
        },
        "/invoices/{invoice_id}/issue": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "invoice_id",
                    "in": "path",
                    "required": true
                }
            ],
            "post": {
                "summary": "Issue an invoice",
                "operationId": "post-invoices-invoice_id-issue",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "description": "This endpoint allows an eligible invoice to be issued manually. This is only possible with invoices where `status` is `draft`, `will_auto_issue` is true, and an `eligible_to_issue_at` is a time in the past.\n\nIssuing an invoice could possibly trigger side effects, some of which could be customer-visible (e.g. sending emails, auto-collecting payment, syncing the invoice to external providers, etc)."
            }
        },
        "/coupons": {
            "get": {
                "summary": "List coupons",
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Coupon"
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-coupons",
                "parameters": [
                    {
                        "schema": {
                            "type": "boolean",
                            "default": "false"
                        },
                        "in": "query",
                        "name": "show_archived",
                        "description": "Show archived coupons as well (by default, this endpoint only returns active coupons)."
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "redemption_code",
                        "description": "Filter to coupons matching this redemption code."
                    }
                ],
                "description": "This endpoint returns a list of all [coupons](../reference/Orb-API.json/components/schemas/Coupon) for an account in a list format. \n\nThe list of coupons is ordered starting from the most recently created coupon. The response also includes [`pagination_metadata`](../docs/Pagination.md), which lets the caller retrieve the next page of results if they exist. More information about pagination can be found in the [Pagination-metadata schema](../reference/Orb-API.json/components/schemas/Pagination-metadata)."
            },
            "post": {
                "summary": "Create a coupon",
                "operationId": "post-coupons",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "description": "This endpoint allows the creation of coupons, which can then be redeemed at subscription creation or plan change.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coupon"
                            }
                        }
                    }
                },
                "tags": [
                    "Coupon"
                ]
            },
            "parameters": []
        },
        "/coupons/{coupon_id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "coupon_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "Retrieve a coupon",
                "tags": [
                    "Coupon"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon"
                                }
                            }
                        }
                    }
                },
                "operationId": "get-coupons-coupon_id",
                "description": "This endpoint retrieves a coupon by its ID. To fetch coupons by their redemption code, use the [List coupons](../reference/Orb-API.json/paths/~1coupons/get) endpoint with the `redemption_code` parameter."
            }
        },
        "/coupons/{coupon_id}/subscriptions": {
            "get": {
                "summary": "List subscriptions for a coupon",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Subscription"
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-subscriptions",
                "description": "This endpoint returns a list of all subscriptions that have redeemed a given coupon as a [paginated](../docs/Pagination.md) list, ordered starting from the most recently created subscription. For a full discussion of the subscription resource, see [Subscription](../reference/Orb-API.json/components/schemas/Subscription).",
                "parameters": [],
                "tags": [
                    "Coupon"
                ]
            },
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "coupon_id",
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/coupons/{coupon_id}/archive": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "coupon_id",
                    "in": "path",
                    "required": true
                }
            ],
            "post": {
                "summary": "Archive a coupon",
                "operationId": "post-coupons-coupon_id-archive",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon"
                                }
                            }
                        }
                    }
                },
                "description": "This endpoint allows a coupon to be archived. Archived coupons can no longer be redeemed, and will be hidden from lists of active coupons. Additionally, once a coupon is archived, its redemption code can be reused for a different coupon.",
                "tags": [
                    "Coupon"
                ]
            }
        },
        "/invoice_line_items": {
            "post": {
                "summary": "Create invoice line item",
                "operationId": "post-invoice_line_items",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice-line-item"
                                }
                            }
                        }
                    }
                },
                "description": "This creates a one-off fixed fee [Invoice line item](../reference/Orb-API.json/components/schemas/Invoice-line-item) on an [Invoice](../reference/Orb-API.json/components/schemas/Invoice). This can only be done for invoices that are in a `draft` status.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "invoice_id": {
                                        "type": "string",
                                        "x-stoplight": {
                                            "id": "4khy3nwzktxv7"
                                        },
                                        "description": "The id of the `Invoice` to add this line item."
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "x-stoplight": {
                                            "id": "47hhsws4z2i13"
                                        },
                                        "description": "The number of units on the line item"
                                    },
                                    "amount": {
                                        "type": "string",
                                        "x-stoplight": {
                                            "id": "oyelnzh9bgxpc"
                                        },
                                        "description": "The total amount in the invoice's currency to add to the line item."
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "x-stoplight": {
                                            "id": "avl5tsumlxnz2"
                                        },
                                        "description": "An date string to specify the line item's start date in the customer's timezone.",
                                        "format": "date"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "x-stoplight": {
                                            "id": "ubvpjpeo0e08h"
                                        },
                                        "description": "An date string to specify the line item's end date in the customer's timezone.",
                                        "format": "date"
                                    },
                                    "name": {
                                        "type": "string",
                                        "x-stoplight": {
                                            "id": "zbezq0rfcxq0r"
                                        },
                                        "description": "The item name associated with this line item. If an item with the same name exists in Orb, that item will be associated with the line item."
                                    }
                                },
                                "required": [
                                    "invoice_id",
                                    "quantity",
                                    "amount",
                                    "start_date",
                                    "end_date",
                                    "name"
                                ]
                            },
                            "examples": {
                                "Example 1": {
                                    "value": {
                                        "invoice_id": "NSKM2cko3UXNDNLg",
                                        "quantity": 1,
                                        "amount": "20",
                                        "start_date": "2023-03-01",
                                        "end_date": "2023-03-31",
                                        "name": "Additional price"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invoice"
                ]
            }
        },
        "/events/backfills": {
            "get": {
                "summary": "List backfills",
                "tags": [
                    "Event"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "x-stoplight": {
                                                "id": "liuo3tdf713ou"
                                            },
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Backfill",
                                                "x-stoplight": {
                                                    "id": "751ep96c03hho"
                                                }
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-events-backfills",
                "description": "This endpoint returns a list of all [backfills](../reference/Orb-API.json/components/schemas/Backfill) in a list format. \n\nThe list of backfills is ordered starting from the most recently created backfill. The response also includes [`pagination_metadata`](../docs/Pagination.md), which lets the caller retrieve the next page of results if they exist. More information about pagination can be found in the [Pagination-metadata schema](../reference/Orb-API.json/components/schemas/Pagination-metadata)."
            },
            "post": {
                "summary": "Create a backfill",
                "operationId": "post-events-backfills",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Backfill"
                                }
                            }
                        }
                    }
                },
                "description": "Creating the backfill enables adding or replacing past events, even those that are older than the ingestion grace period. Performing a backfill in Orb involves 3 steps:\n\n1. Create the backfill, specifying its parameters.\n2. [Ingest](../reference/Orb-API.json/paths/~1ingest/post) usage events, referencing the backfill (query parameter `backfill_id`).\n3. [Close](../reference/Orb-API.json/paths/~1events~1backfills~1{backfill_id}~1close/post) the backfill, propagating the update in past usage throughout Orb.\n\nChanges from a backfill are not reflected until the backfill is closed, so you won’t need to worry about your customers seeing partially updated usage data. Backfills are also reversible, so you’ll be able to revert a backfill if you’ve made a mistake.\n\nThis endpoint will return a backfill object, which contains an `id`. That `id` can then be used as the `backfill_id` query parameter to the event ingestion endpoint to associate ingested events with this backfill. The effects (e.g. updated usage graphs) of this backfill will not take place until the backfill is closed.\n\nIf the `replace_existing_events` is `true`, existing events in the backfill's timeframe will be replaced with the newly ingested events associated with the backfill. If `false`, newly ingested events will be added to the existing events.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "replace_existing_events": {
                                        "type": "boolean",
                                        "x-stoplight": {
                                            "id": "0ub0c5gey0vhe"
                                        },
                                        "description": "If true, replaces all existing events in the timeframe with the newly ingested events. If false, adds the newly ingested events to the existing events."
                                    },
                                    "timeframe_start": {
                                        "type": "string",
                                        "x-stoplight": {
                                            "id": "mbemq33zo7gd9"
                                        },
                                        "format": "date-time",
                                        "description": "The (inclusive) start of the usage timeframe affected by this backfill."
                                    },
                                    "close_time": {
                                        "type": "string",
                                        "x-stoplight": {
                                            "id": "makiclnbyig7a"
                                        },
                                        "format": "date-time",
                                        "description": "The time at which no more events will be accepted for this backfill. The backfill will automatically begin reflecting throughout Orb at the close time. If not specified, it will default to 1 day after the creation of the backfill."
                                    },
                                    "timeframe_end": {
                                        "type": "string",
                                        "x-stoplight": {
                                            "id": "g6o02qx5umgr7"
                                        },
                                        "format": "date-time",
                                        "description": "The (exclusive) end of the usage timeframe affected by this backfill."
                                    },
                                    "customer_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "x-stoplight": {
                                            "id": "ios9tiry6ndxg"
                                        },
                                        "description": "The ID of the customer to which this backfill is scoped. (cannot be used with `external_customer_id`)"
                                    },
                                    "external_customer_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "x-stoplight": {
                                            "id": "c5daspzzwkip1"
                                        },
                                        "description": "The external customer ID of the customer to which this backfill is scoped. (cannot be used with `customer_id`)"
                                    }
                                },
                                "required": [
                                    "replace_existing_events",
                                    "timeframe_start",
                                    "timeframe_end"
                                ]
                            },
                            "examples": {
                                "Example 1": {
                                    "value": {
                                        "replace_existing_events": true,
                                        "timeframe_start": "2019-08-24T14:15:22Z",
                                        "close_time": "2019-08-24T14:15:22Z",
                                        "timeframe_end": "2019-08-24T14:15:22Z",
                                        "customer_id": "UjCS552NS9k2A3Zk",
                                        "external_customer_id": "acme_inc"
                                    }
                                }
                            }
                        }
                    },
                    "description": "The total duration of a backfill cannot be longer than 20 days. \n\nThe fields `customer_id` and `external_customer_id` are mutually exclusive. Please only specify one."
                },
                "tags": [
                    "Event"
                ]
            }
        },
        "/events/backfills/{backfill_id}/close": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "backfill_id",
                    "in": "path",
                    "required": true
                }
            ],
            "post": {
                "summary": "Close a backfill",
                "operationId": "post-events-backfills-backfill_id-close",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Backfill"
                                }
                            }
                        }
                    }
                },
                "description": "Closing a backfill makes the updated usage visible in Orb. Upon closing a backfill, Orb will asynchronously reflect the updated usage in invoice amounts and usage graphs. Once all of the updates are complete, the backfill's status will transition to `reflected`.\n\n",
                "tags": [
                    "Event"
                ]
            }
        },
        "/events/backfills/{backfill_id}/revert": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "backfill_id",
                    "in": "path",
                    "required": true
                }
            ],
            "post": {
                "summary": "Revert a backfill",
                "operationId": "post-events-backfills-backfill_id-revert",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Backfill"
                                }
                            }
                        }
                    }
                },
                "description": "Reverting a backfill undoes all the effects of closing the backfill. If the backfill is reflected, the status will transition to `pending_revert` while the effects of the backfill are undone. Once all effects are undone, the backfill will transition to `reverted`.\n\nIf a backfill is reverted before its closed, no usage will be updated as a result of the backfill and it will immediately transition to `reverted`.",
                "tags": [
                    "Event"
                ]
            }
        },
        "/credit_notes": {
            "get": {
                "summary": "List credit notes",
                "tags": [
                    "Credit note"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "x-stoplight": {
                                                "id": "kvamgmbwzw3g2"
                                            },
                                            "items": {
                                                "$ref": "#/components/schemas/Credit-note",
                                                "x-stoplight": {
                                                    "id": "o8z5sid71s1tx"
                                                }
                                            }
                                        },
                                        "pagination_metadata": {
                                            "type": "object",
                                            "x-sl-internally-excluded": true,
                                            "x-sl-error-message": "You do not have permission to view this reference"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "operationId": "get-credit_note",
                "description": "This endpoint returns a list of all [`Credit Note`](../reference/Orb-API.json/components/schemas/Credit-note)s for an account in a list format. \n\nThe list of credit notes is ordered starting from the most recently created date. The response also includes [`pagination_metadata`](../docs/Pagination.md), which lets the caller retrieve the next page of results if they exist.",
                "requestBody": {
                    "content": {}
                },
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "subscription_id",
                        "description": "Filter by a specific subscription"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "customer_id",
                        "description": "Filter by a specific customer (cannot be used with `external_customer_id`)"
                    },
                    {
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "name": "external_customer_id",
                        "description": "Filter by a specific customer (cannot be used with `customer_id`)"
                    }
                ]
            },
            "parameters": []
        },
        "/credit_notes/{credit_note_id}": {
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "credit_note_id",
                    "in": "path",
                    "required": true
                }
            ],
            "get": {
                "summary": "Retrieve a credit note",
                "tags": [
                    "Credit note"
                ],
                "responses": {},
                "operationId": "get-credit_notes-credit_note_id",
                "description": "This endpoint is used to fetch a [`Credit note`](../reference/Orb-API.json/components/schemas/Credit-note) given an identifier.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credit-note"
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Subscription": {
                "description": "A subscription represents the purchase of a plan by a customer.\n\nBy default, subscriptions begin on the day that they're created and renew automatically for each billing cycle at the cadence that's configured in the plan definition.\n\nSubscriptions also default to **beginning of month alignment**, which means the first invoice issued for the subscription will have pro-rated charges between the `start_date` and the first of the following month. Subsequent billing periods will always start and end on a month boundary (e.g. subsequent month starts for monthly billing).\n\nDepending on the plan configuration, any _flat_ recurring fees will be billed either at the beginning (in-advance) or end (in-arrears) of each billing cycle. Plans default to **in-advance billing**. Usage-based fees are billed in arrears as usage is accumulated. In the normal course of events, you can expect an invoice to contain usage-based charges for the previous period, and a recurring fee for the following period.",
                "type": "object",
                "x-examples": {
                    "example-1": {
                        "created_at": "2022-04-11T21:20:14+00:00",
                        "customer": {
                            "billing_address": null,
                            "created_at": "2022-04-11T21:19:42+00:00",
                            "email": "acme@gmail.com",
                            "external_customer_id": "acme-inc",
                            "id": "6xaQhrDx8LSzCnnt",
                            "name": "Acme, Inc.",
                            "payment_provider": null,
                            "payment_provider_id": null,
                            "shipping_address": null,
                            "timezone": "America/Los_Angeles"
                        },
                        "end_date": null,
                        "id": "EsBmLqUwH9xvHNGp",
                        "plan": {
                            "base_plan_id": null,
                            "created_at": "2022-04-11T21:11:52+00:00",
                            "currency": "usd",
                            "description": "Fees for cloud storage.",
                            "id": "WVBeRt3K3etjoEVz",
                            "minimum_amount": null,
                            "name": "Cloud storage plan",
                            "prices": [
                                {
                                    "billable_metric": {
                                        "id": "dUmCTVBzanC4Pecs"
                                    },
                                    "cadence": "monthly",
                                    "created_at": "2022-04-11T21:11:52+00:00",
                                    "id": "9f5mfzygYqQo2SCm",
                                    "minimum_amount": null,
                                    "model_type": "unit",
                                    "name": "Batch Data Ingested (Gb)",
                                    "unit_config": {
                                        "unit_amount": "2.00"
                                    }
                                }
                            ],
                            "product": {
                                "created_at": "2021-07-27T23:17:41+00:00",
                                "id": "GKbznn4PwPa3SkUQ",
                                "name": "SuperScaleDB Cloud"
                            }
                        },
                        "start_date": "2022-04-11T07:00:00+00:00",
                        "status": "active"
                    }
                },
                "title": "The subscription object",
                "x-tags": [
                    "Subscription"
                ],
                "examples": [
                    {
                        "created_at": "2019-08-24T14:15:22Z",
                        "customer": {
                            "id": "UFHPn8Es9sctYH5k",
                            "name": "Moon Microsystems, Inc.",
                            "email": "larry@moon.com",
                            "timezone": "America/New_York",
                            "payment_provider_id": "cus_81fz2febyT2iMk",
                            "payment_provider": "stripe",
                            "created_at": "2021-07-30T17:10:08.000000"
                        },
                        "end_date": "2019-08-24T14:15:22Z",
                        "id": "nL4qyvbhwBP364jh",
                        "plan": {
                            "created_at": "2021-07-18T15:45:03.0000+00:00",
                            "description": "",
                            "id": "DBhwNcMNfYgeBGpn",
                            "external_plan_id": "pay_as_you_go",
                            "currency": "usd",
                            "name": "Pay As You Go",
                            "prices": [
                                {
                                    "billable_metric": {
                                        "id": "dUmCTVBzan14PeDs"
                                    },
                                    "cadence": "monthly",
                                    "created_at": "2021-07-18T15:45:03.0000+00:00",
                                    "id": "RtpDt57Uug2mJeNK",
                                    "model_type": "unit",
                                    "name": "Fee",
                                    "unit_config": {
                                        "unit_amount": "100.00"
                                    },
                                    "plan_phase_order": null
                                }
                            ],
                            "product": {
                                "created_at": "2021-07-20T23:17:41.128461+00:00",
                                "id": "GKbznn4PwDa3SkUQ",
                                "name": "Test Product"
                            },
                            "discount": {}
                        },
                        "start_date": "2019-08-24T14:15:22Z",
                        "status": "active",
                        "active_plan_phase_order": 0,
                        "current_billing_period_start_date": "2019-08-24T14:15:22Z",
                        "current_billing_period_end_date": "2019-08-24T14:15:22Z"
                    }
                ],
                "properties": {
                    "created_at": {
                        "type": "string",
                        "minLength": 1,
                        "format": "date-time"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/Customer"
                    },
                    "end_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The date Orb stops billing for this subscription."
                    },
                    "id": {
                        "type": "string",
                        "minLength": 1,
                        "example": "nL4qyvbhwBP364jh"
                    },
                    "plan": {
                        "$ref": "#/components/schemas/Plan"
                    },
                    "start_date": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The date Orb starts billing for this subscription.",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "minLength": 1,
                        "enum": [
                            "active",
                            "ended",
                            "upcoming"
                        ]
                    },
                    "active_plan_phase_order": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "description": "The current plan phase that is active, only if the subscription's plan has phases."
                    },
                    "current_billing_period_start_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The start of the current billing period. This is an inclusive timestamp; the instant returned is exactly the beginning of the billing period. Set to null if the subscription is not currently active."
                    },
                    "current_billing_period_end_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "The end of the current billing period. This is an exclusive timestamp, such that the instant returned is not part of the billing period. Set to null for subscriptions that are not currently active."
                    },
                    "fixed_fee_quantity_schedule": {
                        "type": "array",
                        "description": "List of all fixed fee quantities associated with this subscription, with their start and end dates. This list contains the initial quantity along with quantity changes.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "end_date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2022-06-12T07:00:00+00:00"
                                },
                                "price_id": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "number",
                                    "example": "4.0"
                                },
                                "start_date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2022-05-12T07:00:00+00:00"
                                }
                            }
                        }
                    },
                    "net_terms": {
                        "type": "integer",
                        "description": "Determines the difference between the invoice issue date for subscription invoices as the date that they are due. A value of \"0\" here represents that the invoice is due on issue, whereas a value of 30 represents that the customer has a month to pay the invoice."
                    },
                    "auto_collection": {
                        "type": "boolean",
                        "description": "Determines whether issued invoices for this subscription will automatically be charged with the saved payment method on the due date. This property defaults to the plan's behavior."
                    },
                    "default_invoice_memo": {
                        "type": "string",
                        "description": "Determines the default memo on this subscriptions' invoices. Note that if this is not provided, it is determined by the plan configuration."
                    },
                    "redeemed_coupon": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "properties": {
                            "coupon_id": {
                                "type": "string"
                            },
                            "start_date": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The effective start time of this coupon - that is, when its corresponding discount starts applying."
                            },
                            "end_date": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time",
                                "description": "The effective end time for the coupon, after which point  it'll no longer apply to invoices for this subscription."
                            }
                        }
                    },
                    "billing_cycle_day": {
                        "type": "number",
                        "example": 1,
                        "minimum": 1,
                        "maximum": 31,
                        "description": "The day of the month on which the billing cycle is anchored. If the maximum number of days in a month is greater than this value, the last day of the month is the billing cycle day (e.g. billing_cycle_day=31 for April means the billing period begins on the 30th."
                    },
                    "metadata": {
                        "type": "object",
                        "x-stoplight": {
                            "id": "zblftrs94cib9"
                        },
                        "description": "User specified key-value pairs. If no metadata was specified at subscription creation time, this defaults to an empty dictionary."
                    }
                },
                "required": [
                    "created_at",
                    "customer",
                    "end_date",
                    "id",
                    "plan",
                    "start_date",
                    "status",
                    "fixed_fee_quantity_schedule",
                    "billing_cycle_day",
                    "metadata"
                ]
            },
            "Customer": {
                "description": "A customer is a buyer of your products, and the other party to the billing relationship.\n\nIn Orb, customers are assigned system generated identifiers automatically, but it's often desirable to have these match existing identifiers in your system. To avoid having to denormalize Orb ID information, you can pass in an `external_customer_id` with your own identifier. See [Customer ID Aliases](../docs/Customer-ID-Aliases.md) for further information about how these aliases work in Orb.\n\nIn addition to having an identifier in your system, a customer may exist in a payment provider solution like Stripe. Use the `payment_provider_id` and the `payment_provider` enum field to express this mapping.\n\nA customer also has a timezone (from the standard [IANA timezone database](https://www.iana.org/time-zones)), which defaults to your account's timezone. See [Timezone localization](../docs/Timezone-localization.md) for information on what this timezone parameter influences within Orb.",
                "type": "object",
                "x-examples": {
                    "example-1": {
                        "id": "UFHPn8Es9sctYH5k",
                        "name": "Moon Microsystems, Inc.",
                        "email": "larry@moon.com",
                        "timezone": "America/New_York",
                        "payment_provider_id": "cus_81fz2febyT2iMk",
                        "payment_provider": "stripe",
                        "created_at": "2021-07-30T17:10:08.000000"
                    }
                },
                "examples": [
                    {
                        "id": "UFHPn8Es9sctYH5k",
                        "name": "Moon Microsystems, Inc.",
                        "email": "larry@moon.com",
                        "timezone": "America/New_York",
                        "payment_provider_id": "cus_81fz2febyT2iMk",
                        "payment_provider": "stripe",
                        "created_at": "2021-07-30T17:10:08.000000"
                    }
                ],
                "title": "The customer object",
                "x-tags": [
                    "Customer"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The full name of the customer"
                    },
                    "external_customer_id": {
                        "type": "string",
                        "description": "An optional user-defined ID for this customer resource, used throughout the system as an alias for this Customer. Use this field to identify a customer by an existing identifier in your system."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "email": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A valid customer email, to be used for notifications. When Orb triggers payment through a payment gateway, this email will be used for any automatically issued receipts."
                    },
                    "timezone": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A timezone identifier from the IANA timezone database, such as \"America/Los_Angeles\". This defaults to your account's timezone if not set. This cannot be changed after customer creation.",
                        "default": "UTC",
                        "example": "America/Los_Angeles"
                    },
                    "payment_provider_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "The ID of this customer in an external payments solution, such as Stripe. This is used for creating charges or invoices in the external system via Orb."
                    },
                    "payment_provider": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "enum": [
                            "stripe",
                            "quickbooks",
                            "bill.com",
                            "stripe_charge",
                            "stripe_invoice"
                        ],
                        "default": null,
                        "description": "The external payments or invoicing solution connected to this customer."
                    },
                    "created_at": {
                        "type": "string",
                        "minLength": 1,
                        "format": "date-time"
                    },
                    "shipping_address": {
                        "type": [
                            "null",
                            "object"
                        ],
                        "description": "The customer's shipping address; all fields in the address are optional. Note that downstream tax calculations are based on the shipping address.",
                        "properties": {
                            "city": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string",
                                "description": "Two-letter country code (ISO 3166-1 alpha-2).",
                                "example": "US"
                            },
                            "line1": {
                                "type": "string"
                            },
                            "line2": {
                                "type": "string"
                            },
                            "postal_code": {
                                "type": "string",
                                "description": "ZIP or postal code"
                            },
                            "state": {
                                "type": "string"
                            }
                        }
                    },
                    "billing_address": {
                        "type": [
                            "null",
                            "object"
                        ],
                        "description": "The customer's billing address; all fields in the address are optional. This address appears on customer invoices.",
                        "properties": {
                            "city": {
                                "type": "string"
                            },
                            "country": {
                                "type": "string",
                                "description": "Two-letter country code (ISO 3166-1 alpha-2).",
                                "example": "US"
                            },
                            "line1": {
                                "type": "string"
                            },
                            "line2": {
                                "type": "string"
                            },
                            "postal_code": {
                                "type": "string",
                                "description": "ZIP or postal code"
                            },
                            "state": {
                                "type": "string"
                            }
                        }
                    },
                    "balance": {
                        "type": "string",
                        "example": "33.00",
                        "description": "The customer's current balance in their currency."
                    },
                    "currency": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "An ISO 4217 currency string used for the customer's invoices and balance.",
                        "minLength": 1
                    },
                    "tax_id": {
                        "$ref": "#/components/schemas/Customer-tax-id",
                        "description": "A supplied tax ID object for the customer that will be populated on the customer's invoices."
                    },
                    "auto_collection": {
                        "type": "boolean",
                        "description": "Determines whether Orb attempts to automatically collect payment for issued invoices from the saved payment method.  Note that if payment provider is set, auto collection will be turned on unless explicitly updated."
                    },
                    "email_delivery": {
                        "type": "boolean",
                        "description": "Determines whether Orb will send automated emails to this customer. This setting is superseded by the account-wide email setting for email delivery."
                    },
                    "metadata": {
                        "type": "object",
                        "x-stoplight": {
                            "id": "6ldrcrwy1ymuf"
                        },
                        "description": "User specified key-value pairs. If there is no metadata for the customer, this defaults to an empty dictionary."
                    },
                    "portal_url": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "d16xg4rs4yntp"
                        },
                        "description": "A link for the customer portal, meant to be sent to your customers. By default, this link does not expire."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "email",
                    "timezone",
                    "payment_provider_id",
                    "payment_provider",
                    "created_at",
                    "balance",
                    "currency",
                    "tax_id",
                    "metadata"
                ]
            },
            "Price": {
                "title": "The price object",
                "type": [
                    "object",
                    "null"
                ],
                "description": "Orb supports a few different pricing models out of the box. Each of these models is serialized differently in a given Price object. The model_type field determines the key for the configuration object that is present.\n\n## Unit pricing\nWith unit pricing, each unit costs a fixed amount.\n```json\n{\n    ...\n    \"model_type\": \"unit\",\n    \"unit_config\": {\n        \"unit_amount\": \"0.50\"\n    }\n    ...\n}\n```\n\n## Tiered pricing\nIn tiered pricing, the cost of a given unit depends on the tier range that it falls into, where each tier range is defined by an upper and lower bound. For example, the first ten units may cost $0.50 each and all units thereafter may cost $0.10 each.\n```json\n{\n    ...\n    \"model_type\": \"tiered\",\n    \"tiered_config\": {\n        \"tiers\": [ \n           {\n                \"first_unit\": 1,\n                \"last_unit\": 10,\n                \"unit_amount\": \"0.50\"\n            },\n            {\n                \"first_unit\": 11,\n                \"last_unit\": null,\n                \"unit_amount\": \"0.10\"\n            }\n        ]\n    }\n    ...\n}\n```\n\n## Bulk pricing\nBulk pricing applies when the number of units determine the cost of all units. For example, if you've bought less than 10 units, they may each be $0.50 for a total of $5.00. Once you've bought more than 10 units, all units may now be priced at $0.40 (i.e. 101 units total would be $40.40).\n```json\n{\n    ...\n    \"model_type\": \"bulk\",\n    \"bulk_config\": {\n        \"tiers\": [ \n            {\n                \"maximum_units\": 10,\n                \"unit_amount\": \"0.50\"\n            },\n            {\n                \"maximum_units\": 1000,\n                \"unit_amount\": \"0.40\"\n            }\n          ]\n    }\n    ...\n}\n```\n\n## Package pricing\nPackage pricing defines the size or granularity of a unit for billing purposes. For example, if the package size is set to 5, then 4 units will be billed as 5 and 6 units will be billed at 10.\n```json\n{\n    ...\n    \"model_type\": \"package\",\n    \"package_config\": {\n       \"package_amount\": \"0.80\",\n       \"package_size\": 10\n    }\n    ...\n }\n```\n\n## BPS pricing\nBPS pricing specifies a per-event (e.g. per-payment) rate in one hundredth of a percent (the number of basis points to charge), as well as a cap per event to assess. For example, this would allow you to assess a fee of 0.25% on every payment you process, with a maximum charge of $25 per payment.\n```json\n{\n    ...\n    \"model_type\": \"bps\",\n    \"bps_config\": {\n       \"bps\": 125,\n       \"per_unit_maximum\": \"11.00\"\n    }\n    ...\n }\n```\n\n## Bulk BPS pricing\nBulk BPS pricing specifies BPS parameters in a tiered manner, dependent on the total quantity across all events. Similar to bulk pricing, the BPS parameters of a given event depends on the tier range that the billing period falls into. Each tier range is defined by an upper bound. For example, after $1.5M of payment volume is reached, each individual payment may have a lower cap or a smaller take-rate.\n```json\n    ...\n    \"model_type\": \"bulk_bps\",\n    \"bulk_bps_config\": {\n        \"tiers\": [ \n           {\n                \"maximum_amount\": \"1000000.00\",\n                \"bps\": 125,\n                \"per_unit_maximum\": \"19.00\"\n           },\n          {\n                \"maximum_amount\": null,\n                \"bps\": 115,\n                \"per_unit_maximum\": \"4.00\"\n            }\n        ]\n    }\n    ...\n}\n```\n\n## Tiered BPS pricing\nTiered BPS pricing specifies BPS parameters in a graduated manner, where an event's applicable parameter is a function of its marginal addition to the period total. Similar to tiered pricing, the BPS parameters of a given event depends on the tier range that it falls into, where each tier range is defined by an upper and lower bound. For example, the first few payments may have a 0.8 BPS take-rate and all payments after a specific volume may incur a take-rate of 0.5 BPS each.\n```json\n    ...\n    \"model_type\": \"tiered_bps\",\n    \"tiered_bps_config\": {\n        \"tiers\": [ \n           {\n                \"minimum_amount\": \"0\",\n                \"maximum_amount\": \"1000000.00\",\n                \"bps\": 125,\n                \"per_unit_maximum\": \"19.00\"\n           },\n          {\n                \"minimum_amount\": \"1000000.00\",\n                \"maximum_amount\": null,\n                \"bps\": 115,\n                \"per_unit_maximum\": \"4.00\"\n            }\n        ]\n    }\n    ...\n}\n```\n\n## Matrix pricing\nMatrix pricing defines a set of unit prices in a one or two-dimensional matrix. `dimensions` defines the two event property values evaluated in this pricing model. In a one-dimensional matrix, the second value is `null`. Every configuration has a list of `matrix_values` which give the unit prices for specified property values. In a one-dimensional matrix, the matrix values will have `dimension_values` where the second value of the pair is null. If an event does not match any of the dimension values in the matrix, it will resort to the `default_unit_amount`.\n```json\n...\n\"model_type\": \"matrix\"\n\"matrix_config\": {\n    \"default_unit_amount\": \"3.00\",\n    \"dimensions\": [\n        \"cluster_name\",\n        \"region\"\n    ],\n    \"matrix_values\": [\n        {\n            \"dimension_values\": [\n                \"alpha\",\n                \"west\"\n            ],\n            \"unit_amount\": \"2.00\"\n        },\n        ...\n    ]\n}\n...\n```\n\n### Fixed fees\nFixed fees are prices that are applied independent of usage quantites, and follow unit pricing. They also have an additional parameter `fixed_price_quantity`. If the Price represents a fixed cost, this represents the quantity of units applied.\n```json\n{\n    ...\n    \"id\": \"price_id\",\n    \"model_type\": \"unit\",\n    \"unit_config\": {\n       \"unit_amount\": \"2.00\"\n    },\n    \"fixed_price_quantity\": 3.0\n    ...\n}\n```\n",
                "examples": [
                    {
                        "billable_metric": {
                            "id": "dUmCTVBzan14PeDs"
                        },
                        "fixed_price_quantity": null,
                        "cadence": "monthly",
                        "created_at": "2021-07-18T15:45:03.0000+00:00",
                        "id": "RtpDt57Uug2mJeNK",
                        "model_type": "unit",
                        "name": "Usage Fee",
                        "unit_config": {
                            "unit_amount": "100.00"
                        },
                        "plan_phase_order": null
                    }
                ],
                "x-tags": [
                    "Plan"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "billable_metric": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "fixed_price_quantity": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "description": "If the Price represents a fixed cost, this represents the quantity of units applied. Mutually exclusive with billable_metric."
                    },
                    "cadence": {
                        "type": "string",
                        "enum": [
                            "annual",
                            "monthly",
                            "quarterly"
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "model_type": {
                        "type": "string",
                        "enum": [
                            "unit",
                            "tiered",
                            "bulk",
                            "package",
                            "bps",
                            "tiered_bps",
                            "bulk_bps",
                            "matrix"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "unit_config": {
                        "type": "object",
                        "description": "Provided when model_type is `unit`",
                        "properties": {
                            "unit_amount": {
                                "type": "string"
                            }
                        }
                    },
                    "tiered_config": {
                        "description": "Provided when model_type is`tiered`",
                        "type": "object",
                        "properties": {
                            "tiers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "first_unit": {
                                            "type": "string"
                                        },
                                        "last_unit": {
                                            "type": "string"
                                        },
                                        "unit_amount": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "bulk_config": {
                        "type": "object",
                        "description": "Provided when model_type is `bulk`",
                        "properties": {
                            "tiers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "maximum_units": {
                                            "type": "string"
                                        },
                                        "unit_amount": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "package_config": {
                        "type": "object",
                        "description": "Provided when model_type is `package`",
                        "properties": {
                            "package_amount": {
                                "type": "string"
                            },
                            "package_size": {
                                "type": "number"
                            }
                        }
                    },
                    "bps_config": {
                        "type": "object",
                        "description": "Provided when model_type is `bps`",
                        "properties": {
                            "bps": {
                                "type": "number"
                            },
                            "per_unit_maximum": {
                                "type": "string"
                            }
                        }
                    },
                    "bulk_bps_config": {
                        "type": "object",
                        "description": "Provided when model_type is `bulk_bps`",
                        "properties": {
                            "tiers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "maximum_amount": {
                                            "type": "string"
                                        },
                                        "bps": {
                                            "type": "number"
                                        },
                                        "per_unit_maximum": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "tiered_bps_config": {
                        "type": "object",
                        "description": "Provided when model_type is `tiered_bps`",
                        "properties": {
                            "tiers": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "minimum_amount": {
                                            "type": "string"
                                        },
                                        "maximum_amount": {
                                            "type": "string"
                                        },
                                        "bps": {
                                            "type": "number"
                                        },
                                        "per_unit_maximum": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "matrix_config": {
                        "type": "object",
                        "description": "Provided when model_type is `matrix`",
                        "properties": {
                            "default_unit_amount": {
                                "type": "string"
                            },
                            "dimensions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "matrix_values": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "dimension_values": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "unit_amount": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "discount": {
                        "$ref": "#/components/schemas/Discount"
                    },
                    "minimum": {
                        "$ref": "#/components/schemas/Minimum-amount"
                    },
                    "maximum": {
                        "$ref": "#/components/schemas/Maximum-amount",
                        "x-stoplight": {
                            "id": "ze6qeor5bmy4b"
                        }
                    },
                    "plan_phase_order": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "description": "The phase order which includes this price, only applicable to a plan with phases."
                    },
                    "currency": {
                        "type": "string",
                        "description": "An ISO 4217 currency string for this plan's prices.",
                        "example": "USD"
                    }
                },
                "required": [
                    "discount",
                    "minimum",
                    "plan_phase_order",
                    "currency"
                ]
            },
            "Plan": {
                "type": "object",
                "x-examples": {
                    "example-1": {
                        "base_plan_id": null,
                        "created_at": "2022-04-15T23:03:24+00:00",
                        "currency": "usd",
                        "description": "",
                        "id": "RtC5XpZHMKab5Xhs",
                        "minimum_amount": null,
                        "name": "New Cold storage product plan",
                        "prices": [
                            {
                                "billable_metric": {
                                    "id": "auLz8z8utauSQbRx"
                                },
                                "cadence": "monthly",
                                "created_at": "2022-04-15T23:03:24+00:00",
                                "id": "LMEzHnDvRcFKCHJ8",
                                "minimum_amount": null,
                                "model_type": "unit",
                                "name": "Nearline Storage (gb)",
                                "unit_config": {
                                    "unit_amount": "5.00"
                                }
                            }
                        ],
                        "product": {
                            "created_at": "2022-03-08T18:22:21+00:00",
                            "id": "J9Aq4StMvFRiNLKm",
                            "name": "Cold storage product"
                        }
                    }
                },
                "examples": [
                    {
                        "created_at": "2021-07-18T15:45:03.0000+00:00",
                        "description": "",
                        "id": "DBhwNcMNfYgeBGpn",
                        "external_plan_id": "pay_as_you_go",
                        "currency": "usd",
                        "name": "Pay As You Go",
                        "prices": [
                            {
                                "billable_metric": {
                                    "id": "dUmCTVBzan14PeDs"
                                },
                                "cadence": "monthly",
                                "created_at": "2021-07-18T15:45:03.0000+00:00",
                                "id": "RtpDt57Uug2mJeNK",
                                "model_type": "unit",
                                "name": "Fee",
                                "unit_config": {
                                    "unit_amount": "100.00"
                                },
                                "plan_phase_order": null
                            }
                        ],
                        "product": {
                            "created_at": "2021-07-20T23:17:41.128461+00:00",
                            "id": "GKbznn4PwDa3SkUQ",
                            "name": "Test Product"
                        },
                        "discount": {}
                    }
                ],
                "title": "The plan object",
                "x-tags": [
                    "Plan"
                ],
                "properties": {
                    "base_plan_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The parent plan id if the given plan was created by overriding one or more of the parent's prices"
                    },
                    "external_plan_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "An optional user-defined ID for this plan resource, used throughout the system as an alias for this Plan. Use this field to identify a plan by an existing identifier in your system."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "minLength": 1
                    },
                    "currency": {
                        "type": "string",
                        "minLength": 1,
                        "description": "An ISO 4217 currency string or custom pricing unit (`credits`) for this plan's prices."
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "minLength": 1
                    },
                    "minimum": {
                        "$ref": "#/components/schemas/Minimum-amount"
                    },
                    "maximum": {
                        "$ref": "#/components/schemas/Maximum-amount",
                        "x-stoplight": {
                            "id": "3ry7aeoqt6cca"
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "prices": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "description": "Prices for this plan. If the plan has phases, this includes prices across all phases of the plan. ",
                        "items": {
                            "$ref": "#/components/schemas/Price"
                        }
                    },
                    "product": {
                        "type": "object",
                        "required": [
                            "created_at",
                            "id",
                            "name"
                        ],
                        "properties": {
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "minLength": 1
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1
                            },
                            "name": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    "trial_config": {
                        "type": "object",
                        "properties": {
                            "trial_period": {
                                "type": [
                                    "number",
                                    "null"
                                ]
                            },
                            "trial_period_unit": {
                                "type": "string",
                                "enum": [
                                    "days"
                                ]
                            }
                        },
                        "required": [
                            "trial_period_unit"
                        ]
                    },
                    "discount": {
                        "$ref": "#/components/schemas/Discount"
                    },
                    "plan_phases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Plan-phase"
                        }
                    },
                    "invoicing_currency": {
                        "type": "string",
                        "description": "An ISO 4217 currency string for which this plan is billed in. Matches `currency` unless `currency` is a custom pricing unit."
                    },
                    "base_plan": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "description": "The parent plan if the given plan was created by overriding one or more of the parent's prices",
                        "properties": {
                            "external_plan_id": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "name": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            }
                        }
                    },
                    "net_terms": {
                        "type": "integer",
                        "description": "Determines the difference between the invoice issue date and the due date. A value of \"0\" here signifies that invoices are due on issue, whereas a value of \"30\" means that the customer has a month to pay the invoice before its overdue. Note that individual subscriptions or invoices may set a different net terms configuration."
                    },
                    "default_invoice_memo": {
                        "type": "string",
                        "description": "The default memo text on the invoices corresponding to subscriptions on this plan. Note that each subscription may configure its own memo."
                    }
                },
                "required": [
                    "created_at",
                    "currency",
                    "description",
                    "id",
                    "minimum",
                    "name",
                    "prices",
                    "product",
                    "discount",
                    "invoicing_currency"
                ]
            },
            "Invoice": {
                "description": "An [`Invoice`](../reference/Orb-API.json/components/schemas/Invoice) is a fundamental billing entity, representing the request for payment for a single subscription. This includes a set of line items, which correspond to prices in the subscription's plan and can represent fixed recurring fees or usage-based fees. They are generated at the end of a billing period, or as the result of an action, such as a cancellation.",
                "type": "object",
                "x-examples": {
                    "example-1": {
                        "amount_due": null,
                        "created_at": "2022-02-01T08:06:31+00:00",
                        "currency": "credits",
                        "customer": {
                            "external_customer_id": "creditsqa_beta_monitor",
                            "id": "4QYWy9UbDY8yXKKd"
                        },
                        "discounts": [],
                        "due_date": "2022-03-02T08:00:00+00:00",
                        "id": "gZwQCFccMA7sMzpn",
                        "invoice_date": "2022-02-01T08:00:00+00:00",
                        "invoice_pdf": "https://assets.withorb.com/invoice/jtsrUHdhmYhQk3DX/CAQYG6Cj9vBRSE6z",
                        "line_items": [
                            {
                                "amount": "0.00",
                                "discounts": [],
                                "end_date": "2022-02-01T08:00:00+00:00",
                                "minimum_amount": null,
                                "name": "File source usage",
                                "quantity": 0,
                                "start_date": "2022-01-20T08:00:00+00:00",
                                "sub_line_items": [],
                                "subtotal": "0.00"
                            },
                            {
                                "amount": "0.00",
                                "discounts": [],
                                "end_date": "2022-02-01T08:00:00+00:00",
                                "minimum_amount": null,
                                "name": "Custom connectors usage",
                                "quantity": 0,
                                "start_date": "2022-01-20T08:00:00+00:00",
                                "sub_line_items": [],
                                "subtotal": "0.00"
                            },
                            {
                                "amount": "8764.00",
                                "discounts": [],
                                "end_date": "2022-02-01T08:00:00+00:00",
                                "minimum_amount": null,
                                "name": "API source usage",
                                "quantity": 8764,
                                "start_date": "2022-01-20T08:00:00+00:00",
                                "sub_line_items": [],
                                "subtotal": "8764.00"
                            },
                            {
                                "amount": "0.00",
                                "discounts": [],
                                "end_date": "2022-02-01T08:00:00+00:00",
                                "minimum_amount": null,
                                "name": "Database source usage",
                                "quantity": 0,
                                "start_date": "2022-01-20T08:00:00+00:00",
                                "sub_line_items": [],
                                "subtotal": "0.00"
                            }
                        ],
                        "minimum_amount": null,
                        "subscription": {
                            "id": "X278gkiheQfpyoCE"
                        },
                        "subtotal": "8764.00"
                    }
                },
                "title": "The invoice object",
                "examples": [
                    {
                        "amount_due": "8.00",
                        "created_at": "2022-05-01T07:01:31+00:00",
                        "currency": "USD",
                        "customer": {
                            "external_customer_id": "customer_name",
                            "id": "T23oVDGssdLbhijU"
                        },
                        "discounts": [
                            {
                                "discount_type": null,
                                "percentage_discount": 20
                            }
                        ],
                        "due_date": "2022-05-30T07:00:00+00:00",
                        "id": "Scy9j7jogDuByUVr",
                        "invoice_date": "2022-05-01T07:00:00+00:00",
                        "invoice_pdf": "https://assets.withorb.com/invoice/rUHdhmg45vY45DX/qEAeuYePaphGMdFb",
                        "line_items": [
                            {
                                "amount": "7.00",
                                "discounts": null,
                                "end_date": "2022-05-01T07:00:00+00:00",
                                "grouping": {
                                    "key": "region",
                                    "value": "east"
                                },
                                "minimum_amount": null,
                                "name": "Line Item with Grouping",
                                "quantity": 1,
                                "start_date": "2022-04-18T07:00:00+00:00",
                                "sub_line_items": [],
                                "subtotal": "7.00",
                                "tax_amounts": [
                                    {
                                        "tax_amount_description": "Tax",
                                        "tax_amount_percentage": "8.00",
                                        "amount": "0.56"
                                    }
                                ],
                                "price": {
                                    "billable_metric": {
                                        "id": "dUmCTVBzan14PeDs"
                                    },
                                    "fixed_price_quantity": null,
                                    "cadence": "monthly",
                                    "created_at": "2021-07-18T15:45:03.0000+00:00",
                                    "id": "RtpDt57Uug2mJeNK",
                                    "model_type": "unit",
                                    "name": "Usage Fee",
                                    "unit_config": {
                                        "unit_amount": "100.00"
                                    },
                                    "plan_phase_order": null
                                }
                            },
                            {
                                "amount": "3.00",
                                "discounts": null,
                                "end_date": "2022-05-01T07:00:00+00:00",
                                "grouping": null,
                                "minimum_amount": null,
                                "name": "Line Item with Sub Line Items",
                                "quantity": 1,
                                "start_date": "2022-04-18T07:00:00+00:00",
                                "sub_line_items": [
                                    {
                                        "amount": "3.00",
                                        "name": "Page consumption fee (1-1600 units)",
                                        "quantity": 1,
                                        "tier_config": {
                                            "first_unit": 1,
                                            "last_unit": 1600,
                                            "unit_amount": "1.0"
                                        },
                                        "type": "tier"
                                    }
                                ],
                                "subtotal": "3.00",
                                "tax_amounts": [
                                    {
                                        "tax_amount_description": "Tax",
                                        "tax_amount_percentage": "8.00",
                                        "amount": "0.24"
                                    }
                                ]
                            }
                        ],
                        "minimum_amount": null,
                        "subscription": {
                            "id": "oQ6D5rsCAgGx86ob"
                        },
                        "subtotal": "10.00"
                    }
                ],
                "x-tags": [
                    "Invoice"
                ],
                "properties": {
                    "amount_due": {
                        "type": "string",
                        "description": "This is the final amount required to be charged to the customer and reflects the application of the customer balance to the `total` of the invoice.",
                        "example": "8.00"
                    },
                    "created_at": {
                        "type": "string",
                        "minLength": 1,
                        "format": "date-time",
                        "example": "2022-05-01T07:01:31+00:00",
                        "description": "The creation time of the resource in Orb."
                    },
                    "currency": {
                        "type": "string",
                        "minLength": 1,
                        "example": "USD",
                        "description": "An ISO 4217 currency string or `credits`"
                    },
                    "customer": {
                        "type": "object",
                        "description": "The customer receiving this invoice.",
                        "required": [
                            "external_customer_id",
                            "id"
                        ],
                        "properties": {
                            "external_customer_id": {
                                "type": "string",
                                "minLength": 1,
                                "example": "customer_name"
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1,
                                "example": "T23oVDGssdLbhijU"
                            }
                        }
                    },
                    "discount": {
                        "$ref": "#/components/schemas/Discount"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-05-30T07:00:00+00:00",
                        "description": "When the invoice payment is due."
                    },
                    "id": {
                        "type": "string",
                        "minLength": 1
                    },
                    "invoice_date": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Issue date of the invoice",
                        "format": "date-time",
                        "example": "2022-05-01T07:00:00+00:00"
                    },
                    "invoice_pdf": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The link to download the PDF representation of the `Invoice`.",
                        "format": "uri",
                        "example": "https://assets.withorb.com/invoice/rUHdhmg45vY45DX/qEAeuYePaphGMdFb"
                    },
                    "minimum": {
                        "$ref": "#/components/schemas/Minimum-amount"
                    },
                    "maximum": {
                        "$ref": "#/components/schemas/Maximum-amount",
                        "x-stoplight": {
                            "id": "1xuohaso1qkky"
                        }
                    },
                    "line_items": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "description": "The breakdown of prices in this invoice.",
                        "items": {
                            "$ref": "#/components/schemas/Invoice-line-item"
                        }
                    },
                    "subscription": {
                        "type": "object",
                        "description": "The associated subscription for this invoice.",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "minLength": 1,
                                "example": "VDGsT23osdLb84KD"
                            }
                        }
                    },
                    "subtotal": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The total before any discounts and minimums are applied.",
                        "example": "8.00"
                    },
                    "total": {
                        "type": "string",
                        "example": "8.00",
                        "minLength": 1,
                        "description": "The total after any minimums, discounts, and taxes have been applied."
                    },
                    "customer_balance_transactions": {
                        "type": "array",
                        "description": "A list of Customer balance transactions that may be associated with this invoice.",
                        "items": {
                            "$ref": "#/components/schemas/Customer-balance-transaction"
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "issued",
                            "paid",
                            "synced",
                            "void",
                            "draft"
                        ],
                        "description": "The status of this invoice as known to Orb. Invoices start in `\"draft\"` state for a given billing period, and are automatically transitioned to `\"issued\"` when that billing period ends. Invoices will be marked `\"paid\"` upon confirmation of successful automatic payment collection by Orb. Invoices may be manually voided; those will be in the terminal `\"void\"` state. Invoices synced to an external billing provider (such as Bill.com, QuickBooks, or Stripe Invoicing) will be marked as `\"synced\"`.",
                        "readOnly": true
                    },
                    "will_auto_issue": {
                        "type": "boolean",
                        "x-stoplight": {
                            "id": "8d8dif7rppfbp"
                        },
                        "description": "This is true if the invoice will be automaticaly issued in the future, and false otherwise.",
                        "readOnly": true
                    },
                    "eligible_for_issue_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "x-stoplight": {
                            "id": "l1m8cb20s5sg2"
                        },
                        "description": "If the invoice has a status of `draft`, this will be the time that the invoice willl be eligible to be issued, otherwise it will be `null`. If `auto-issue` is true, the invoice will automatically begin issuing at this time.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "hosted_invoice_url": {
                        "type": "string",
                        "description": "A URL for the invoice portal."
                    },
                    "customer_tax_id": {
                        "$ref": "#/components/schemas/Customer-tax-id",
                        "description": "A customer's tax ID. If the invoice has been finalized, this value will not be changed from finalization time."
                    },
                    "voided_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "If the invoice has a status of `void`, this gives a timestamp when the invoice was voided.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "paid_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "If the invoice has a status of `paid`, this gives a timestamp when the invoice was paid.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "issued_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "If the invoice has been issued, this will be the time it transitioned to `issued` (even if it is now in a different state.)",
                        "readOnly": true
                    },
                    "scheduled_issue_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "If the invoice is in draft, this timestamp will reflect when the invoice is scheduled to be issued.",
                        "readOnly": true
                    },
                    "auto_collection": {
                        "type": "object",
                        "description": "Information about payment auto-collection for this invoice.",
                        "properties": {
                            "next_attempt_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time",
                                "description": "If the invoice is scheduled for auto-collection, this field will reflect when the next attempt will occur. If dunning has been exhausted, or auto-collection is not enabled for this invoice, this field will be `null`.",
                                "readOnly": true
                            },
                            "previously_attempted_at": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "format": "date-time",
                                "description": "If Orb has ever attempted payment auto-collection for this invoice, this field will reflect when that attempt occurred. In conjunction with `next_attempt_at`, this can be used to tell whether the invoice is currently in dunning (that is, `previously_attempted_at` is non-null, and `next_attempt_time` is non-null), or if dunning has been exhausted (`previously_attempted_at` is non-null, but `next_attempt_time` is null).",
                                "readOnly": true
                            },
                            "enabled": {
                                "type": "boolean",
                                "x-stoplight": {
                                    "id": "xcxndtrsfmwkt"
                                },
                                "description": "True only if auto-collection is enabled for this invoice."
                            }
                        }
                    },
                    "memo": {
                        "type": "string",
                        "description": "Free-form text which is available on the invoice PDF and the Orb invoice portal."
                    },
                    "issue_failed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "If the invoice failed to issue, this will be the last time it failed to issue (even if it is now in a different state.)"
                    },
                    "sync_failed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "If the invoice failed to sync, this will be the last time an external invoicing provider sync was attempted. This field will always be `null` for invoices using Orb Invoicing."
                    },
                    "payment_failed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "If payment was attempted on this invoice but failed, this will be the time of the most recent attempt."
                    },
                    "payment_started_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "If payment was attempted on this invoice, this will be the start time of the most recent attempt. This field is especially useful for delayed-notification payment mechanisms (like bank transfers), where payment can take 3 days or more."
                    },
                    "credit_notes": {
                        "x-stoplight": {
                            "id": "kpyipk3hyedmk"
                        },
                        "type": "array",
                        "description": "A list of credit notes associated with the invoice",
                        "items": {
                            "x-stoplight": {
                                "id": "f1fvawm4828dt"
                            },
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "x-stoplight": {
                                        "id": "k975vszsaz9wm"
                                    }
                                },
                                "credit_note_number": {
                                    "type": "string",
                                    "x-stoplight": {
                                        "id": "vvl159e2jwst4"
                                    }
                                },
                                "reason": {
                                    "type": "string",
                                    "x-stoplight": {
                                        "id": "250d34qr6aswj"
                                    }
                                },
                                "total": {
                                    "type": "string",
                                    "x-stoplight": {
                                        "id": "ea460vgq564q9"
                                    }
                                },
                                "voided_at": {
                                    "type": "string",
                                    "x-stoplight": {
                                        "id": "jz43yaqtcu9ez"
                                    },
                                    "format": "date-time",
                                    "example": "2022-05-01T07:01:31+00:00"
                                },
                                "type": {
                                    "type": "string",
                                    "x-stoplight": {
                                        "id": "jzeh27eght6eo"
                                    }
                                }
                            }
                        }
                    }
                },
                "required": [
                    "amount_due",
                    "created_at",
                    "currency",
                    "customer",
                    "discount",
                    "due_date",
                    "id",
                    "invoice_date",
                    "invoice_pdf",
                    "minimum",
                    "line_items",
                    "subscription",
                    "subtotal",
                    "total",
                    "customer_balance_transactions",
                    "status",
                    "will_auto_issue"
                ]
            },
            "Invoice-line-item": {
                "title": "Invoice Line Item",
                "type": "object",
                "x-internal": false,
                "x-examples": {},
                "examples": [],
                "x-tags": {},
                "description": "The component line of an [Invoice](../reference/Orb-API.json/components/schemas/Invoice)",
                "x-stoplight": {
                    "id": "f87f027efbcde"
                },
                "properties": {
                    "amount": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The final amount after any discounts or minimums.",
                        "example": "7.00"
                    },
                    "discount": {
                        "$ref": "#/components/schemas/Discount"
                    },
                    "end_date": {
                        "type": "string",
                        "minLength": 1,
                        "format": "date-time",
                        "example": "2022-02-01T08:00:00+00:00",
                        "description": "The end date of the range of time applied for this line item's price."
                    },
                    "grouping": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "[DEPRECATED] For configured prices that are split by a grouping key, this will be populated with the key and a value. The `amount` and `subtotal` will be the values for this particular grouping.",
                        "deprecated": true
                    },
                    "minimum": {
                        "$ref": "#/components/schemas/Minimum-amount"
                    },
                    "maximum_amount": {
                        "$ref": "#/components/schemas/Maximum-amount",
                        "x-stoplight": {
                            "id": "yqmt4bvbcqw24"
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "example": "Fixed Fee",
                        "description": "The name of the price associated with this line item."
                    },
                    "quantity": {
                        "type": "number",
                        "example": 1
                    },
                    "start_date": {
                        "type": "string",
                        "minLength": 1,
                        "example": "2022-02-01T08:00:00+00:00",
                        "format": "date-time",
                        "description": "The start date of the range of time applied for this line item's price."
                    },
                    "subtotal": {
                        "type": "string",
                        "description": "The line amount before any line item-specific discounts or minimums.",
                        "example": "9.00"
                    },
                    "sub_line_items": {
                        "type": "array",
                        "description": "For complex pricing structures, the line item can be broken down further in `sub_line_items`.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "amount": {
                                    "type": "string",
                                    "example": "9.00",
                                    "description": "The total amount for this sub line item."
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Tier One"
                                },
                                "quantity": {
                                    "type": "number",
                                    "example": 5
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "matrix",
                                        "tier"
                                    ],
                                    "description": "An identifier for a sub line item that is specific to a pricing model."
                                },
                                "tier_config": {
                                    "type": "object",
                                    "description": "Only available if `type` is `tier`. Contains the range of units in this tier and the unit amount.",
                                    "properties": {
                                        "first_unit": {
                                            "type": "number",
                                            "example": 1
                                        },
                                        "last_unit": {
                                            "type": "number",
                                            "example": 1000
                                        },
                                        "unit_amount": {
                                            "type": "string",
                                            "example": "3.00"
                                        }
                                    },
                                    "required": [
                                        "first_unit",
                                        "last_unit",
                                        "unit_amount"
                                    ]
                                },
                                "matrix_config": {
                                    "description": "Only available if `type` is `matrix`. Contains the values of the matrix that this `sub_line_item` represents.",
                                    "type": "object",
                                    "properties": {
                                        "dimension_values": {
                                            "type": "array",
                                            "description": "The ordered dimension values for this line item.",
                                            "items": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ],
                                                "example": "[alpha, west]"
                                            }
                                        }
                                    },
                                    "required": [
                                        "dimension_values"
                                    ]
                                },
                                "grouping": {
                                    "type": [
                                        "object",
                                        "null"
                                    ],
                                    "description": "For configured prices that are split by a grouping key, this will be populated with the key and a value. The `amount` will be the values for this particular grouping.",
                                    "properties": {
                                        "key": {
                                            "type": "string",
                                            "example": "region"
                                        },
                                        "value": {
                                            "type": [
                                                "string",
                                                "null"
                                            ],
                                            "example": "west"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "amount",
                                "name",
                                "quantity",
                                "type",
                                "grouping"
                            ]
                        }
                    },
                    "tax_amounts": {
                        "type": "array",
                        "description": "An array of tax rates and their incurred tax amounts. Empty if no tax integration is configured.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "tax_rate_description": {
                                    "type": "string",
                                    "description": "The human-readable description of the applied tax rate."
                                },
                                "tax_rate_percentage": {
                                    "type": "string",
                                    "description": "The tax rate percentage, out of 100."
                                },
                                "amount": {
                                    "type": "string",
                                    "description": "The amount of additional tax incurred by this tax rate."
                                }
                            },
                            "required": [
                                "tax_rate_description",
                                "tax_rate_percentage",
                                "amount"
                            ]
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "A unique ID for this line item."
                    },
                    "price": {
                        "$ref": "#/components/schemas/Price"
                    }
                },
                "required": [
                    "amount",
                    "discount",
                    "end_date",
                    "grouping",
                    "minimum",
                    "name",
                    "quantity",
                    "start_date",
                    "subtotal",
                    "sub_line_items",
                    "tax_amounts",
                    "id",
                    "price"
                ]
            },
            "Upcoming Invoice": {
                "description": "Upcoming invoices contain a line-by-line breakdown of an upcoming amount due for a subscription, including incurred usage in the billing period as well as any recurring fees. \n\nAlthough each line item will be invoiced on the `target_date`, each invoice line item may have distinct date ranges (e.g. for usage billed in arrears, the range may specify the current month whereas an in-advance recurring fees will be for the following month).\n\nSince an invoice resource has not been created for this upcoming invoice, this endpoint intentionally does not return an `id` field.",
                "type": "object",
                "x-examples": {
                    "example-1": {
                        "amount_due": null,
                        "created_at": "2022-02-01T08:06:31+00:00",
                        "currency": "credits",
                        "customer": {
                            "external_customer_id": "creditsqa_beta_monitor",
                            "id": "4QYWy9UbDY8yXKKd"
                        },
                        "discounts": [],
                        "due_date": "2022-03-02T08:00:00+00:00",
                        "id": "gZwQCFccMA7sMzpn",
                        "invoice_date": "2022-02-01T08:00:00+00:00",
                        "invoice_pdf": "https://assets.withorb.com/invoice/jtsrUHdhmYhQk3DX/CAQYG6Cj9vBRSE6z",
                        "line_items": [
                            {
                                "amount": "0.00",
                                "discounts": [],
                                "end_date": "2022-02-01T08:00:00+00:00",
                                "minimum_amount": null,
                                "name": "File source usage",
                                "quantity": 0,
                                "start_date": "2022-01-20T08:00:00+00:00",
                                "sub_line_items": [],
                                "subtotal": "0.00"
                            },
                            {
                                "amount": "0.00",
                                "discounts": [],
                                "end_date": "2022-02-01T08:00:00+00:00",
                                "minimum_amount": null,
                                "name": "Custom connectors usage",
                                "quantity": 0,
                                "start_date": "2022-01-20T08:00:00+00:00",
                                "sub_line_items": [],
                                "subtotal": "0.00"
                            },
                            {
                                "amount": "8764.00",
                                "discounts": [],
                                "end_date": "2022-02-01T08:00:00+00:00",
                                "minimum_amount": null,
                                "name": "API source usage",
                                "quantity": 8764,
                                "start_date": "2022-01-20T08:00:00+00:00",
                                "sub_line_items": [],
                                "subtotal": "8764.00"
                            },
                            {
                                "amount": "0.00",
                                "discounts": [],
                                "end_date": "2022-02-01T08:00:00+00:00",
                                "minimum_amount": null,
                                "name": "Database source usage",
                                "quantity": 0,
                                "start_date": "2022-01-20T08:00:00+00:00",
                                "sub_line_items": [],
                                "subtotal": "0.00"
                            }
                        ],
                        "minimum_amount": null,
                        "subscription": {
                            "id": "X278gkiheQfpyoCE"
                        },
                        "subtotal": "8764.00"
                    }
                },
                "title": "The upcoming Invoice object",
                "examples": [
                    {
                        "amount_due": "8.00",
                        "created_at": "2022-05-01T07:01:31+00:00",
                        "currency": "USD",
                        "customer": {
                            "external_customer_id": "customer_name",
                            "id": "T23oVDGssdLbhijU"
                        },
                        "discounts": [
                            {
                                "discount_type": null,
                                "percentage_discount": 20
                            }
                        ],
                        "hosted_invoice_url": "https://invoices.withorb.com/view?token=ABC.DEF",
                        "invoice_pdf": "https://assets.withorb.com/invoice/rUHdhmg45vY45DX/qEAeuYePaphGMdFb",
                        "line_items": [
                            {
                                "amount": "7.00",
                                "discounts": null,
                                "end_date": "2022-05-01T07:00:00+00:00",
                                "grouping": {
                                    "key": "region",
                                    "value": "east"
                                },
                                "minimum_amount": null,
                                "name": "Line Item with Grouping",
                                "quantity": 1,
                                "start_date": "2022-04-18T07:00:00+00:00",
                                "sub_line_items": [],
                                "subtotal": "7.00"
                            },
                            {
                                "amount": "3.00",
                                "discounts": null,
                                "end_date": "2022-05-01T07:00:00+00:00",
                                "grouping": null,
                                "minimum_amount": null,
                                "name": "Line Item with Sub Line Items",
                                "quantity": 1,
                                "start_date": "2022-04-18T07:00:00+00:00",
                                "sub_line_items": [
                                    {
                                        "amount": "3.00",
                                        "name": "Page consumption fee (1-1600 units)",
                                        "quantity": 1,
                                        "tier_config": {
                                            "first_unit": 1,
                                            "last_unit": 1600,
                                            "unit_amount": "1.0"
                                        },
                                        "type": "tier"
                                    }
                                ],
                                "subtotal": "3.00"
                            }
                        ],
                        "minimum_amount": null,
                        "subscription": {
                            "id": "oQ6D5rsCAgGx86ob"
                        },
                        "subtotal": "10.00",
                        "target_date": "2022-05-01"
                    }
                ],
                "x-tags": [
                    "Invoice"
                ],
                "properties": {
                    "amount_due": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The final amount to be charged to the customer after all minimums and discounts have been applied. Only populated for non-pre-paid plans.",
                        "example": "8.00"
                    },
                    "currency": {
                        "type": "string",
                        "minLength": 1,
                        "example": "USD",
                        "description": "An ISO 4217 currency string or `credits`"
                    },
                    "customer": {
                        "type": "object",
                        "description": "The customer receiving this invoice.",
                        "required": [
                            "external_customer_id",
                            "id"
                        ],
                        "properties": {
                            "external_customer_id": {
                                "type": "string",
                                "minLength": 1,
                                "example": "customer_name"
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1,
                                "example": "T23oVDGssdLbhijU"
                            }
                        }
                    },
                    "discount": {
                        "$ref": "#/components/schemas/Discount"
                    },
                    "minimum": {
                        "$ref": "#/components/schemas/Minimum-amount"
                    },
                    "line_items": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "description": "The breakdown of prices in this invoice.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "amount": {
                                    "type": "string",
                                    "minLength": 1,
                                    "description": "The final amount after any discounts or minimums.",
                                    "example": "7.00"
                                },
                                "discount": {
                                    "$ref": "#/components/schemas/Discount"
                                },
                                "end_date": {
                                    "type": "string",
                                    "minLength": 1,
                                    "format": "date-time",
                                    "example": "2022-02-01T08:00:00+00:00",
                                    "description": "The end date of the range of time applied for this line item's price."
                                },
                                "grouping": {
                                    "type": [
                                        "object",
                                        "null"
                                    ],
                                    "description": "For configured prices that are split by a grouping key, this will be populated with the key and a value. The `amount` and `subtotal` will be the values for this particular grouping.",
                                    "required": [
                                        "key",
                                        "value"
                                    ],
                                    "properties": {
                                        "key": {
                                            "type": "string",
                                            "example": "region"
                                        },
                                        "value": {
                                            "type": "string",
                                            "example": "west"
                                        }
                                    }
                                },
                                "minimum": {
                                    "$ref": "#/components/schemas/Minimum-amount"
                                },
                                "name": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "Fixed Fee",
                                    "description": "The name of the price associated with this line item."
                                },
                                "quantity": {
                                    "type": "number",
                                    "example": 1
                                },
                                "start_date": {
                                    "type": "string",
                                    "minLength": 1,
                                    "example": "2022-02-01T08:00:00+00:00",
                                    "format": "date-time",
                                    "description": "The start date of the range of time applied for this line item's price."
                                },
                                "subtotal": {
                                    "type": "string",
                                    "description": "The line amount before any line item-specific discounts or minimums.",
                                    "example": "9.00"
                                },
                                "sub_line_items": {
                                    "type": "array",
                                    "description": "For complex pricing structures, the line item can be broken down further in `sub_line_items`.",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "amount": {
                                                "type": "string",
                                                "example": "9.00",
                                                "description": "The total amount for this sub line item."
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Tier One"
                                            },
                                            "quantity": {
                                                "type": "number",
                                                "example": 5
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "matrix",
                                                    "tier"
                                                ],
                                                "description": "An identifier for a sub line item that is specific to a pricing model."
                                            },
                                            "tier_config": {
                                                "type": "object",
                                                "description": "Only available if `type` is `tier`. Contains the range of units in this tier and the unit amount.",
                                                "properties": {
                                                    "first_unit": {
                                                        "type": "number",
                                                        "example": 1
                                                    },
                                                    "last_unit": {
                                                        "type": "number",
                                                        "example": 1000
                                                    },
                                                    "unit_amount": {
                                                        "type": "string",
                                                        "example": "3.00"
                                                    }
                                                },
                                                "required": [
                                                    "first_unit",
                                                    "last_unit",
                                                    "unit_amount"
                                                ]
                                            },
                                            "matrix_config": {
                                                "description": "Only available if `type` is `matrix`. Contains the values of the matrix that this `sub_line_item` represents.",
                                                "type": "object",
                                                "properties": {
                                                    "dimension_values": {
                                                        "type": "array",
                                                        "description": "The ordered dimension values for this line item.",
                                                        "items": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ],
                                                            "example": "[alpha, west]"
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "dimension_values"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "amount",
                                            "name",
                                            "quantity",
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "amount",
                                "discount",
                                "end_date",
                                "grouping",
                                "minimum",
                                "name",
                                "quantity",
                                "start_date",
                                "subtotal",
                                "sub_line_items"
                            ]
                        }
                    },
                    "subscription": {
                        "type": "object",
                        "description": "The associated subscription for this invoice.",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "minLength": 1,
                                "example": "VDGsT23osdLb84KD"
                            }
                        }
                    },
                    "subtotal": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The total before any discounts and minimums are applied.",
                        "example": "8.00"
                    },
                    "target_date": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The expected issue date of the invoice.",
                        "format": "date",
                        "example": "2022-05-01"
                    },
                    "hosted_invoice_url": {
                        "type": "string",
                        "description": "A URL for the invoice portal."
                    },
                    "will_auto_issue": {
                        "type": "boolean",
                        "x-stoplight": {
                            "id": "yuw3ntqv9f30r"
                        },
                        "description": "This is true if the invoice will be automaticaly issued in the future, and false otherwise."
                    },
                    "eligible_for_issue_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "x-stoplight": {
                            "id": "atqxt83w5wuo2"
                        },
                        "format": "date-time",
                        "description": "If the invoice has a status of `draft`, this will be the time that the invoice willl be eligible to be issued, otherwise it will be `null`. If `auto-issue` is true, the invoice will automatically begin issuing at this time."
                    }
                },
                "required": [
                    "amount_due",
                    "currency",
                    "customer",
                    "discount",
                    "minimum",
                    "line_items",
                    "subscription",
                    "subtotal",
                    "target_date",
                    "hosted_invoice_url",
                    "will_auto_issue"
                ]
            },
            "Event": {
                "type": "object",
                "x-examples": {
                    "example-1": {
                        "customer_id": "RJUWr3ta7DXvzwDQ",
                        "event_name": "api_ping",
                        "id": "42r19258-1de6-41ac-8deb-0d04287f01f8",
                        "properties": {
                            "ping": "pong"
                        },
                        "timestamp": "2022-02-21T07:04:01+00:00"
                    }
                },
                "properties": {
                    "customer_id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The Orb Customer identifier"
                    },
                    "event_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A name to meaningfully identify the action or event type."
                    },
                    "id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique value, generated by the client, that is used to de-duplicate events. Note that on ingestion, this value is passed in as idempotency_key"
                    },
                    "properties": {
                        "type": "object",
                        "description": "A dictionary of custom properties. Values in this dictionary must be numeric, boolean, or strings. Nested dictionaries are disallowed."
                    },
                    "timestamp": {
                        "type": "string",
                        "minLength": 1,
                        "description": "An ISO 8601 format date with no timezone offset (i.e. UTC). This should represent the time that usage was recorded, and is particularly important to attribute usage to a given billing period."
                    },
                    "external_customer_id": {
                        "type": "string",
                        "description": "An alias for the Orb customer, whose mapping is specified when creating the customer"
                    }
                },
                "required": [
                    "customer_id",
                    "event_name",
                    "id",
                    "properties",
                    "timestamp"
                ],
                "title": "The event object",
                "x-tags": [
                    "Event"
                ]
            },
            "Discount": {
                "title": "Discount",
                "x-stoplight": {
                    "id": "oy6igmsvabi8q"
                },
                "type": [
                    "object",
                    "null"
                ],
                "x-internal": false,
                "examples": [
                    {
                        "discount_type": "percentage",
                        "percentage_discount": 0.15,
                        "applies_to_price_ids": [
                            "h74gfhdjvn7ujokd",
                            "7hfgtgjnbvc3ujkl"
                        ]
                    },
                    {
                        "discount_type": "usage",
                        "usage_amount": 1500,
                        "applies_to_price_ids": [
                            "7hfgtgjnbvc3ujkl"
                        ]
                    }
                ],
                "properties": {
                    "discount_type": {
                        "type": "string",
                        "enum": [
                            "percentage",
                            "trial",
                            "usage",
                            "amount"
                        ],
                        "example": "percentage"
                    },
                    "percentage_discount": {
                        "type": "number",
                        "example": 0.15,
                        "description": "Only available if discount_type is `percentage`.This is a number between 0 and 1.",
                        "minimum": 0,
                        "maximum": 1
                    },
                    "trial_amount_discount": {
                        "type": "string",
                        "description": "Only available if discount_type is `trial`"
                    },
                    "usage_discount": {
                        "type": "number",
                        "description": "Only available if discount_type is `usage`. Number of usage units that this discount is for"
                    },
                    "amount_discount": {
                        "type": "string",
                        "description": "Only available if discount_type is `amount`. "
                    },
                    "applies_to_price_ids": {
                        "type": "array",
                        "description": "List of price_ids that this discount applies to. For plan/plan phase discounts, this can be a subset of prices.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "discount_type"
                ]
            },
            "Credit-ledger-entry": {
                "description": "A credit ledger entry is a single entry in the customer balance ledger. More details about working with real-time balances are [here](../docs/Pre-paid-plans.md).\n\nTo support late and out-of-order event reporting, ledger entries are marked as either __committed_ or _pending_. Committed entries are finalized and will not change. Pending entries can be updated up until the event reporting grace period. ",
                "type": "object",
                "x-examples": {
                    "example-1": {
                        "amount": 3,
                        "created_at": "2022-05-05T17:17:06+00:00",
                        "credit_block": {
                            "expiry_date": "2022-12-28T08:00:00+00:00",
                            "id": "8EiAAQWdytmsV95s",
                            "per_unit_cost_basis": null
                        },
                        "customer": {
                            "external_customer_id": "airbyte_customer",
                            "id": "9VJGi3JckeMWqjpP"
                        },
                        "description": null,
                        "ending_balance": 4.472228333333333,
                        "entry_type": "increment",
                        "id": "Nk7TXB8BTMM9j8Q2",
                        "starting_balance": 1.472228333333333
                    }
                },
                "examples": [
                    {
                        "amount": 100,
                        "created_at": "2022-05-05T17:17:06+00:00",
                        "credit_block": {
                            "expiry_date": "2022-12-28T08:00:00+00:00",
                            "id": "8EiAAQWdytmsV95s",
                            "per_unit_cost_basis": "0.20"
                        },
                        "customer": {
                            "external_customer_id": "external-customer-id",
                            "id": "9VJGi3JckeMWqjpP"
                        },
                        "description": "Purchased 100 credits",
                        "ending_balance": 100,
                        "entry_type": "increment",
                        "id": "Nk7TXB8BTMM9j8Q2",
                        "starting_balance": 0,
                        "entry_status": "pending",
                        "ledger_sequence_number": 1
                    }
                ],
                "title": "The credit ledger entry object",
                "x-tags": [
                    "Credits"
                ],
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "Number of credits that were impacted. Required on creation for increment and decrement entries."
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "minLength": 1
                    },
                    "credit_block": {
                        "type": "object",
                        "description": "Credit block that the entry affected",
                        "required": [
                            "expiry_date",
                            "id",
                            "per_unit_cost_basis"
                        ],
                        "properties": {
                            "expiry_date": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "minLength": 1,
                                "description": "Complete timestamp with date and time for when this block expires"
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1
                            },
                            "per_unit_cost_basis": {
                                "description": "How much, in USD, a customer paid for a single credit in this block",
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        }
                    },
                    "customer": {
                        "type": "object",
                        "required": [
                            "external_customer_id",
                            "id"
                        ],
                        "properties": {
                            "external_customer_id": {
                                "type": "string",
                                "minLength": 1
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Optional metadata that can be specified when adding ledger results via the API"
                    },
                    "ending_balance": {
                        "type": "number"
                    },
                    "entry_status": {
                        "type": "string",
                        "description": "Committed entries are older than the ingestion grace period, and cannot change. Pending entries are newer than the grace period and are subject to updates",
                        "enum": [
                            "committed",
                            "pending"
                        ]
                    },
                    "entry_type": {
                        "type": "string",
                        "minLength": 1,
                        "enum": [
                            "increment",
                            "decrement",
                            "expiration_change",
                            "credit_block_expiry"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "minLength": 1
                    },
                    "ledger_sequence_number": {
                        "type": "number",
                        "description": "The position in which this entry appears in the ledger, starting at 0"
                    },
                    "starting_balance": {
                        "type": "number"
                    },
                    "event_id": {
                        "type": "string",
                        "minLength": 1
                    },
                    "price_id": {
                        "type": "string",
                        "minLength": 1
                    },
                    "metadata": {
                        "type": "object",
                        "description": "User-specified metadata dictionary that's specified when adding a ledger entry. This contains key/value pairs if metadata is specified, but otherwise is an empty dictionary."
                    },
                    "new_block_expiry_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "In the case of an expiration change ledger entry, this represents the expiration time of the new block."
                    }
                },
                "required": [
                    "created_at",
                    "credit_block",
                    "customer",
                    "description",
                    "ending_balance",
                    "entry_status",
                    "entry_type",
                    "id",
                    "ledger_sequence_number",
                    "starting_balance",
                    "metadata"
                ]
            },
            "Plan-phase": {
                "type": "object",
                "description": "A plan can optionally consist of plan phases, which represents a pricing configuration that's only active for the length of time specified by `duration` and `duration_unit`. All plans must have an evergreen phase, which is the last phase and active indefinitely.",
                "title": "Plan phase",
                "examples": [
                    {
                        "description": null,
                        "duration": 1,
                        "duration_unit": "monthly",
                        "name": "string",
                        "order": 1,
                        "minimum_amount": "string",
                        "discount": {
                            "discount_type": "percentage",
                            "percentage_discount": 15
                        }
                    }
                ],
                "properties": {
                    "description": {
                        "type": [
                            "null",
                            "string"
                        ]
                    },
                    "duration": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "How many terms of length `duration_unit` this phase is active for. If null, this phase is evergreen and active indefinitely"
                    },
                    "duration_unit": {
                        "type": "string",
                        "enum": [
                            "monthly",
                            "quarterly",
                            "annual"
                        ],
                        "description": "Term for this plan, which is the maximum cadence among all component prices"
                    },
                    "name": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Determines the ordering of the phase in a plan's lifecycle. 1 = first phase."
                    },
                    "minimum": {
                        "$ref": "#/components/schemas/Minimum-amount"
                    },
                    "discount": {
                        "$ref": "#/components/schemas/Discount"
                    }
                },
                "required": [
                    "duration_unit",
                    "minimum",
                    "discount"
                ]
            },
            "Minimum-amount": {
                "title": "Minimum-amount",
                "x-stoplight": {
                    "id": "kyos6bkftmsn9"
                },
                "type": [
                    "object",
                    "null"
                ],
                "x-internal": false,
                "properties": {
                    "minimum_amount": {
                        "type": "string",
                        "description": "Minimum amount applied"
                    },
                    "applies_to_price_ids": {
                        "type": "array",
                        "description": "List of price_ids that this minimum amount applies to. For plan/plan phase minimums, this can be a subset of prices.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "minimum_amount",
                    "applies_to_price_ids"
                ],
                "examples": [
                    {
                        "minimum_amount": "10.0",
                        "applies_to_price_ids": [
                            "h74gfhdjvn7ujokd",
                            "7hfgtgjnbvc3ujkl"
                        ]
                    }
                ]
            },
            "Maximum-amount": {
                "title": "Maximum-amount",
                "x-stoplight": {
                    "id": "3aw0h9pfsel3d"
                },
                "type": [
                    "object",
                    "null"
                ],
                "x-internal": false,
                "examples": [
                    {
                        "minimum_amount": "10.0",
                        "applies_to_price_ids": [
                            "h74gfhdjvn7ujokd",
                            "7hfgtgjnbvc3ujkl"
                        ]
                    }
                ],
                "properties": {
                    "maximum_amount": {
                        "type": "string",
                        "description": "Maximum amount applied",
                        "x-stoplight": {
                            "id": "p2fvvwlvr8s4d"
                        }
                    },
                    "applies_to_price_ids": {
                        "type": "array",
                        "description": "List of price_ids that this minimum amount applies to. For plan/plan phase minimums, this can be a subset of prices.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "maximum_amount",
                    "applies_to_price_ids"
                ]
            },
            "Customer-balance-transaction": {
                "title": "Customer balance transaction",
                "x-stoplight": {
                    "id": "gfo7pm80q3zqh"
                },
                "type": "object",
                "description": "A single change to the customer balance. All amounts are in the customer's currency.",
                "examples": [
                    {
                        "id": "cgZa3SXcsPTVyC4Y",
                        "created_at": "2022-05-01T07:01:31+00:00",
                        "type": "decrement",
                        "starting_balance": "33.00",
                        "ending_balance": "23.00",
                        "amount": "10.00",
                        "action": "manual_adjustment",
                        "description": "An optional description",
                        "invoice": {
                            "id": "gXcsPTVyC4YZa3Sc"
                        }
                    }
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A unique id for this transaction.",
                        "example": "cgZa3SXcsPTVyC4Y",
                        "minLength": 1
                    },
                    "created_at": {
                        "type": "string",
                        "description": "The creation time of this transaction.",
                        "format": "date-time",
                        "example": "2022-05-01T07:01:31+00:00",
                        "minLength": 1
                    },
                    "starting_balance": {
                        "type": "string",
                        "description": "The original value of the customer's balance prior to the transaction, in the customer's currency.",
                        "example": "33.00",
                        "minLength": 1
                    },
                    "ending_balance": {
                        "type": "string",
                        "description": "The new value of the customer's balance prior to the transaction, in the customer's currency.",
                        "example": "22.00",
                        "minLength": 1
                    },
                    "amount": {
                        "type": "string",
                        "description": "The value of the amount changed in the transaction.",
                        "example": "11.00",
                        "minLength": 1
                    },
                    "action": {
                        "type": "string",
                        "description": "Describes the reason that this transaction took place.",
                        "enum": [
                            "applied_to_invoice",
                            "prorated_refund",
                            "manual_adjustment"
                        ]
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "An optional description provided for manual customer balance adjustments.",
                        "example": "An optional description"
                    },
                    "invoice": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "description": "The Invoice associated with this transaction",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "description": "The Invoice id",
                                "example": "gXcsPTVyC4YZa3Sc",
                                "minLength": 1
                            }
                        }
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "increment",
                            "decrement"
                        ]
                    },
                    "credit_note": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "x-stoplight": {
                            "id": "shd48r5eiiobm"
                        },
                        "description": "The Credit note associated with this transaction. This may appear as the result of a credit note being applied to an invoice and balance is added back to the customer balance or it is being reapplied to the invoice.",
                        "required": [
                            "id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "x-stoplight": {
                                    "id": "n4ppaxbxhoayo"
                                },
                                "description": "The id of the Credit note"
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "created_at",
                    "starting_balance",
                    "ending_balance",
                    "amount",
                    "action",
                    "description",
                    "invoice",
                    "type"
                ]
            },
            "Customer-tax-id": {
                "title": "Customer Tax ID",
                "x-stoplight": {
                    "id": "rww1lz2xssvtl"
                },
                "type": "object",
                "description": "Tax IDs are commonly required to be displayed on customer invoices, which are added to the headers of invoices.\n\n\n### Supported Tax ID Countries and Types\n\n\n| Country        | Type         | Description                                 |\n|----------------|--------------|---------------------------------------------|\n| Australia      | `au_abn`     | Australian Business Number (AU ABN)\t        |\n| Australia      | `au_arn`     | Australian Taxation Office Reference Number |\n| Austria        | `eu_vat`     | European VAT number                         |\n| Belgium        | `eu_vat`     | European VAT number                         |\n| Brazil         | `br_cnpj`    | Brazilian CNPJ number                       |\n| Brazil         | `br_cpf`     | Brazilian CPF number\t                       |\n| Bulgaria       | `bg_uic`     | Bulgaria Unified Identification Code        |\n| Bulgaria       | `eu_vat`     | European VAT number                         |\n| Canada         | `ca_bn`      | Canadian BN                                 |\n| Canada         | `ca_gst_hst` | Canadian GST/HST number                     |\n| Canada         | `ca_pst_bc`  | Canadian PST number (British Columbia)      |\n| Canada         | `ca_pst_mb`  | Canadian PST number (Manitoba)              |\n| Canada         | `ca_pst_sk`  | Canadian PST number (Saskatchewan)          |\n| Canada         | `ca_qst`     | Canadian QST number (Québec)                |\n| Chile          | `cl_tin`     | Chilean TIN                                 |\n| Croatia        | `eu_vat`     | European VAT number                         |\n| Cyprus         | `eu_vat`     | European VAT number                         |\n| Czech Republic | `eu_vat`     | European VAT number                         |\n| Denmark        | `eu_vat`     | European VAT number                         |\n| Egypt          | `eg_tin`     | Egyptian Tax Identification Number\t         |\n| Estonia   | `eu_vat`     | European VAT number   |                                                                             \n| EU        | `eu_oss_vat` | European One Stop Shop VAT number for non-Union scheme                                                   |\n| Finland   | `eu_vat`     | European VAT number                                                                                      |\n| France    | `eu_vat`     | European VAT number                                                                                      |\n| Georgia   | `ge_vat`     | Georgian VAT                                                                                             |\n| Germany   | `eu_vat`     | European VAT number                                                                                      |\n| Greece    | `eu_vat`     | European VAT number                                                                                      |\n| Hong Kong | `hk_br`      | Hong Kong BR number                                                                                      |\n| Hungary   | `eu_vat`     | European VAT number                                                                                      |\n| Hungary   | `hu_tin`     | Hungary tax number (adószám)\t                                                                            |\n| Iceland   | `is_vat`     | Icelandic VAT                                                                                            |\n| India     | `in_gst`     | Indian GST number                                                                                        |\n| Indonesia | `id_npwp`    | Indonesian NPWP number                                                                                   |\n| Ireland   | `eu_vat`     | European VAT number                                                                                      |\n| Israel    | `il_vat`     | Israel VAT                                                                                               |\n| Italy     | `eu_vat`     | European VAT number                                                                                      |\n| Japan     | `jp_cn`      | Japanese Corporate Number (*Hōjin Bangō*)                                                                |\n| Japan     | `jp_rn`      | Japanese Registered Foreign Businesses' Registration Number (*Tōroku Kokugai Jigyōsha no Tōroku Bangō*)\t |\n| Japan     | `jp_trn`     | Japanese Tax Registration Number (*Tōroku Bangō*)\t                                                       |\n| Kenya     | `ke_pin`     | Kenya Revenue Authority Personal Identification Number                                                   |\n| Latvia    | `eu_vat`     | European VAT number                                                                                  |\n| Liechtenstein | `li_uid`  | Liechtensteinian UID number           |\n| Lithuania     | `eu_vat`  | European VAT number\t                  |\n| Luxembourg    | `eu_vat`  | European VAT number\t                  |\n| Malaysia      | `my_frp`  | Malaysian FRP number                  |\n| Malaysia      | `my_itn`  | Malaysian ITN                         |\n| Malaysia      | `my_sst`  | Malaysian SST number                  |\n| Malta         | `eu_vat ` | European VAT number                   |\n| Mexico        | `mx_rfc`  | Mexican RFC number                    |\n| Netherlands   | `eu_vat`  | European VAT number\t                  |\n| New Zealand   | `nz_gst`  | New Zealand GST number\t               |\n| Norway        | `no_vat`  | Norwegian VAT number                  |\n| Philippines   | `ph_tin\t` | Philippines Tax Identification Number |\n| Poland        | `eu_vat`  | European VAT number                   |\n| Portugal      | `eu_vat`  | European VAT number                   |\n| Romania       | `eu_vat`  | European VAT number                   |\n| Russia        | `ru_inn`  | Russian INN                           |\n| Russia        | `ru_kpp`  | Russian KPP                           |\n| Saudi Arabia  | `sg_gst`  | Singaporean GST                       |\n| Singapore     | `sg_uen`  | Singaporean UEN\t                      |\n| Slovakia      | `eu_vat`  | European VAT number                   |\n| Slovenia      | `eu_vat`  | European VAT number                   |\n| Slovenia             | `si_tin` | Slovenia tax number (davčna številka)\t             |\n| South Africa\t        | `za_vat` | South African VAT number                           |\n| South Korea          | `kr_brn` | Korean BRN                                         |\n| Spain                | `es_cif` | Spanish NIF number (previously Spanish CIF number) |\n| Spain                | `eu_vat` | European VAT number\t                               |\n| Sweden               | `eu_vat` | European VAT number                                |\n| Switzerland          | `ch_vat` | Switzerland VAT number\t                            |\n| Taiwan               | `tw_vat` | Taiwanese VAT\t                                     |\n| Thailand             | `th_vat` | Thai VAT                                           |\n| Turkey               | `tr_tin` | Turkish Tax Identification Number                  |\n| Ukraine              | `ua_vat` | Ukrainian VAT                                      |\n| United Arab Emirates | `ae_trn` | United Arab Emirates TRN\t                          |\n| United Kingdom       | `eu_vat` | Northern Ireland VAT number                        |\n| United Kingdom       | `gb_vat` | United Kingdom VAT number                          |\n| United States        | `us_ein` | United States EIN                                  |\n\n",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "One of `ae_trn`, `au_abn`, `au_arn`, `bg_uic`, `br_cn`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_vat`, `cl_tin`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `no_vat`, `nz_gst`, `ph_tin`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, or `za_va`"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the ID"
                    },
                    "country": {
                        "type": "string",
                        "description": "Two-letter ISO code representing the country of the tax ID"
                    }
                },
                "required": [
                    "type",
                    "value",
                    "country"
                ]
            },
            "Coupon": {
                "title": "Coupon",
                "x-stoplight": {
                    "id": "n91gatzqhr0ij"
                },
                "type": "object",
                "description": "A coupon represents a reusable discount configuration, and have an attached redemption code that can be issued to your end users. Coupons are most often used in self-serve signup or upgrade flows in your checkout experience or billing portal.\n\nTo redeem a coupon, pass the `redemption_code` property in the [create subscription](https://docs.withorb.com/docs/orb-docs/api-reference/operations/create-a-subscription) or [schedule plan change](https://docs.withorb.com/docs/orb-docs/api-reference/operations/create-a-subscription-schedule-plan-change) request. \n",
                "examples": [
                    {
                        "archived_at": null,
                        "discount": {
                            "applies_to_price_ids": [],
                            "discount_type": "percentage",
                            "percentage_discount": 0.25
                        },
                        "duration_in_months": 12,
                        "id": "7iz2yanVjQoBZhyH",
                        "max_redemptions": null,
                        "redemption_code": "HALFOFF",
                        "times_redeemed": 1
                    }
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "redemption_code": {
                        "type": "string",
                        "description": "This string can be used to redeem this coupon for a given subscription."
                    },
                    "discount": {
                        "$ref": "#/components/schemas/Discount",
                        "description": "Note: Coupons only support amount and percentage-type discounts."
                    },
                    "times_redeemed": {
                        "type": "integer",
                        "description": "The number of times this coupon has been redeemed."
                    },
                    "duration_in_months": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "This allows for a coupon's discount to apply for a limited time (determined in months); a `null` value here means \"unlimited time\"."
                    },
                    "max_redemptions": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "The maximum number of redemptions allowed for this coupon before it is exhausted; `null` here means \"unlimited\"."
                    },
                    "archived_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "An archived coupon can no longer be redeemed. Active coupons will have a value of null for `archived_at`; this field will be non-null for archived coupons.",
                        "readOnly": true
                    }
                },
                "required": [
                    "redemption_code",
                    "discount"
                ],
                "x-tags": [
                    "Coupon"
                ]
            },
            "Backfill": {
                "title": "Backfill",
                "x-stoplight": {
                    "id": "9ficm0ac2mim0"
                },
                "type": "object",
                "description": "A backfill represents an update to historical usage data, adding or replacing events in a timeframe.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "s3wf6ze54xok9"
                        },
                        "description": "The status of the backfill.",
                        "enum": [
                            "pending",
                            "reflected",
                            "pending_revert",
                            "reverted"
                        ]
                    },
                    "close_time": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "0xumnoqcv536e"
                        },
                        "description": "If in the future, the time at which the backfill will automatically close. If in the past, the time at which the backfill was closed.",
                        "format": "date-time"
                    },
                    "reverted_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "x-stoplight": {
                            "id": "5r35yfth7204x"
                        },
                        "format": "date-time",
                        "description": "The time at which this backfill was reverted."
                    },
                    "timeframe_start": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "wfoqud4qok76w"
                        },
                        "format": "date-time"
                    },
                    "timeframe_end": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "ei08ut5ltnchd"
                        },
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "t66dpme8q6meh"
                        },
                        "format": "date-time"
                    },
                    "customer_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "x-stoplight": {
                            "id": "i1o23wm5eqmdx"
                        },
                        "description": "The customer ID this backfill is scoped to. If null, this backfill is not scoped to a single customer."
                    }
                },
                "required": [
                    "id",
                    "status",
                    "close_time",
                    "timeframe_start",
                    "timeframe_end",
                    "created_at"
                ]
            },
            "Credit-note": {
                "title": "Credit-note",
                "x-stoplight": {
                    "id": "o4b41lrdhbcqk"
                },
                "type": "object",
                "examples": [],
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "UFVGEkVD5FkrAuvD",
                        "description": "The unique id of this credit note."
                    },
                    "created_at": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "unes1onc3x9c9"
                        },
                        "example": "2022-05-01T07:01:31+00:00",
                        "format": "date-time",
                        "description": "The creation time of the resource in Orb."
                    },
                    "voided_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "x-stoplight": {
                            "id": "wdif62kypakuj"
                        },
                        "example": "2022-05-01T07:01:31+00:00",
                        "format": "date-time",
                        "description": "The time when the credit note was voided in Orb, if applicable."
                    },
                    "credit_note_number": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "04idm51bufi28"
                        },
                        "example": "VWEETM-00009-CN-1",
                        "description": "The unique identifier for credit notes."
                    },
                    "invoice_id": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "xzelrwrnlydfs"
                        },
                        "example": "5NXPgHK6zTxDgmmt",
                        "description": "The Invoice resource that this credit note is applied to."
                    },
                    "memo": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "yr415sja00gwh"
                        },
                        "description": "An optional memo supplied on the credit note."
                    },
                    "reason": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "aeejptd44bpkq"
                        },
                        "description": "A reason for this credit note, which can be one of \"Duplicate\", \"Fraudulent\", \"Order change\", \"Product unsatisfactory\"",
                        "enum": [
                            "Duplicate",
                            "Fraudulent",
                            "Order change",
                            "Product unsatisfactory"
                        ],
                        "example": "Product unsatisfactory"
                    },
                    "type": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "1n41ak4btp9e5"
                        },
                        "description": "Describing if this is an `adjustment` or a `refund` ",
                        "enum": [
                            "refund",
                            "adjustment"
                        ]
                    },
                    "subtotal": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "q5nxyqdfec8hw"
                        },
                        "description": "The total prior to any creditable invoice-level discounts or minimums",
                        "example": "10.00"
                    },
                    "total": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "qwonmhhz1ids5"
                        },
                        "description": "The total including creditable invoice-level discounts or minimums, and tax",
                        "example": "10.00"
                    },
                    "credit_note_pdf": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "2pa5kwh2iynlw"
                        },
                        "description": "A URL to a PDF version of this credit note."
                    },
                    "customer": {
                        "type": "object",
                        "x-stoplight": {
                            "id": "775006jh52slg"
                        },
                        "description": "The Customer who is receiving this credit note.",
                        "required": [
                            "id",
                            "external_customer_id"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "x-stoplight": {
                                    "id": "n5ax0ups0dxxp"
                                },
                                "example": "5FkrAuvDVGEkVUFD"
                            },
                            "external_customer_id": {
                                "type": "string",
                                "x-stoplight": {
                                    "id": "hhq1o1zkgyvda"
                                },
                                "example": "my_customer"
                            }
                        }
                    },
                    "minimum_amount_refunded": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "cd3eltk4s4tzw"
                        },
                        "description": "Any credited amount from the applied minimum on the invoice.",
                        "example": "10.00"
                    },
                    "maximum_amount_adjustment": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "gldg32htvqt2g"
                        },
                        "description": "Any credited amount from the applied maximum on the invoice.",
                        "example": "10.00"
                    },
                    "discounts": {
                        "type": "array",
                        "x-stoplight": {
                            "id": "687hs7v3l0odd"
                        },
                        "description": "Any discounts applied on the original invoice.",
                        "items": {
                            "$ref": "#/components/schemas/Discount",
                            "x-stoplight": {
                                "id": "nip8lseub8qd1"
                            }
                        }
                    },
                    "line_items": {
                        "type": "array",
                        "x-stoplight": {
                            "id": "fl4fxu37npty6"
                        },
                        "description": "All of the line items associated with this credit note",
                        "items": {
                            "$ref": "#/components/schemas/Credit-note-line-item",
                            "x-stoplight": {
                                "id": "5gbtflzl0uweo"
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "created_at",
                    "voided_at",
                    "credit_note_number",
                    "invoice_id",
                    "memo",
                    "reason",
                    "type",
                    "subtotal",
                    "total",
                    "credit_note_pdf",
                    "customer",
                    "minimum_amount_refunded",
                    "discounts",
                    "line_items"
                ]
            },
            "Credit-note-line-item": {
                "title": "Credit-note-line-item",
                "x-stoplight": {
                    "id": "rcddyhmbizwe2"
                },
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "UFVGEkVD5FkrAuvD",
                        "description": "The Orb id of this resource"
                    },
                    "name": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "kfktqw91zz05q"
                        },
                        "example": "Usage",
                        "description": "The name of the corresponding invoice line item"
                    },
                    "subtotal": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "30f1a5mm1uu54"
                        },
                        "example": "10.00",
                        "description": "The amount of the line item, excluding any line item minimums and discounts"
                    },
                    "amount": {
                        "type": "string",
                        "x-stoplight": {
                            "id": "eu49q2sgdrrsn"
                        },
                        "example": "10.00",
                        "description": "The amount of the line item, including any line item minimums and discounts"
                    },
                    "quantity": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "x-stoplight": {
                            "id": "2tbw7mvy832i4"
                        },
                        "example": "1",
                        "description": "An optional quantity credited."
                    },
                    "discounts": {
                        "$ref": "#/components/schemas/Discount",
                        "x-stoplight": {
                            "id": "83l0d33isw2zo"
                        },
                        "description": "Any line items discounts from the invoice's line item."
                    },
                    "tax_amounts": {
                        "type": "array",
                        "x-stoplight": {
                            "id": "x4fsao242bcbc"
                        },
                        "description": "Any tax amounts applied onto the line item.",
                        "items": {
                            "x-stoplight": {
                                "id": "nki7cjp1vfwxm"
                            },
                            "type": "object",
                            "properties": {
                                "tax_rate_description": {
                                    "type": "string",
                                    "x-stoplight": {
                                        "id": "67n0jcitbb1js"
                                    }
                                },
                                "tax_rate_percentage": {
                                    "type": "string",
                                    "x-stoplight": {
                                        "id": "p6logtw823j7c"
                                    }
                                },
                                "amount": {
                                    "type": "string",
                                    "x-stoplight": {
                                        "id": "2d09glct74akx"
                                    }
                                }
                            },
                            "required": [
                                "tax_rate_description",
                                "tax_rate_percentage",
                                "amount"
                            ]
                        }
                    },
                    "sub_line_items": {
                        "type": "array",
                        "x-stoplight": {
                            "id": "wxz6lnlqgft2a"
                        },
                        "description": "Any sub line items that may be credited.",
                        "items": {
                            "x-stoplight": {
                                "id": "h8ghtk3t1clps"
                            },
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "x-stoplight": {
                                        "id": "8on0cjszc2av9"
                                    },
                                    "example": "Item"
                                },
                                "quantity": {
                                    "type": "number",
                                    "x-stoplight": {
                                        "id": "0ph4mryaztsap"
                                    },
                                    "example": "1"
                                },
                                "amount": {
                                    "type": "string",
                                    "x-stoplight": {
                                        "id": "2tho4q2g9g2km"
                                    },
                                    "example": "10.00"
                                }
                            },
                            "required": [
                                "name",
                                "quantity",
                                "amount"
                            ]
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "subtotal",
                    "amount",
                    "quantity",
                    "discounts",
                    "tax_amounts",
                    "sub_line_items"
                ]
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "bearerFormat": "auth-scheme",
                "description": "API Keys can be issued in the Orb's web application. Orb recommends that separate API keys be created for each service that you'd like to attribute actions to separately (e.g. a key for ingesting events, and a key for manipulating customer balances automatically). This also allows you to rotate keys and revoke access more flexibly.",
                "scheme": "bearer",
                "type": "http"
            }
        },
        "responses": {
            "Ingestion": {
                "description": "",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "duplicate": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "ingested": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "validation_failed": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "idempotency_key": {
                                                "type": "string"
                                            },
                                            "validation_errors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "examples": {}
                    },
                    "application/xml": {
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                }
            },
            "Customer-(full)": {
                "description": "Example response",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "API Key - 1": []
        }
    ]
}