[package]
name = "dynamodb"
authors = ["Grafbase"]
description = "An implementation of the built-in Grafbase database using DynamoDB and SQLite"
version = "0.1.0"
edition = "2021"
license = "MPL-2.0"
homepage = "https://grafbase.com"
repository = "https://github.com/grafbase/grafbase"
keywords = ["dynamodb", "sqlite", "database", "grafbase"]

[dependencies]
again = { version = "0.1", default-features = false, features = [
  "wasm-bindgen",
  "log",
] }
async-trait = "0.1"
chrono = { version = "0.4", default-features = false, features = [
  "clock",
  "std",
] }
derivative = "2.2"
dynomite = "0.10"
futures = "0.3"
futures-util = { workspace = true, features = ["std", "async-await"] }
indexmap = { git = "https://github.com/bluss/indexmap.git", rev = "eedabaca9f84e520eab01325b305c08f3773e66c" }
itertools = { workspace = true }
log = { path = "../log", features = ["with-worker"] }
quick-error = "2"
rusoto_core = { workspace = true }
rusoto_dynamodb = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
web-time = { workspace = true }

dynamodb-utils = { path = "../dynamodb-utils" }
grafbase-types = { path = "../grafbase-types" }
dataloader = { workspace = true }
async-runtime = { workspace = true }
graph-entities = { workspace = true }

tracing = { workspace = true, optional = true }

# feature="sqlite"
cfg-if = "1"
indoc = { version = "2", optional = true }
maplit = { version = "1", optional = true }
once_cell = { version = "1", optional = true }
regex = { version = "1", optional = true }
send_wrapper = { version = "0.6", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
reqwest = { version = "0.11", default-features = false, optional = true, features = [
  "json",
] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
reqwest = { version = "0.11", default-features = false, optional = true, features = [
  "json",
  "rustls-tls",
] }

[features]
default = []
local = []
sqlite = ["indoc", "maplit", "once_cell", "regex", "reqwest", "send_wrapper"]
tracing = ["dep:tracing"]
