version: '3'
services:
  # MongoDB
  data-api:
    image: grafbase/mongodb-data-api:latest
    restart: always
    environment:
      MONGODB_DATABASE_URL: 'mongodb://grafbase:grafbase@mongodb:27017'
    ports:
      - '3000:3000'
    depends_on:
      - mongodb
    networks:
      - databases

  mongodb:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'grafbase'
      MONGO_INITDB_ROOT_PASSWORD: 'grafbase'
      INIT_WAIT_SEC: $INIT_WAIT_SEC
    ports:
      - '27018:27017'
    networks:
      - databases

  # Postgres
  postgres:
    image: postgres:16
    restart: always
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_PASSWORD: 'grafbase'
      POSTGRES_HOST_AUTH_METHOD: 'md5'
      POSTGRES_INITDB_ARGS: '--auth-host=md5'
    ports:
      - '5432:5432'
    networks:
      - databases

  pgbouncer:
    image: brainsam/pgbouncer:latest
    restart: always
    environment:
      DB_HOST: 'postgres'
      DB_PORT: '5432'
      DB_USER: 'postgres'
      DB_PASSWORD: 'grafbase'
      POOL_MODE: 'transaction'
      MAX_CLIENT_CONN: '100000'
    networks:
      - databases
    ports:
      - '6432:6432'

  # Pretty much copy pasted from
  # https://www.ory.sh/docs/hydra/5min-tutorial
  # https://github.com/ory/hydra/blob/master/quickstart.yml
  #
  # I only removed the consent service as we don't use it.
  hydra:
    image: oryd/hydra:v2.2.0
    ports:
      - '4444:4444' # Public port
      - '4445:4445' # Admin port
    command: serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - type: volume
        source: hydra-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./data/hydra-config
        target: /etc/config/hydra
    environment:
      DSN: 'sqlite:///var/lib/sqlite/db.sqlite?_fk=true'
      URLS_SELF_ISSUER: 'http://127.0.0.1:4444'
    restart: always
    depends_on:
      - hydra-migrate
    networks:
      - hydra

  hydra-migrate:
    image: oryd/hydra:v2.2.0
    environment:
      DSN: 'sqlite:///var/lib/sqlite/db.sqlite?_fk=true'
    command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - type: volume
        source: hydra-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./data/hydra-config
        target: /etc/config/hydra
    restart: on-failure
    networks:
      - hydra

  # Adding a second hydra to act as a different OAuth2 provider
  hydra-2:
    image: oryd/hydra:v2.2.0
    ports:
      - '4454:4454' # Public port
      - '4455:4455' # Admin port
    command: serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - type: volume
        source: hydra-2-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./data/hydra-config
        target: /etc/config/hydra
    environment:
      DSN: 'sqlite:///var/lib/sqlite/db.sqlite?_fk=true'
      URLS_SELF_ISSUER: 'http://127.0.0.1:4454'
      SERVE_PUBLIC_PORT: '4454'
      SERVE_ADMIN_PORT: '4455'
    restart: always
    depends_on:
      - hydra-migrate
    networks:
      - hydra-2

  hydra-2-migrate:
    image: oryd/hydra:v2.2.0
    environment:
      DSN: 'sqlite:///var/lib/sqlite/db.sqlite?_fk=true'
    command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - type: volume
        source: hydra-2-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./data/hydra-config
        target: /etc/config/hydra
    restart: on-failure
    networks:
      - hydra-2

networks:
  hydra:
  hydra-2:
  databases:

volumes:
  hydra-sqlite:
  hydra-2-sqlite:
