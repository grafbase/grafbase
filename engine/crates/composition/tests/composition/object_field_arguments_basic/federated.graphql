directive @core(feature: String!) repeatable on SCHEMA

directive @join__owner(graph: join__Graph!) on OBJECT

directive @join__type(
    graph: join__Graph!
    key: String!
) repeatable on OBJECT | INTERFACE

directive @join__field(
    graph: join__Graph
    requires: String
    provides: String
) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

enum join__Graph {
    HISTORY @join__graph(name: "history", url: "http://example.com/history")
    INVENTORY @join__graph(name: "inventory", url: "http://example.com/inventory")
    PERFORMANCE @join__graph(name: "performance", url: "http://example.com/performance")
}

type Query {
    getRollerCoaster(id: ID!): RollerCoaster
}

type RollerCoaster {
    id: ID!
    name: String!
    height: Float!
    speed: Float!
    manufacturer: String!
    historicalData: [HistoricalData] @join__field(graph: HISTORY) @inaccessible
    numberOfInversions: Int! @join__field(graph: PERFORMANCE) @inaccessible
}

type HistoricalData {
    year: Int! @join__field(graph: HISTORY)
    visitors: Int! @join__field(graph: HISTORY)
    incidents: Int! @join__field(graph: HISTORY)
}
