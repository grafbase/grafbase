enum join__Graph {
    HISTORY @join__graph(name: "history", url: "history")
    INVENTORY @join__graph(name: "inventory", url: "inventory")
    PERFORMANCE @join__graph(name: "performance", url: "performance")
}

type Query {
    getRollerCoaster(id: ID!): RollerCoaster @join__field(graph: HISTORY) @join__field(graph: INVENTORY) @join__field(graph: PERFORMANCE)
}

type RollerCoaster {
    id: ID! @join__field(graph: HISTORY) @join__field(graph: INVENTORY) @join__field(graph: PERFORMANCE)
    name: String! @join__field(graph: HISTORY) @join__field(graph: INVENTORY) @join__field(graph: PERFORMANCE)
    height: Float! @join__field(graph: HISTORY) @join__field(graph: INVENTORY) @join__field(graph: PERFORMANCE)
    speed: Float! @join__field(graph: HISTORY) @join__field(graph: INVENTORY) @join__field(graph: PERFORMANCE)
    manufacturer: String! @join__field(graph: HISTORY) @join__field(graph: INVENTORY)
    historicalData: [HistoricalData] @join__field(graph: HISTORY)
    numberOfInversions: Int! @join__field(graph: PERFORMANCE)
}

type HistoricalData {
    year: Int! @join__field(graph: HISTORY)
    visitors: Int! @join__field(graph: HISTORY)
    incidents: Int! @join__field(graph: HISTORY)
}
