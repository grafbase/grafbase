directive @core(feature: String!) repeatable on SCHEMA

directive @join__owner(graph: join__Graph!) on OBJECT

directive @join__type(
    graph: join__Graph!
    key: String!
    resolvable: Boolean = true
) repeatable on OBJECT | INTERFACE

directive @join__field(
    graph: join__Graph
    requires: String
    provides: String
) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

enum join__Graph {
    ACCOUNTS @join__graph(name: "accounts", url: "http://example.com/accounts")
    PRODUCTS @join__graph(name: "products", url: "http://example.com/products")
}

type User {
    id: ID! @join__field(graph: ACCOUNTS)
    posts: [Post!]! @join__field(graph: ACCOUNTS)
}

type Post
    @join__type(graph: ACCOUNTS, key: "id", resolvable: false)
    @join__type(graph: PRODUCTS, key: "id")
{
    id: ID!
    name: String @join__field(graph: PRODUCTS)
}

type Query {
    getUser(id: ID!): User @join__field(graph: ACCOUNTS)
}
